// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final moduleAuthenticationBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"lib/modules/authentication/api/authentication_api_interface.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2VudGl0aWVzL3VzZXJfZW50aXR5LmRhcnQnOwoKYWJzdHJhY3QgY2xhc3MgQXV0aGVudGljYXRpb25BcGkgewogIC8vLyBHZXQgdGhlIGN1cnJlbnQgdXNlciBjcmVkZW50aWFscyBvciBudWxsIGlmIG5vdCBjb25uZWN0ZWQKICBGdXR1cmU8Q3JlZGVudGlhbHM/PiBnZXQoKTsKCiAgLy8vIFNpZ251cCBhIG5ldyB1c2VyIHVzaW5nIFtlbWFpbF0gYW5kIFtwYXNzd29yZF0KICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ251cChTdHJpbmcgZW1haWwsIFN0cmluZyBwYXNzd29yZCk7CgogIC8vLyBTaWduaW4gYW4gZXhpc3RpbmcgdXNlciB1c2luZyBbZW1haWxdIGFuZCBbcGFzc3dvcmRdCiAgLy8vIElmIHRoZSB1c2VyIGlzIG5vdCBmb3VuZCwgYW4gW1NpZ25pbkV4Y2VwdGlvbl0gaXMgdGhyb3duCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWduaW4oU3RyaW5nIGVtYWlsLCBTdHJpbmcgcGFzc3dvcmQpOwoKICAvLy8gU2lnbm91dCB0aGUgY3VycmVudCB1c2VyCiAgRnV0dXJlPHZvaWQ+IHNpZ25vdXQoKTsKCiAgLy8vIFNpZ25pbiBhbm9ueW1vdXNseQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluQW5vbnltb3VzbHkoKTsKCiAgLy8vIFNpZ25pbiB3aXRoIEdvb2dsZSBhY2NvdW50CiAgLy8vIFJlcXVpcmVzIHRoZSBbZ29vZ2xlX3NpZ25faW5dKGh0dHBzOi8vcHViLmRldi9wYWNrYWdlcy9nb29nbGVfc2lnbl9pbikgcGFja2FnZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEdvb2dsZSgpOwoKICAvLy8gU2lnbmluIHdpdGggR29vZ2xlIFBsYXkgYWNjb3VudAogIC8vLyBSZXF1aXJlcyB0aGUgW2dvb2dsZV9zaWduX2luXShodHRwczovL3B1Yi5kZXYvcGFja2FnZXMvZ29vZ2xlX3NpZ25faW4pIHBhY2thZ2UKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ25pbldpdGhHb29nbGVQbGF5KCk7CgogIC8vLyBTaWduaW4gd2l0aCBGYWNlYm9vayBhY2NvdW50CiAgLy8vIFJlcXVpcmVzIHRoZSBbZmx1dHRlcl9mYWNlYm9va19hdXRoXShodHRwczovL3B1Yi5kZXYvcGFja2FnZXMvZmx1dHRlcl9mYWNlYm9va19hdXRoKSBwYWNrYWdlCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWduaW5XaXRoRmFjZWJvb2soKTsKCiAgLy8vIFNpZ25pbiB3aXRoIEFwcGxlIGFjY291bnQKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ25pbldpdGhBcHBsZSgpOwoKICAvLy8gUmVjb3ZlciBwYXNzd29yZCBpZiB1c2VyIHNpZ25lZCB1cCB3aXRoIGVtYWlsL3Bhc3N3b3JkCiAgRnV0dXJlPHZvaWQ+IHJlY292ZXJQYXNzd29yZChTdHJpbmcgZW1haWwpOwoKICB7eyNhbm9ueW1vdXNfYXV0aH19Ly8vIEFzIGZpcmViYXNlIGRvZXMgbm90IGhhdmUgYW55IHRyaWdnZXIgZm9yIHdoZW4gYSB1c2VyIGxpbmtzIGFuIGFjY291bnQsCiAgLy8vIFlvdSBtaWdodCB3YW50IHRvIGNhbGwgdGhpcyBmdW5jdGlvbiBhZnRlciBpdAogIC8vLyBTbyB5b3UgY2FuIGZvciBleGFtcGxlIGFkZCB0aGUgdXNlciBlbWFpbCB0byB5b3VyIGVtYWlsIG1hcmtldGluZyBsaXN0CiAgRnV0dXJlPHZvaWQ+IG9uTGlua2VkQWNjb3VudCgpO3t7L2Fub255bW91c19hdXRofX0KICAKICB7eyNhbm9ueW1vdXNfYXV0aH19Ly8vIFNpZ24gdXAgd2l0aCBHb29nbGUgYW5kIGxpbmsgdGhlIGFjY291bnQgdG8gdGhlIGN1cnJlbnQgYW5vbnltb3VzIHVzZXIuCiAgLy8vIFRoZSBhbm9ueW1vdXMgYWNjb3VudCB3aWxsIG5vdyBiZSBsaW5rZWQgdG8gdGhlIEdvb2dsZSBhY2NvdW50LgogIC8vLyBUaGUgdXNlciBjYW4gbm93IHNpZ24gaW4gd2l0aCB0aGUgR29vZ2xlIGFjY291bnQuCiAgLy8vIEhpcyBkYXRhIHdpbGwgYmUgcHJlc2VydmVkLgogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbnVwRnJvbUFub255bW91c1dpdGhHb29nbGUoKTt7ey9hbm9ueW1vdXNfYXV0aH19CgogIHt7I2Fub255bW91c19hdXRofX0vLy8gU2lnbiB1cCB3aXRoIEFwcGxlIGFuZCBsaW5rIHRoZSBhY2NvdW50IHRvIHRoZSBjdXJyZW50IGFub255bW91cyB1c2VyLgogIC8vLyBUaGUgYW5vbnltb3VzIGFjY291bnQgd2lsbCBub3cgYmUgbGlua2VkIHRvIHRoZSBBcHBsZSBhY2NvdW50LgogIC8vLyBUaGUgdXNlciBjYW4gbm93IHNpZ24gaW4gaGlzIEFwcGxlIGFjY291bnQgb24gYW5vdGhlciBkZXZpY2UuIAogIC8vLyBIaXMgZGF0YSB3aWxsIGJlIHByZXNlcnZlZC4KICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ251cEZyb21Bbm9ueW1vdXNXaXRoQXBwbGUoKTt7ey9hbm9ueW1vdXNfYXV0aH19Cgp9Cg==","type":"text"},{"path":"lib/modules/authentication/api/firebase_authentication_api.dart","data":"","type":"text"},{"path":"lib/modules/authentication/api/restApi_authentication_api.dart","data":"","type":"text"},{"path":"lib/modules/authentication/api/supabase_authentication_api.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9iYXNlX2FwaV9leGNlcHRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvYXBpL2h0dHBfY2xpZW50LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvZW50aXRpZXMvdXNlcl9lbnRpdHkuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vYXBpL2F1dGhlbnRpY2F0aW9uX2FwaV9pbnRlcmZhY2UuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CmltcG9ydCAncGFja2FnZTpsb2dnZXIvbG9nZ2VyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6c3VwYWJhc2VfZmx1dHRlci9zdXBhYmFzZV9mbHV0dGVyLmRhcnQnOwoKZmluYWwgYXV0aGVudGljYXRpb25BcGlQcm92aWRlciA9IFByb3ZpZGVyPEF1dGhlbnRpY2F0aW9uQXBpPigKICAocmVmKSA9PiBTdXBhYmFzZUF1dGhlbnRpY2F0aW9uQXBpKAogICAgY2xpZW50OiBTdXBhYmFzZS5pbnN0YW5jZS5jbGllbnQsCiAgKSwKKTsKCmNsYXNzIFN1cGFiYXNlQXV0aGVudGljYXRpb25BcGkgaW1wbGVtZW50cyBBdXRoZW50aWNhdGlvbkFwaSB7CiAgZmluYWwgU3VwYWJhc2VDbGllbnQgY2xpZW50OwoKICBTdXBhYmFzZUF1dGhlbnRpY2F0aW9uQXBpKHsKICAgIHJlcXVpcmVkIHRoaXMuY2xpZW50LAogIH0pOwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gcmVjb3ZlclBhc3N3b3JkKFN0cmluZyBlbWFpbCkgewogICAgcmV0dXJuIGNsaWVudC5hdXRoLnJlc2V0UGFzc3dvcmRGb3JFbWFpbChlbWFpbCk7CiAgfQoKICBGdXR1cmU8Q3JlZGVudGlhbHM/PiBnZXQoKSBhc3luYyB7CiAgICBmaW5hbCB1c2VyID0gY2xpZW50LmF1dGguY3VycmVudFVzZXI7CiAgICBpZiAodXNlciA9PSBudWxsKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgcmV0dXJuIENyZWRlbnRpYWxzKGlkOiB1c2VyLmlkLCB0b2tlbjogJycpOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWdudXAoU3RyaW5nIGVtYWlsLCBTdHJpbmcgcGFzc3dvcmQpIGFzeW5jIHsKICAgIHJldHVybiBjbGllbnQuYXV0aAogICAgICAgIC5zaWduVXAoCiAgICAgICAgICBlbWFpbDogZW1haWwsCiAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsCiAgICAgICAgKQogICAgICAgIC50aGVuKAogICAgICAgICAgKHZhbHVlKSA9PiBDcmVkZW50aWFscygKICAgICAgICAgICAgaWQ6IHZhbHVlLnVzZXIhLmlkLAogICAgICAgICAgICB0b2tlbjogdmFsdWUuc2Vzc2lvbj8uYWNjZXNzVG9rZW4gPz8gJycsCiAgICAgICAgICApLAogICAgICAgICk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ25pbihTdHJpbmcgZW1haWwsIFN0cmluZyBwYXNzd29yZCkgewogICAgcmV0dXJuIGNsaWVudC5hdXRoCiAgICAgICAgLnNpZ25JbldpdGhQYXNzd29yZCgKICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICApCiAgICAgICAgLnRoZW4oCiAgICAgICAgICAodmFsdWUpID0+IENyZWRlbnRpYWxzKAogICAgICAgICAgICBpZDogdmFsdWUudXNlciEuaWQsCiAgICAgICAgICAgIHRva2VuOiB2YWx1ZS5zZXNzaW9uPy5hY2Nlc3NUb2tlbiA/PyAnJywKICAgICAgICAgICksCiAgICAgICAgKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluQW5vbnltb3VzbHkoKSB7CiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3N1cGFiYXNlL2dvdHJ1ZS9pc3N1ZXMvNjgjaXNzdWVjb21tZW50LTE4MzY2NzE5NTQKICAgIHRocm93IFVuaW1wbGVtZW50ZWRFcnJvcigKICAgICAgIlN1cGFiYXNlIGRvZXNuJ3Qgc3VwcG9ydCBhbm9ueW1vdXMgYXV0aC4gVGhpcyBmZWF0dXJlIGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzcyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdXBhYmFzZS9nb3RydWUvaXNzdWVzLzY4I2lzc3VlY29tbWVudC0xODM2NjcxOTU0IiwKICAgICk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ25pbldpdGhBcHBsZSgpIHsKICAgIC8vIFRPRE86IGltcGxlbWVudCBzaWduaW5XaXRoQXBwbGUKICAgIHRocm93IFVuaW1wbGVtZW50ZWRFcnJvcigpOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWduaW5XaXRoRmFjZWJvb2soKSB7CiAgICAvLyBUT0RPOiBpbXBsZW1lbnQgc2lnbmluV2l0aEZhY2Vib29rCiAgICB0aHJvdyBVbmltcGxlbWVudGVkRXJyb3IoKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEdvb2dsZSgpIHsKICAgIC8vIFRPRE86IGltcGxlbWVudCBzaWduaW5XaXRoR29vZ2xlCiAgICB0aHJvdyBVbmltcGxlbWVudGVkRXJyb3IoKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEdvb2dsZVBsYXkoKSB7CiAgICAvLyBUT0RPOiBpbXBsZW1lbnQgc2lnbmluV2l0aEdvb2dsZVBsYXkKICAgIHRocm93IFVuaW1wbGVtZW50ZWRFcnJvcigpOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHNpZ25vdXQoKSB7CiAgICByZXR1cm4gY2xpZW50LmF1dGguc2lnbk91dCgpOwogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/api/user_entity.freezed.dart","data":"","type":"text"},{"path":"lib/modules/authentication/api/user_entity.g.dart","data":"Ly8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKCnBhcnQgb2YgJ2VudGl0aWVzL3VzZXJfZW50aXR5LmRhcnQnOwoKLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLy8gSnNvblNlcmlhbGl6YWJsZUdlbmVyYXRvcgovLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoKXyRfVXNlckVudGl0eSBfJCRfVXNlckVudGl0eUZyb21Kc29uKE1hcCBqc29uKSA9PiBfJF9Vc2VyRW50aXR5KAogICAgICBpZDoganNvblsnaWQnXSBhcyBTdHJpbmc/LAogICAgICBjcmVhdGlvbkRhdGU6IGpzb25bJ2NyZWF0aW9uX2RhdGUnXSA9PSBudWxsCiAgICAgICAgICA/IG51bGwKICAgICAgICAgIDogRGF0ZVRpbWUucGFyc2UoanNvblsnY3JlYXRpb25fZGF0ZSddIGFzIFN0cmluZyksCiAgICAgIGxhc3RVcGRhdGVEYXRlOiBqc29uWydsYXN0X3VwZGF0ZV9kYXRlJ10gPT0gbnVsbAogICAgICAgICAgPyBudWxsCiAgICAgICAgICA6IERhdGVUaW1lLnBhcnNlKGpzb25bJ2xhc3RfdXBkYXRlX2RhdGUnXSBhcyBTdHJpbmcpLAogICAgICBlbWFpbDoganNvblsnZW1haWwnXSBhcyBTdHJpbmcsCiAgICAgIG5hbWU6IGpzb25bJ25hbWUnXSBhcyBTdHJpbmcsCiAgICAgIGF2YXRhclBhdGg6IGpzb25bJ2F2YXRhclBhdGgnXSBhcyBTdHJpbmc/LAogICAgKTsKCk1hcDxTdHJpbmcsIGR5bmFtaWM+IF8kJF9Vc2VyRW50aXR5VG9Kc29uKF8kX1VzZXJFbnRpdHkgaW5zdGFuY2UpIHsKICBmaW5hbCB2YWwgPSA8U3RyaW5nLCBkeW5hbWljPnt9OwoKICB2b2lkIHdyaXRlTm90TnVsbChTdHJpbmcga2V5LCBkeW5hbWljIHZhbHVlKSB7CiAgICBpZiAodmFsdWUgIT0gbnVsbCkgewogICAgICB2YWxba2V5XSA9IHZhbHVlOwogICAgfQogIH0KCiAgd3JpdGVOb3ROdWxsKCdpZCcsIGluc3RhbmNlLmlkKTsKICB2YWxbJ2NyZWF0aW9uX2RhdGUnXSA9IGluc3RhbmNlLmNyZWF0aW9uRGF0ZT8udG9Jc284NjAxU3RyaW5nKCk7CiAgdmFsWydsYXN0X3VwZGF0ZV9kYXRlJ10gPSBpbnN0YW5jZS5sYXN0VXBkYXRlRGF0ZT8udG9Jc284NjAxU3RyaW5nKCk7CiAgdmFsWydlbWFpbCddID0gaW5zdGFuY2UuZW1haWw7CiAgdmFsWyduYW1lJ10gPSBpbnN0YW5jZS5uYW1lOwogIHZhbFsnYXZhdGFyUGF0aCddID0gaW5zdGFuY2UuYXZhdGFyUGF0aDsKICByZXR1cm4gdmFsOwp9Cg==","type":"text"},{"path":"lib/modules/authentication/providers/models/email.dart","data":"Y2xhc3MgRW1haWwgewogIGZpbmFsIFN0cmluZyBfdmFsdWU7CgogIEVtYWlsKFN0cmluZyBlbWFpbCkgOiBfdmFsdWUgPSBlbWFpbC50cmltKCk7CgogIHZvaWQgdmFsaWRhdGUoKSB7CiAgICBjb25zdCBwYXR0ZXJuID0KICAgICAgICByJ14oKFtePD4oKVtcXVxcLiw7OlxzQFwiXSsoXC5bXjw+KClbXF1cXC4sOzpcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxbWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfVxdKXwoKFthLXpBLVpcLTAtOV0rXC4pK1thLXpBLVpdezIsfSkpJCc7CiAgICBmaW5hbCByZWdleCA9IFJlZ0V4cChwYXR0ZXJuKTsKICAgIGZpbmFsIGlzVmFsaWRhdGVFbWFpbCA9IHJlZ2V4Lmhhc01hdGNoKHZhbHVlKTsKICAgIGlmICghaXNWYWxpZGF0ZUVtYWlsKSB7CiAgICAgIHRocm93IGNvbnN0IEVtYWlsRXhjZXB0aW9uKCJFbWFpbCBub3QgdmFsaWQiKTsKICAgIH0KICB9CgogIFN0cmluZyBnZXQgdmFsdWUgPT4gX3ZhbHVlOwoKICBAb3ZlcnJpZGUKICBib29sIG9wZXJhdG9yID09KE9iamVjdCBvdGhlcikgPT4KICAgICAgaWRlbnRpY2FsKHRoaXMsIG90aGVyKSB8fAogICAgICBvdGhlciBpcyBFbWFpbCAmJgogICAgICAgICAgcnVudGltZVR5cGUgPT0gb3RoZXIucnVudGltZVR5cGUgJiYKICAgICAgICAgIF92YWx1ZSA9PSBvdGhlci5fdmFsdWU7CgogIEBvdmVycmlkZQogIGludCBnZXQgaGFzaENvZGUgPT4gX3ZhbHVlLmhhc2hDb2RlOwp9CgpjbGFzcyBFbWFpbEV4Y2VwdGlvbiBpbXBsZW1lbnRzIEV4Y2VwdGlvbiB7CiAgZmluYWwgU3RyaW5nIG1lc3NhZ2U7CgogIGNvbnN0IEVtYWlsRXhjZXB0aW9uKHRoaXMubWVzc2FnZSk7CgogIEBvdmVycmlkZQogIFN0cmluZyB0b1N0cmluZygpID0+IG1lc3NhZ2U7Cn0K","type":"text"},{"path":"lib/modules/authentication/providers/models/password.dart","data":"Y2xhc3MgUGFzc3dvcmQgewogIGZpbmFsIFN0cmluZyBfdmFsdWU7CgogIFBhc3N3b3JkKFN0cmluZyBwYXNzd29yZCkgOiBfdmFsdWUgPSBwYXNzd29yZC50cmltKCk7CgogIHZvaWQgdmFsaWRhdGUoKSB7CiAgICBpZiAodmFsdWUuaXNFbXB0eSkgewogICAgICB0aHJvdyBjb25zdCBQYXNzd29yZEV4Y2VwdGlvbigiWW91IG11c3QgcHJvdmlkZSBhIHBhc3N3b3JkIik7CiAgICB9CiAgICBpZiAodmFsdWUubGVuZ3RoIDwgNSkgewogICAgICB0aHJvdyBjb25zdCBQYXNzd29yZEV4Y2VwdGlvbigKICAgICAgICAiWW91ciBwYXNzd29yZCBtdXN0IGJlIGF0IGxlYXN0IDUgY2hhcmFjdGVycyBsb25nIiwKICAgICAgKTsKICAgIH0KICB9CgogIFN0cmluZyBnZXQgdmFsdWUgPT4gX3ZhbHVlOwoKICBAb3ZlcnJpZGUKICBib29sIG9wZXJhdG9yID09KE9iamVjdCBvdGhlcikgPT4KICAgICAgaWRlbnRpY2FsKHRoaXMsIG90aGVyKSB8fAogICAgICBvdGhlciBpcyBQYXNzd29yZCAmJgogICAgICAgICAgcnVudGltZVR5cGUgPT0gb3RoZXIucnVudGltZVR5cGUgJiYKICAgICAgICAgIF92YWx1ZSA9PSBvdGhlci5fdmFsdWU7CgogIEBvdmVycmlkZQogIGludCBnZXQgaGFzaENvZGUgPT4gX3ZhbHVlLmhhc2hDb2RlOwp9CgpjbGFzcyBQYXNzd29yZEV4Y2VwdGlvbiBpbXBsZW1lbnRzIEV4Y2VwdGlvbiB7CiAgZmluYWwgU3RyaW5nIG1lc3NhZ2U7CgogIGNvbnN0IFBhc3N3b3JkRXhjZXB0aW9uKHRoaXMubWVzc2FnZSk7CgogIEBvdmVycmlkZQogIFN0cmluZyB0b1N0cmluZygpID0+IG1lc3NhZ2U7Cn0K","type":"text"},{"path":"lib/modules/authentication/providers/models/recover_state.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ3JlY292ZXJfc3RhdGUuZnJlZXplZC5kYXJ0JzsKCkBmcmVlemVkCnNlYWxlZCBjbGFzcyBSZWNvdmVyU3RhdGUgd2l0aCBfJFJlY292ZXJTdGF0ZSB7CiAgY29uc3QgZmFjdG9yeSBSZWNvdmVyU3RhdGUoewogICAgcmVxdWlyZWQgRW1haWwgZW1haWwsCiAgfSkgPSBSZWNvdmVyU3RhdGVEYXRhOwoKICBjb25zdCBmYWN0b3J5IFJlY292ZXJTdGF0ZS5zZW5kaW5nKHsKICAgIHJlcXVpcmVkIEVtYWlsIGVtYWlsLAogIH0pID0gUmVjb3ZlclN0YXRlU2VuZGluZzsKCiAgY29uc3QgZmFjdG9yeSBSZWNvdmVyU3RhdGUuc2VudCh7CiAgICByZXF1aXJlZCBFbWFpbCBlbWFpbCwKICB9KSA9IFJlY292ZXJTdGF0ZVNlbnQ7CgogIGNvbnN0IFJlY292ZXJTdGF0ZS5fKCk7Cn0K","type":"text"},{"path":"lib/modules/authentication/providers/models/recover_state.freezed.dart","data":"","type":"text"},{"path":"lib/modules/authentication/providers/models/signin_state.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvcGFzc3dvcmQuZGFydCc7CmltcG9ydCAncGFja2FnZTpmcmVlemVkX2Fubm90YXRpb24vZnJlZXplZF9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAnc2lnbmluX3N0YXRlLmZyZWV6ZWQuZGFydCc7CgpAZnJlZXplZApzZWFsZWQgY2xhc3MgU2lnbmluU3RhdGUgd2l0aCBfJFNpZ25pblN0YXRlIHsKICBjb25zdCBmYWN0b3J5IFNpZ25pblN0YXRlKHsKICAgIHJlcXVpcmVkIEVtYWlsIGVtYWlsLAogICAgcmVxdWlyZWQgUGFzc3dvcmQgcGFzc3dvcmQsCiAgfSkgPSBTaWduaW5TdGF0ZURhdGE7CgogIGNvbnN0IGZhY3RvcnkgU2lnbmluU3RhdGUuc2VuZGluZyh7CiAgICByZXF1aXJlZCBFbWFpbCBlbWFpbCwKICAgIHJlcXVpcmVkIFBhc3N3b3JkIHBhc3N3b3JkLAogIH0pID0gU2lnbmluU3RhdGVTZW5kaW5nOwoKICBjb25zdCBTaWduaW5TdGF0ZS5fKCk7Cn0K","type":"text"},{"path":"lib/modules/authentication/providers/models/signin_state.freezed.dart","data":"","type":"text"},{"path":"lib/modules/authentication/providers/models/signup_state.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvcGFzc3dvcmQuZGFydCc7CmltcG9ydCAncGFja2FnZTpmcmVlemVkX2Fubm90YXRpb24vZnJlZXplZF9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAnc2lnbnVwX3N0YXRlLmZyZWV6ZWQuZGFydCc7CgpAZnJlZXplZApzZWFsZWQgY2xhc3MgU2lnbnVwU3RhdGUgd2l0aCBfJFNpZ251cFN0YXRlIHsKICBjb25zdCBmYWN0b3J5IFNpZ251cFN0YXRlKHsKICAgIHJlcXVpcmVkIEVtYWlsIGVtYWlsLAogICAgcmVxdWlyZWQgUGFzc3dvcmQgcGFzc3dvcmQsCiAgfSkgPSBTaWdudXBTdGF0ZURhdGE7CgogIGNvbnN0IGZhY3RvcnkgU2lnbnVwU3RhdGUuc2VuZGluZyh7CiAgICByZXF1aXJlZCBFbWFpbCBlbWFpbCwKICAgIHJlcXVpcmVkIFBhc3N3b3JkIHBhc3N3b3JkLAogIH0pID0gU2lnbnVwU3RhdGVTZW5kaW5nOwoKICBjb25zdCBTaWdudXBTdGF0ZS5fKCk7Cn0K","type":"text"},{"path":"lib/modules/authentication/providers/models/signup_state.freezed.dart","data":"","type":"text"},{"path":"lib/modules/authentication/providers/recover_provider.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvcmVjb3Zlcl9zdGF0ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9yZXBvc2l0b3JpZXMvYXV0aGVudGljYXRpb25fcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CgpmaW5hbCByZWNvdmVyU3RhdGVQcm92aWRlciA9CiAgICBTdGF0ZU5vdGlmaWVyUHJvdmlkZXIuYXV0b0Rpc3Bvc2U8UmVjb3ZlclN0YXRlTm90aWZpZXIsIFJlY292ZXJTdGF0ZT4oCiAgKHJlZikgPT4gUmVjb3ZlclN0YXRlTm90aWZpZXIoCiAgICBhdXRoUmVwb3NpdG9yeTogcmVmLndhdGNoKGF1dGhSZXBvc2l0b3J5UHJvdmlkZXIpLAogICksCik7CgpjbGFzcyBSZWNvdmVyU3RhdGVOb3RpZmllciBleHRlbmRzIFN0YXRlTm90aWZpZXI8UmVjb3ZlclN0YXRlPiB7CiAgZmluYWwgQXV0aGVudGljYXRpb25SZXBvc2l0b3J5IF9hdXRoUmVwb3NpdG9yeTsKCiAgUmVjb3ZlclN0YXRlTm90aWZpZXIoewogICAgcmVxdWlyZWQgQXV0aGVudGljYXRpb25SZXBvc2l0b3J5IGF1dGhSZXBvc2l0b3J5LAogIH0pICA6IF9hdXRoUmVwb3NpdG9yeSA9IGF1dGhSZXBvc2l0b3J5LAogICAgICAgIHN1cGVyKAogICAgICAgICAgUmVjb3ZlclN0YXRlKGVtYWlsOiBFbWFpbCgiIikpLAogICAgICAgICk7CgogIHZvaWQgc2V0RW1haWwoU3RyaW5nPyB2YWx1ZSkgewogICAgZmluYWwgZW1haWwgPSBFbWFpbCh2YWx1ZSA/PyAnJyk7CiAgICBpZiAoZW1haWwgPT0gc3RhdGUuZW1haWwpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgc3RhdGUgPSBzdGF0ZS5jb3B5V2l0aChlbWFpbDogZW1haWwpOwogIH0KCiAgRnV0dXJlPHZvaWQ+IHNlbmQoKSBhc3luYyB7CiAgICBpZiAoc3RhdGUgaXMgUmVjb3ZlclN0YXRlU2VuZGluZykgewogICAgICByZXR1cm47CiAgICB9CiAgICB0cnkgewogICAgICBzdGF0ZS5lbWFpbC52YWxpZGF0ZSgpOwogICAgICBzdGF0ZSA9IFJlY292ZXJTdGF0ZS5zZW5kaW5nKGVtYWlsOiBzdGF0ZS5lbWFpbCk7CiAgICAgIGF3YWl0IF9hdXRoUmVwb3NpdG9yeS5yZWNvdmVyUGFzc3dvcmQoc3RhdGUuZW1haWwudmFsdWUpOwogICAgICAvLyBsZXRzIGZha2UgYSBkZWxheSB0byBwcmV2ZW50IHNwYW1taW5nIHRoZSBzaWdudXAgYnV0dG9uCiAgICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTUwMCkpOwogICAgICBzdGF0ZSA9IFJlY292ZXJTdGF0ZS5zZW50KGVtYWlsOiBzdGF0ZS5lbWFpbCk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICBkZWJ1Z1ByaW50KCJFcnJvciB3aGlsZSBzaWduaW5nIHVwOiAkZSwgJHRyYWNlIik7CiAgICAgIHN0YXRlID0gUmVjb3ZlclN0YXRlKGVtYWlsOiBzdGF0ZS5lbWFpbCk7CiAgICAgIHJldGhyb3c7CiAgICB9CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/authentication/providers/signin_state_provider.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9zdGF0ZXMvdXNlcl9zdGF0ZV9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvcGFzc3dvcmQuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcHJvdmlkZXJzL21vZGVscy9zaWduaW5fc3RhdGUuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcHJvdmlkZXJzL21vZGVscy9zaWdudXBfc3RhdGUuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcmVwb3NpdG9yaWVzL2F1dGhlbnRpY2F0aW9uX3JlcG9zaXRvcnkuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwoKZmluYWwgc2lnbmluU3RhdGVQcm92aWRlciA9CiAgICBTdGF0ZU5vdGlmaWVyUHJvdmlkZXIuYXV0b0Rpc3Bvc2U8U2lnbmluU3RhdGVOb3RpZmllciwgU2lnbmluU3RhdGU+KAogIChyZWYpID0+IFNpZ25pblN0YXRlTm90aWZpZXIoCiAgICBhdXRoUmVwb3NpdG9yeTogcmVmLndhdGNoKGF1dGhSZXBvc2l0b3J5UHJvdmlkZXIpLAogICAgdXNlclN0YXRlTm90aWZpZXI6IHJlZi53YXRjaCh1c2VyU3RhdGVOb3RpZmllclByb3ZpZGVyLm5vdGlmaWVyKSwKICApLAopOwoKY2xhc3MgU2lnbmluU3RhdGVOb3RpZmllciBleHRlbmRzIFN0YXRlTm90aWZpZXI8U2lnbmluU3RhdGU+IHsKICBmaW5hbCBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkgX2F1dGhSZXBvc2l0b3J5OwogIGZpbmFsIFVzZXJTdGF0ZU5vdGlmaWVyIF91c2VyU3RhdGVOb3RpZmllcjsKCiAgU2lnbmluU3RhdGVOb3RpZmllcih7CiAgICByZXF1aXJlZCBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkgYXV0aFJlcG9zaXRvcnksCiAgICByZXF1aXJlZCBVc2VyU3RhdGVOb3RpZmllciB1c2VyU3RhdGVOb3RpZmllciwKICB9KSAgOiBfYXV0aFJlcG9zaXRvcnkgPSBhdXRoUmVwb3NpdG9yeSwKICAgICAgICBfdXNlclN0YXRlTm90aWZpZXIgPSB1c2VyU3RhdGVOb3RpZmllciwKICAgICAgICBzdXBlcihTaWduaW5TdGF0ZShlbWFpbDogRW1haWwoIiIpLCBwYXNzd29yZDogUGFzc3dvcmQoIiIpKSk7CgogIHZvaWQgc2V0RW1haWwoU3RyaW5nPyB2YWx1ZSkgewogICAgZmluYWwgZW1haWwgPSBFbWFpbCh2YWx1ZSA/PyAnJyk7CiAgICBpZiAoZW1haWwgPT0gc3RhdGUuZW1haWwpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgc3RhdGUgPSBzdGF0ZS5jb3B5V2l0aChlbWFpbDogZW1haWwpOwogIH0KCiAgdm9pZCBzZXRQYXNzd29yZChTdHJpbmc/IHB3ZCkgewogICAgZmluYWwgcGFzc3dvcmQgPSBQYXNzd29yZChwd2QgPz8gJycpOwogICAgaWYgKHBhc3N3b3JkID09IHN0YXRlLnBhc3N3b3JkKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHN0YXRlID0gc3RhdGUuY29weVdpdGgocGFzc3dvcmQ6IHBhc3N3b3JkKTsKICB9CgogIEZ1dHVyZTx2b2lkPiBzaWduaW4oKSBhc3luYyB7CiAgICBpZiAoc3RhdGUgaXMgU2lnbnVwU3RhdGVTZW5kaW5nKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRyeSB7CiAgICAgIHN0YXRlLmVtYWlsLnZhbGlkYXRlKCk7CiAgICAgIHN0YXRlLnBhc3N3b3JkLnZhbGlkYXRlKCk7CiAgICAgIHN0YXRlID0gU2lnbmluU3RhdGUuc2VuZGluZyhlbWFpbDogc3RhdGUuZW1haWwsIHBhc3N3b3JkOiBzdGF0ZS5wYXNzd29yZCk7CiAgICAgIGF3YWl0IF9hdXRoUmVwb3NpdG9yeS5zaWduaW4oc3RhdGUuZW1haWwudmFsdWUsIHN0YXRlLnBhc3N3b3JkLnZhbHVlKTsKICAgICAgLy8gbGV0cyBmYWtlIGEgZGVsYXkgdG8gcHJldmVudCBzcGFtbWluZyB0aGUgc2lnbnVwIGJ1dHRvbgogICAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKICAgICAgYXdhaXQgX3VzZXJTdGF0ZU5vdGlmaWVyLm9uU2lnbmluKCk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICBkZWJ1Z1ByaW50KCJFcnJvciB3aGlsZSBzaWduaW5nIHVwOiAkZSwgJHRyYWNlIik7CiAgICAgIHN0YXRlID0gU2lnbmluU3RhdGUoZW1haWw6IHN0YXRlLmVtYWlsLCBwYXNzd29yZDogc3RhdGUucGFzc3dvcmQpOwogICAgICByZXRocm93OwogICAgfQogIH0KCiAgRnV0dXJlPHZvaWQ+IHNpZ25pbldpdGhHb29nbGUoKSBhc3luYyB7CiAgICBpZiAoc3RhdGUgaXMgU2lnbnVwU3RhdGVTZW5kaW5nKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRyeSB7CiAgICAgIHN0YXRlID0gU2lnbmluU3RhdGUuc2VuZGluZyhlbWFpbDogc3RhdGUuZW1haWwsIHBhc3N3b3JkOiBzdGF0ZS5wYXNzd29yZCk7CiAgICAgIGF3YWl0IF9hdXRoUmVwb3NpdG9yeS5zaWduaW5XaXRoR29vZ2xlKCk7CiAgICAgIC8vIGxldHMgZmFrZSBhIGRlbGF5IHRvIHByZXZlbnQgc3BhbW1pbmcgdGhlIHNpZ251cCBidXR0b24KICAgICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxNTAwKSk7CiAgICAgIGF3YWl0IF91c2VyU3RhdGVOb3RpZmllci5vblNpZ25pbigpOwogICAgfSBjYXRjaCAoZSwgdHJhY2UpIHsKICAgICAgZGVidWdQcmludCgiRXJyb3Igd2hpbGUgc2lnbmluZyB1cDogJGUsICR0cmFjZSIpOwogICAgICBzdGF0ZSA9IFNpZ25pblN0YXRlKGVtYWlsOiBzdGF0ZS5lbWFpbCwgcGFzc3dvcmQ6IHN0YXRlLnBhc3N3b3JkKTsKICAgICAgcmV0aHJvdzsKICAgIH0KICB9CgogIEZ1dHVyZTx2b2lkPiBzaWduaW5XaXRoR29vZ2xlUGxheUdhbWVzKCkgYXN5bmMgewogICAgaWYgKHN0YXRlIGlzIFNpZ251cFN0YXRlU2VuZGluZykgewogICAgICByZXR1cm47CiAgICB9CiAgICB0cnkgewogICAgICBzdGF0ZSA9IFNpZ25pblN0YXRlLnNlbmRpbmcoZW1haWw6IHN0YXRlLmVtYWlsLCBwYXNzd29yZDogc3RhdGUucGFzc3dvcmQpOwogICAgICBhd2FpdCBfYXV0aFJlcG9zaXRvcnkuc2lnbmluV2l0aEdvb2dsZVBsYXlHYW1lcygpOwogICAgICAvLyBsZXRzIGZha2UgYSBkZWxheSB0byBwcmV2ZW50IHNwYW1taW5nIHRoZSBzaWdudXAgYnV0dG9uCiAgICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTUwMCkpOwogICAgICBhd2FpdCBfdXNlclN0YXRlTm90aWZpZXIub25TaWduaW4oKTsKICAgIH0gY2F0Y2ggKGUsIHRyYWNlKSB7CiAgICAgIGRlYnVnUHJpbnQoIkVycm9yIHdoaWxlIHNpZ25pbmcgdXA6ICRlLCAkdHJhY2UiKTsKICAgICAgc3RhdGUgPSBTaWduaW5TdGF0ZShlbWFpbDogc3RhdGUuZW1haWwsIHBhc3N3b3JkOiBzdGF0ZS5wYXNzd29yZCk7CiAgICAgIHJldGhyb3c7CiAgICB9CiAgfQoKICBGdXR1cmU8dm9pZD4gc2lnbmluV2l0aEFwcGxlKCkgYXN5bmMgewogICAgaWYgKHN0YXRlIGlzIFNpZ251cFN0YXRlU2VuZGluZykgewogICAgICByZXR1cm47CiAgICB9CiAgICB0cnkgewogICAgICBzdGF0ZSA9IFNpZ25pblN0YXRlLnNlbmRpbmcoZW1haWw6IHN0YXRlLmVtYWlsLCBwYXNzd29yZDogc3RhdGUucGFzc3dvcmQpOwogICAgICBhd2FpdCBfYXV0aFJlcG9zaXRvcnkuc2lnbmluV2l0aEFwcGxlKCk7CiAgICAgIC8vIGxldHMgZmFrZSBhIGRlbGF5IHRvIHByZXZlbnQgc3BhbW1pbmcgdGhlIHNpZ251cCBidXR0b24KICAgICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxNTAwKSk7CiAgICAgIGF3YWl0IF91c2VyU3RhdGVOb3RpZmllci5vblNpZ25pbigpOwogICAgfSBjYXRjaCAoZSwgdHJhY2UpIHsKICAgICAgZGVidWdQcmludCgiRXJyb3Igd2hpbGUgc2lnbmluZyB1cDogJGUsICR0cmFjZSIpOwogICAgICBzdGF0ZSA9IFNpZ25pblN0YXRlKGVtYWlsOiBzdGF0ZS5lbWFpbCwgcGFzc3dvcmQ6IHN0YXRlLnBhc3N3b3JkKTsKICAgICAgcmV0aHJvdzsKICAgIH0KICB9CgogIEZ1dHVyZTx2b2lkPiBzaWduaW5XaXRoRmFjZWJvb2soKSBhc3luYyB7CiAgICBpZiAoc3RhdGUgaXMgU2lnbnVwU3RhdGVTZW5kaW5nKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRyeSB7CiAgICAgIHN0YXRlID0gU2lnbmluU3RhdGUuc2VuZGluZyhlbWFpbDogc3RhdGUuZW1haWwsIHBhc3N3b3JkOiBzdGF0ZS5wYXNzd29yZCk7CiAgICAgIGF3YWl0IF9hdXRoUmVwb3NpdG9yeS5zaWduaW5XaXRoRmFjZWJvb2soKTsKICAgICAgLy8gbGV0cyBmYWtlIGEgZGVsYXkgdG8gcHJldmVudCBzcGFtbWluZyB0aGUgc2lnbnVwIGJ1dHRvbgogICAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKICAgICAgYXdhaXQgX3VzZXJTdGF0ZU5vdGlmaWVyLm9uU2lnbmluKCk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICBkZWJ1Z1ByaW50KCJFcnJvciB3aGlsZSBzaWduaW5nIHVwOiAkZSwgJHRyYWNlIik7CiAgICAgIHN0YXRlID0gU2lnbmluU3RhdGUoZW1haWw6IHN0YXRlLmVtYWlsLCBwYXNzd29yZDogc3RhdGUucGFzc3dvcmQpOwogICAgICByZXRocm93OwogICAgfQogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/providers/signup_state_provider.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9zdGF0ZXMvdXNlcl9zdGF0ZV9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvbW9kZWxzL2VtYWlsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvcGFzc3dvcmQuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcHJvdmlkZXJzL21vZGVscy9zaWdudXBfc3RhdGUuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcmVwb3NpdG9yaWVzL2F1dGhlbnRpY2F0aW9uX3JlcG9zaXRvcnkuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwoKZmluYWwgc2lnbnVwU3RhdGVQcm92aWRlciA9CiAgICBTdGF0ZU5vdGlmaWVyUHJvdmlkZXIuYXV0b0Rpc3Bvc2U8U2lnbnVwU3RhdGVOb3RpZmllciwgU2lnbnVwU3RhdGU+KAogIChyZWYpID0+IFNpZ251cFN0YXRlTm90aWZpZXIoCiAgICBhdXRoUmVwb3NpdG9yeTogcmVmLndhdGNoKGF1dGhSZXBvc2l0b3J5UHJvdmlkZXIpLAogICAgdXNlclN0YXRlTm90aWZpZXI6IHJlZi53YXRjaCh1c2VyU3RhdGVOb3RpZmllclByb3ZpZGVyLm5vdGlmaWVyKSwKICApLAopOwoKY2xhc3MgU2lnbnVwU3RhdGVOb3RpZmllciBleHRlbmRzIFN0YXRlTm90aWZpZXI8U2lnbnVwU3RhdGU+IHsKICBmaW5hbCBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkgX2F1dGhSZXBvc2l0b3J5OwogIGZpbmFsIFVzZXJTdGF0ZU5vdGlmaWVyIF91c2VyU3RhdGVOb3RpZmllcjsKCiAgU2lnbnVwU3RhdGVOb3RpZmllcih7CiAgICByZXF1aXJlZCBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkgYXV0aFJlcG9zaXRvcnksCiAgICByZXF1aXJlZCBVc2VyU3RhdGVOb3RpZmllciB1c2VyU3RhdGVOb3RpZmllciwKICB9KSAgOiBfYXV0aFJlcG9zaXRvcnkgPSBhdXRoUmVwb3NpdG9yeSwKICAgICAgICBfdXNlclN0YXRlTm90aWZpZXIgPSB1c2VyU3RhdGVOb3RpZmllciwKICAgICAgICBzdXBlcihTaWdudXBTdGF0ZShlbWFpbDogRW1haWwoIiIpLCBwYXNzd29yZDogUGFzc3dvcmQoIiIpKSk7CgogIHZvaWQgc2V0RW1haWwoU3RyaW5nPyB2YWx1ZSkgewogICAgZmluYWwgZW1haWwgPSBFbWFpbCh2YWx1ZSA/PyAnJyk7CiAgICBpZiAoZW1haWwgPT0gc3RhdGUuZW1haWwpIHsKICAgICAgcmV0dXJuOwogICAgfQogICAgc3RhdGUgPSBzdGF0ZS5jb3B5V2l0aChlbWFpbDogZW1haWwpOwogIH0KCiAgdm9pZCBzZXRQYXNzd29yZChTdHJpbmc/IHB3ZCkgewogICAgZmluYWwgcGFzc3dvcmQgPSBQYXNzd29yZChwd2QgPz8gJycpOwogICAgaWYgKHBhc3N3b3JkID09IHN0YXRlLnBhc3N3b3JkKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHN0YXRlID0gc3RhdGUuY29weVdpdGgocGFzc3dvcmQ6IHBhc3N3b3JkKTsKICB9CgogIEZ1dHVyZTx2b2lkPiBzaWdudXAoKSBhc3luYyB7CiAgICBpZiAoc3RhdGUgaXMgU2lnbnVwU3RhdGVTZW5kaW5nKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRyeSB7CiAgICAgIHN0YXRlLmVtYWlsLnZhbGlkYXRlKCk7CiAgICAgIHN0YXRlLnBhc3N3b3JkLnZhbGlkYXRlKCk7CiAgICAgIHN0YXRlID0gU2lnbnVwU3RhdGUuc2VuZGluZyhlbWFpbDogc3RhdGUuZW1haWwsIHBhc3N3b3JkOiBzdGF0ZS5wYXNzd29yZCk7CiAgICAgIGF3YWl0IF9hdXRoUmVwb3NpdG9yeS5zaWdudXAoc3RhdGUuZW1haWwudmFsdWUsIHN0YXRlLnBhc3N3b3JkLnZhbHVlKTsKICAgICAgLy8gbGV0cyBmYWtlIGEgZGVsYXkgdG8gcHJldmVudCBzcGFtbWluZyB0aGUgc2lnbnVwIGJ1dHRvbgogICAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKICAgICAgYXdhaXQgX3VzZXJTdGF0ZU5vdGlmaWVyLm9uU2lnbmluKCk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICBkZWJ1Z1ByaW50KCJFcnJvciB3aGlsZSBzaWduaW5nIHVwOiAkZSwgJHRyYWNlIik7CiAgICAgIHN0YXRlID0gU2lnbnVwU3RhdGUoZW1haWw6IHN0YXRlLmVtYWlsLCBwYXNzd29yZDogc3RhdGUucGFzc3dvcmQpOwogICAgICByZXRocm93OwogICAgfQogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/repositories/authentication_repository.dart","data":"","type":"text"},{"path":"lib/modules/authentication/repositories/exceptions/authentication_exceptions.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9iYXNlX2FwaV9leGNlcHRpb25zLmRhcnQnOwoKY2xhc3MgU2lnbnVwRXhjZXB0aW9uIHsKICBmaW5hbCBpbnQ/IGNvZGU7CiAgZmluYWwgU3RyaW5nPyBtZXNzYWdlOwoKICBTaWdudXBFeGNlcHRpb24oewogICAgdGhpcy5jb2RlLAogICAgdGhpcy5tZXNzYWdlLAogIH0pOwoKICBmYWN0b3J5IFNpZ251cEV4Y2VwdGlvbi5mcm9tQXBpRXJyb3IoQXBpRXJyb3IgZXJyb3IpIHsKICAgIHJldHVybiBTaWdudXBFeGNlcHRpb24oCiAgICAgIGNvZGU6IGVycm9yLmNvZGUsCiAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsCiAgICApOwogIH0KCiAgQG92ZXJyaWRlCiAgU3RyaW5nIHRvU3RyaW5nKCkgewogICAgcmV0dXJuICdTaWdudXBFeGNlcHRpb24oY29kZTogJGNvZGUsIG1lc3NhZ2U6ICRtZXNzYWdlKSc7CiAgfQp9CgpjbGFzcyBTaWduaW5FeGNlcHRpb24gewogIGZpbmFsIGludD8gY29kZTsKICBmaW5hbCBTdHJpbmc/IG1lc3NhZ2U7CgogIFNpZ25pbkV4Y2VwdGlvbih7CiAgICB0aGlzLmNvZGUsCiAgICB0aGlzLm1lc3NhZ2UsCiAgfSk7CgogIGZhY3RvcnkgU2lnbmluRXhjZXB0aW9uLmZyb21BcGlFcnJvcihBcGlFcnJvciBlcnJvcikgewogICAgcmV0dXJuIFNpZ25pbkV4Y2VwdGlvbigKICAgICAgY29kZTogZXJyb3IuY29kZSwKICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKICAgICk7CiAgfQoKICBAb3ZlcnJpZGUKICBTdHJpbmcgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gJ1NpZ25pbkV4Y2VwdGlvbihjb2RlOiAkY29kZSwgbWVzc2FnZTogJG1lc3NhZ2UpJzsKICB9Cn0KCmNsYXNzIFJlY292ZXJQYXNzd29yZEV4Y2VwdGlvbiB7CiAgZmluYWwgaW50PyBjb2RlOwogIGZpbmFsIFN0cmluZz8gbWVzc2FnZTsKCiAgUmVjb3ZlclBhc3N3b3JkRXhjZXB0aW9uKHsKICAgIHRoaXMuY29kZSwKICAgIHRoaXMubWVzc2FnZSwKICB9KTsKCiAgZmFjdG9yeSBSZWNvdmVyUGFzc3dvcmRFeGNlcHRpb24uZnJvbUFwaUVycm9yKEFwaUVycm9yIGVycm9yKSB7CiAgICByZXR1cm4gUmVjb3ZlclBhc3N3b3JkRXhjZXB0aW9uKAogICAgICBjb2RlOiBlcnJvci5jb2RlLAogICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAogICAgKTsKICB9CgogIEBvdmVycmlkZQogIFN0cmluZyB0b1N0cmluZygpIHsKICAgIHJldHVybiAnU2lnbmluRXhjZXB0aW9uKGNvZGU6ICRjb2RlLCBtZXNzYWdlOiAkbWVzc2FnZSknOwogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/ui/components/apple_signin.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL3RvYXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9zaWduaW5fc3RhdGVfcHJvdmlkZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vdWkvd2lkZ2V0cy9yb3VuZF9zaWduaW4uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKCmNsYXNzIEFwcGxlU2lnbmluQ29tcG9uZW50IGV4dGVuZHMgQ29uc3VtZXJXaWRnZXQgewogIGNvbnN0IEFwcGxlU2lnbmluQ29tcG9uZW50KHtzdXBlci5rZXl9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBXaWRnZXRSZWYgcmVmKSB7CiAgICByZXR1cm4gU29jaWFsU2lnbmluQnV0dG9uLmFwcGxlKAogICAgICAoKSA9PiByZWYKICAgICAgICAgIC5yZWFkKHNpZ25pblN0YXRlUHJvdmlkZXIubm90aWZpZXIpCiAgICAgICAgICAuc2lnbmluV2l0aEFwcGxlKCkKICAgICAgICAgIC5jYXRjaEVycm9yKAogICAgICAgICAgICAoZXJyKSA9PiBzaG93RXJyb3JUb2FzdCgKICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LAogICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgIHRleHQ6ICdDYW5ub3Qgc2lnbmluIHdpdGggZmFjZWJvb2snLAogICAgICAgICAgICApLAogICAgICAgICAgKQogICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICh2YWx1ZSkgPT4gY29udGV4dC5wdXNoUmVwbGFjZW1lbnQoJy8nKSwKICAgICAgICAgICksCiAgICApOwogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/ui/components/facebook_signin.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL3RvYXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9zaWduaW5fc3RhdGVfcHJvdmlkZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vdWkvd2lkZ2V0cy9yb3VuZF9zaWduaW4uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKCmNsYXNzIEZhY2Vib29rU2lnbmluQ29tcG9uZW50IGV4dGVuZHMgQ29uc3VtZXJXaWRnZXQgewogIGNvbnN0IEZhY2Vib29rU2lnbmluQ29tcG9uZW50KHtzdXBlci5rZXl9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBXaWRnZXRSZWYgcmVmKSB7CiAgICByZXR1cm4gU29jaWFsU2lnbmluQnV0dG9uLmZhY2Vib29rKAogICAgICAoKSA9PiByZWYKICAgICAgICAgIC5yZWFkKHNpZ25pblN0YXRlUHJvdmlkZXIubm90aWZpZXIpCiAgICAgICAgICAuc2lnbmluV2l0aEZhY2Vib29rKCkKICAgICAgICAgIC5jYXRjaEVycm9yKAogICAgICAgICAgICAoZXJyKSA9PiBzaG93RXJyb3JUb2FzdCgKICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LAogICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgIHRleHQ6ICdDYW5ub3Qgc2lnbmluIHdpdGggZmFjZWJvb2snLAogICAgICAgICAgICApLAogICAgICAgICAgKQogICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICh2YWx1ZSkgPT4gY29udGV4dC5wdXNoUmVwbGFjZW1lbnQoJy8nKSwKICAgICAgICAgICksCiAgICApOwogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/ui/components/google_signin.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL3RvYXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9zaWduaW5fc3RhdGVfcHJvdmlkZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vdWkvd2lkZ2V0cy9yb3VuZF9zaWduaW4uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKCmNsYXNzIEdvb2dsZVNpZ25JbkNvbXBvbmVudCBleHRlbmRzIENvbnN1bWVyV2lkZ2V0IHsKICBjb25zdCBHb29nbGVTaWduSW5Db21wb25lbnQoe3N1cGVyLmtleX0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQsIFdpZGdldFJlZiByZWYpIHsKICAgIHJldHVybiBTb2NpYWxTaWduaW5CdXR0b24uZ29vZ2xlKCgpID0+IHJlZgogICAgICAgICAgICAucmVhZChzaWduaW5TdGF0ZVByb3ZpZGVyLm5vdGlmaWVyKQogICAgICAgICAgICAuc2lnbmluV2l0aEdvb2dsZSgpCiAgICAgICAgICAgIC50aGVuKAogICAgICAgICAgICAgICh2YWx1ZSkgPT4gY29udGV4dC5wdXNoUmVwbGFjZW1lbnQoJy8nKSwKICAgICAgICAgICAgKQogICAgICAgICAgICAuY2F0Y2hFcnJvcigKICAgICAgICAgIChlcnIpIHsKICAgICAgICAgICAgc2hvd0Vycm9yVG9hc3QoCiAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICB0aXRsZTogJ0Vycm9yJywKICAgICAgICAgICAgICB0ZXh0OiAnQ2Fubm90IHNpZ25pbiB3aXRoIEdvb2dsZScsCiAgICAgICAgICAgICk7CiAgICAgICAgICAgIHJldHVybiBlcnI7CiAgICAgICAgICB9LAogICAgICAgICkpOwogIH0KfQoKY2xhc3MgR29vZ2xlUGxheUdhbWVzU2lnbkluQ29tcG9uZW50IGV4dGVuZHMgQ29uc3VtZXJXaWRnZXQgewogIGNvbnN0IEdvb2dsZVBsYXlHYW1lc1NpZ25JbkNvbXBvbmVudCh7c3VwZXIua2V5fSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgV2lkZ2V0UmVmIHJlZikgewogICAgcmV0dXJuIFNvY2lhbFNpZ25pbkJ1dHRvbi5nb29nbGVQbGF5R2FtZXMoCiAgICAgICgpID0+IHJlZgogICAgICAgICAgLnJlYWQoc2lnbmluU3RhdGVQcm92aWRlci5ub3RpZmllcikKICAgICAgICAgIC5zaWduaW5XaXRoR29vZ2xlKCkKICAgICAgICAgIC5jYXRjaEVycm9yKAogICAgICAgICAgICAoZXJyKSA9PiBzaG93RXJyb3JUb2FzdCgKICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LAogICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgIHRleHQ6ICdDYW5ub3Qgc2lnbmluIHdpdGggR29vZ2xlIHBsYXknLAogICAgICAgICAgICApLAogICAgICAgICAgKQogICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICh2YWx1ZSkgPT4gY29udGV4dC5wdXNoUmVwbGFjZW1lbnROYW1lZCgnL3NpZ251cCcpLAogICAgICAgICAgKSwKICAgICk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/authentication/ui/recover_password_page.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL2ZpZWxkLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL3dpZGdldHMvdG9hc3QuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcHJvdmlkZXJzL21vZGVscy9lbWFpbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvcmVjb3Zlcl9wcm92aWRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi91aS93aWRnZXRzL3JlY292ZXJfcGFzc3dvcmRfcmVzdWx0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvc2VydmljZXMuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CgpmaW5hbCBfZm9ybUtleSA9IEdsb2JhbEtleTxGb3JtU3RhdGU+KCk7CgpjbGFzcyBSZWNvdmVyUGFzc3dvcmRQYWdlIGV4dGVuZHMgQ29uc3VtZXJXaWRnZXQgewogIGNvbnN0IFJlY292ZXJQYXNzd29yZFBhZ2Uoe3N1cGVyLmtleX0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQsIFdpZGdldFJlZiByZWYpIHsKICAgIGZpbmFsIHN0YXRlID0gcmVmLndhdGNoKHJlY292ZXJTdGF0ZVByb3ZpZGVyKTsKCiAgICByZXR1cm4gR2VzdHVyZURldGVjdG9yKAogICAgICBvblRhcDogKCkgewogICAgICAgIEZvY3VzU2NvcGUub2YoY29udGV4dCkudW5mb2N1cygpOwogICAgICB9LAogICAgICBjaGlsZDogU2NhZmZvbGQoCiAgICAgICAgYXBwQmFyOiBBcHBCYXIoKSwKICAgICAgICBib2R5OiBBbm5vdGF0ZWRSZWdpb248U3lzdGVtVWlPdmVybGF5U3R5bGU+KAogICAgICAgICAgdmFsdWU6IFN5c3RlbVVpT3ZlcmxheVN0eWxlLmRhcmssCiAgICAgICAgICBjaGlsZDogU2FmZUFyZWEoCiAgICAgICAgICAgIGNoaWxkOiBzdGF0ZS5tYXAoCiAgICAgICAgICAgICAgKHZhbHVlKSA9PiBQYWRkaW5nKAogICAgICAgICAgICAgICAgcGFkZGluZzogY29uc3QgRWRnZUluc2V0cy5zeW1tZXRyaWMoCiAgICAgICAgICAgICAgICAgIGhvcml6b250YWw6IDI0LjAsCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgY2hpbGQ6IEZvcm0oCiAgICAgICAgICAgICAgICAgIGtleTogX2Zvcm1LZXksCiAgICAgICAgICAgICAgICAgIGNoaWxkOiBMaXN0VmlldygKICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiA3MiksCiAgICAgICAgICAgICAgICAgICAgICBUZXh0KAogICAgICAgICAgICAgICAgICAgICAgICAnUmVjb3ZlciBwYXNzd29yZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBUaGVtZS5vZihjb250ZXh0KS50ZXh0VGhlbWUuaGVhZGxpbmVNZWRpdW0sCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiAyNCksCiAgICAgICAgICAgICAgICAgICAgICBBcHBGb3JtRmllbGQoCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1LZXk6IGNvbnN0IEtleSgnZW1haWxfaW5wdXQnKSwKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxUZXh0OiAnRW1haWwnLAogICAgICAgICAgICAgICAgICAgICAgICBrZXlib2FyZFR5cGU6IFRleHRJbnB1dFR5cGUuZW1haWxBZGRyZXNzLAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0SW5wdXRBY3Rpb246IFRleHRJbnB1dEFjdGlvbi5kb25lLAogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3I6ICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5lbWFpbC52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0gb24gRW1haWxFeGNlcHRpb24gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZWQ6ICh2YWx1ZSkgPT4gcmVmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVhZChyZWNvdmVyU3RhdGVQcm92aWRlci5ub3RpZmllcikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRFbWFpbCh2YWx1ZSksCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiAyNCksCiAgICAgICAgICAgICAgICAgICAgICBFbGV2YXRlZEJ1dHRvbigKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBjb25zdCBLZXkoJ3JlY292ZXJfYnV0dG9uJyksCiAgICAgICAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgYXN5bmMgewogICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghX2Zvcm1LZXkuY3VycmVudFN0YXRlIS52YWxpZGF0ZSgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVhZChyZWNvdmVyU3RhdGVQcm92aWRlci5ub3RpZmllcikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNlbmQoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2hFcnJvcigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZSwgdHJhY2UpID0+IHNob3dFcnJvclRvYXN0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ0ZpbGwgYSB2YWxpZCBlbWFpbCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ1JlY292ZXIgcGFzc3dvcmQnKSwKICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBzZW5kaW5nOiAoXykgPT4gQ2VudGVyKAogICAgICAgICAgICAgICAgY2hpbGQ6IENpcmN1bGFyUHJvZ3Jlc3NJbmRpY2F0b3IuYWRhcHRpdmUoCiAgICAgICAgICAgICAgICAgIHZhbHVlQ29sb3I6IEFsd2F5c1N0b3BwZWRBbmltYXRpb248Q29sb3I+KAogICAgICAgICAgICAgICAgICAgIFRoZW1lLm9mKGNvbnRleHQpLnByaW1hcnlDb2xvciwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBzZW50OiAoXykgPT4gY29uc3QgUmVjb3ZlclBhc3N3b3JkU2VudCgpLAogICAgICAgICAgICApLAogICAgICAgICAgKSwKICAgICAgICApLAogICAgICApLAogICAgKTsKICB9Cn0K","type":"text"},{"path":"lib/modules/authentication/ui/signin_page.dart","data":"","type":"text"},{"path":"lib/modules/authentication/ui/signup_page.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS90aGVtZS9leHRlbnNpb25zL3RoZW1lX2V4dGVuc2lvbi5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL2J1dHRvbnMuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvd2lkZ2V0cy9yZXNwb25zaXZlX2xheW91dC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL3RvYXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3Byb3ZpZGVycy9tb2RlbHMvZW1haWwuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vcHJvdmlkZXJzL21vZGVscy9wYXNzd29yZC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9wcm92aWRlcnMvc2lnbnVwX3N0YXRlX3Byb3ZpZGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL3JlcG9zaXRvcmllcy9leGNlcHRpb25zL2F1dGhlbnRpY2F0aW9uX2V4Y2VwdGlvbnMuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKCmZpbmFsIF9mb3JtS2V5ID0gR2xvYmFsS2V5PEZvcm1TdGF0ZT4oKTsKCmNsYXNzIFNpZ251cFBhZ2UgZXh0ZW5kcyBDb25zdW1lcldpZGdldCB7CiAgZmluYWwgYm9vbCBjYW5EaXNtaXNzOwoKICBjb25zdCBTaWdudXBQYWdlKHtzdXBlci5rZXksIHRoaXMuY2FuRGlzbWlzcyA9IHRydWV9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBXaWRnZXRSZWYgcmVmKSB7CiAgICByZXR1cm4gR2VzdHVyZURldGVjdG9yKAogICAgICBvblRhcDogKCkgewogICAgICAgIEZvY3VzU2NvcGUub2YoY29udGV4dCkudW5mb2N1cygpOwogICAgICB9LAogICAgICBjaGlsZDogU2l6ZWRCb3goCiAgICAgICAgY2hpbGQ6IFBvcFNjb3BlKAogICAgICAgICAgY2FuUG9wOiBjYW5EaXNtaXNzLAogICAgICAgICAgY2hpbGQ6IFNjYWZmb2xkKAogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFRoZW1lLm9mKGNvbnRleHQpLmNvbG9yU2NoZW1lLmJhY2tncm91bmQsCiAgICAgICAgICAgIHJlc2l6ZVRvQXZvaWRCb3R0b21JbnNldDogZmFsc2UsCiAgICAgICAgICAgIGJvZHk6IFJlc3BvbnNpdmVMYXlvdXQoCiAgICAgICAgICAgICAgc21hbGw6IGNvbnN0IFNpZ251cEZvcm0oKSwKICAgICAgICAgICAgICBtZWRpdW06IENlbnRlcigKICAgICAgICAgICAgICAgIGNoaWxkOiBDb250YWluZXIoCiAgICAgICAgICAgICAgICAgIHdpZHRoOiA0MDAsCiAgICAgICAgICAgICAgICAgIGhlaWdodDogNDgwLAogICAgICAgICAgICAgICAgICBjb2xvcjogY29udGV4dC5jb2xvcnMuc3VyZmFjZSwKICAgICAgICAgICAgICAgICAgcGFkZGluZzogY29uc3QgRWRnZUluc2V0cy5hbGwoMjQuMCksCiAgICAgICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBTaWdudXBGb3JtKCksCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICksCiAgICAgICAgICAgICksCiAgICAgICAgICApLAogICAgICAgICksCiAgICAgICksCiAgICApOwogIH0KfQoKY2xhc3MgU2lnbnVwRm9ybSBleHRlbmRzIENvbnN1bWVyV2lkZ2V0IHsKICBjb25zdCBTaWdudXBGb3JtKHtzdXBlci5rZXl9KTsKCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBXaWRnZXRSZWYgcmVmKSB7CiAgICBmaW5hbCBzdGF0ZSA9IHJlZi53YXRjaChzaWdudXBTdGF0ZVByb3ZpZGVyKTsKICAgIHJldHVybiBGb3JtKAogICAgICBhdXRvdmFsaWRhdGVNb2RlOiBBdXRvdmFsaWRhdGVNb2RlLm9uVXNlckludGVyYWN0aW9uLAogICAgICBrZXk6IF9mb3JtS2V5LAogICAgICBjaGlsZDogUGFkZGluZygKICAgICAgICBwYWRkaW5nOiBjb25zdCBFZGdlSW5zZXRzLnN5bW1ldHJpYygKICAgICAgICAgIGhvcml6b250YWw6IDI0LjAsCiAgICAgICAgKSwKICAgICAgICBjaGlsZDogTGlzdFZpZXcoCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICBjb25zdCBTaXplZEJveChoZWlnaHQ6IDcyKSwKICAgICAgICAgICAgVGV4dCgKICAgICAgICAgICAgICAnU2lnbnVwIG5vdycsCiAgICAgICAgICAgICAgc3R5bGU6IFRoZW1lLm9mKGNvbnRleHQpLnRleHRUaGVtZS5oZWFkbGluZUxhcmdlLAogICAgICAgICAgICApLAogICAgICAgICAgICBjb25zdCBTaXplZEJveChoZWlnaHQ6IDMyKSwKICAgICAgICAgICAgVGV4dEZvcm1GaWVsZCgKICAgICAgICAgICAgICBrZXk6IGNvbnN0IEtleSgnZW1haWxfaW5wdXQnKSwKICAgICAgICAgICAgICBvbkNoYW5nZWQ6ICh2YWx1ZSkgPT4KICAgICAgICAgICAgICAgICAgcmVmLnJlYWQoc2lnbnVwU3RhdGVQcm92aWRlci5ub3RpZmllcikuc2V0RW1haWwodmFsdWUpLAogICAgICAgICAgICAgIGRlY29yYXRpb246IGNvbnN0IElucHV0RGVjb3JhdGlvbigKICAgICAgICAgICAgICAgIGhpbnRUZXh0OiAnYnJ1Y2VAd2F5bmUuY29tJywKICAgICAgICAgICAgICAgIGxhYmVsVGV4dDogJ0VtYWlsJywKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIGtleWJvYXJkVHlwZTogVGV4dElucHV0VHlwZS5lbWFpbEFkZHJlc3MsCiAgICAgICAgICAgICAgdGV4dElucHV0QWN0aW9uOiBUZXh0SW5wdXRBY3Rpb24ubmV4dCwKICAgICAgICAgICAgICB2YWxpZGF0b3I6ICh2YWx1ZSkgewogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgc3RhdGUuZW1haWwudmFsaWRhdGUoKTsKICAgICAgICAgICAgICAgIH0gb24gRW1haWxFeGNlcHRpb24gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGUubWVzc2FnZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICksCiAgICAgICAgICAgIGNvbnN0IFNpemVkQm94KGhlaWdodDogMTIpLAogICAgICAgICAgICBUZXh0Rm9ybUZpZWxkKAogICAgICAgICAgICAgIGtleTogY29uc3QgS2V5KCdwYXNzd29yZF9pbnB1dCcpLAogICAgICAgICAgICAgIG9uQ2hhbmdlZDogKG5ld1ZhbHVlKSA9PgogICAgICAgICAgICAgICAgICByZWYucmVhZChzaWdudXBTdGF0ZVByb3ZpZGVyLm5vdGlmaWVyKS5zZXRQYXNzd29yZChuZXdWYWx1ZSksCiAgICAgICAgICAgICAgZGVjb3JhdGlvbjogY29uc3QgSW5wdXREZWNvcmF0aW9uKAogICAgICAgICAgICAgICAgaGludFRleHQ6ICdQYXNzd29yZCcsCiAgICAgICAgICAgICAgICBsYWJlbFRleHQ6ICdQYXNzd29yZCcsCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICB0ZXh0SW5wdXRBY3Rpb246IFRleHRJbnB1dEFjdGlvbi5kb25lLAogICAgICAgICAgICAgIG9ic2N1cmVUZXh0OiB0cnVlLAogICAgICAgICAgICAgIHZhbGlkYXRvcjogKHZhbHVlKSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICBzdGF0ZS5wYXNzd29yZC52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgfSBvbiBQYXNzd29yZEV4Y2VwdGlvbiBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gZS5tZXNzYWdlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgKSwKICAgICAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiAyNCksCiAgICAgICAgICAgIEVsZXZhdGVkQnV0dG9uKAogICAgICAgICAgICAgIGtleTogY29uc3QgS2V5KCdzZW5kX2J1dHRvbicpLAogICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgYXN5bmMgewogICAgICAgICAgICAgICAgLy8gaGlkZSBrZXlib2FyZAogICAgICAgICAgICAgICAgRm9jdXNTY29wZS5vZihjb250ZXh0KS51bmZvY3VzKCk7CiAgICAgICAgICAgICAgICByZWYKICAgICAgICAgICAgICAgICAgICAucmVhZChzaWdudXBTdGF0ZVByb3ZpZGVyLm5vdGlmaWVyKQogICAgICAgICAgICAgICAgICAgIC5zaWdudXAoKQogICAgICAgICAgICAgICAgICAgIC50aGVuKAogICAgICAgICAgICAgICAgICAgICAgKHZhbHVlKSA9PiBjb250ZXh0LnB1c2hSZXBsYWNlbWVudCgnLycpLAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAuY2F0Y2hFcnJvcigKICAgICAgICAgICAgICAgICAgKGVycikgYXN5bmMgewogICAgICAgICAgICAgICAgICAgIHNob3dFcnJvclRvYXN0KAogICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgICAgICAgICAgdGV4dDogKGVyciBhcyBTaWdudXBFeGNlcHRpb24pLm1lc3NhZ2UgPz8gJycsCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdGVzdDogKGVycikgPT4gZXJyIGlzIFNpZ251cEV4Y2VwdGlvbiwKICAgICAgICAgICAgICAgICkuY2F0Y2hFcnJvcigKICAgICAgICAgICAgICAgICAgKGVycikgYXN5bmMgewogICAgICAgICAgICAgICAgICAgIHNob3dFcnJvclRvYXN0KAogICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnRXJyb3InLAogICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ0ZpbGwgYSB2YWxpZCBlbWFpbCBhbmQgcGFzc3dvcmQnLAogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2hpbGQ6IHN0YXRlLndoZW4oCiAgICAgICAgICAgICAgICAoXywgX18pID0+IGNvbnN0IFRleHQoJ0NyZWF0ZSBteSBhY2NvdW50JyksCiAgICAgICAgICAgICAgICBzZW5kaW5nOiAoXywgX18pID0+IGNvbnN0IEJ1dHRvbkxvYWRpbmcoKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICApLAogICAgICAgICAgICBjb25zdCBTaXplZEJveChoZWlnaHQ6IDQpLAogICAgICAgICAgICBUZXh0QnV0dG9uKAogICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgewogICAgICAgICAgICAgICAgY29udGV4dC5wdXNoUmVwbGFjZW1lbnQoJy9zaWduaW4nKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KAogICAgICAgICAgICAgICAgIkkgYWxyZWFkeSBoYXZlIGFuIGFjY291bnQiLAogICAgICAgICAgICAgICksCiAgICAgICAgICAgICksCiAgICAgICAgICBdLAogICAgICAgICksCiAgICAgICksCiAgICApOwogIH0KfQo=","type":"text"},{"path":"lib/modules/authentication/ui/widgets/recover_password_result.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpnb19yb3V0ZXIvZ29fcm91dGVyLmRhcnQnOwoKY2xhc3MgUmVjb3ZlclBhc3N3b3JkU2VudCBleHRlbmRzIFN0YXRlbGVzc1dpZGdldCB7CiAgY29uc3QgUmVjb3ZlclBhc3N3b3JkU2VudCh7c3VwZXIua2V5fSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgewogICAgcmV0dXJuIENlbnRlcigKICAgICAgY2hpbGQ6IENvbHVtbigKICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgY29uc3QgU3BhY2VyKCksCiAgICAgICAgICBjb25zdCBJY29uKAogICAgICAgICAgICBJY29ucy5jaGVja19jaXJjbGUsCiAgICAgICAgICAgIGNvbG9yOiBDb2xvcnMuZ3JlZW4sCiAgICAgICAgICAgIHNpemU6IDY0LAogICAgICAgICAgKSwKICAgICAgICAgIGNvbnN0IFNpemVkQm94KGhlaWdodDogMTYpLAogICAgICAgICAgVGV4dCgKICAgICAgICAgICAgJ0VtYWlsIHNlbnQnLAogICAgICAgICAgICBzdHlsZTogVGhlbWUub2YoY29udGV4dCkudGV4dFRoZW1lLmhlYWRsaW5lTWVkaXVtIS5jb3B5V2l0aCgKICAgICAgICAgICAgICAgICAgY29sb3I6IENvbG9ycy5ncmVlbiwKICAgICAgICAgICAgICAgICksCiAgICAgICAgICApLAogICAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiAxNiksCiAgICAgICAgICBTaXplZEJveCgKICAgICAgICAgICAgd2lkdGg6IDI1MCwKICAgICAgICAgICAgY2hpbGQ6IFRleHQoCiAgICAgICAgICAgICAgJ1dlIHNlbnQgeW91IGFuIGVtYWlsIHdpdGggYSBsaW5rIHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQnLAogICAgICAgICAgICAgIHRleHRBbGlnbjogVGV4dEFsaWduLmNlbnRlciwKICAgICAgICAgICAgICBzdHlsZTogVGhlbWUub2YoY29udGV4dCkudGV4dFRoZW1lLnRpdGxlTWVkaXVtIS5jb3B5V2l0aCgKICAgICAgICAgICAgICAgICAgICBjb2xvcjogVGhlbWUub2YoY29udGV4dCkuY29sb3JTY2hlbWUub25CYWNrZ3JvdW5kLAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICApLAogICAgICAgICAgKSwKICAgICAgICAgIGNvbnN0IFNpemVkQm94KGhlaWdodDogMTYpLAogICAgICAgICAgRWxldmF0ZWRCdXR0b24oCiAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgPT4gY29udGV4dC5wb3AoKSwKICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoIkdldCBiYWNrIHRvIFNpZ24gaW4iKSwKICAgICAgICAgICksCiAgICAgICAgICBjb25zdCBTcGFjZXIoKSwKICAgICAgICAgIFBhZGRpbmcoCiAgICAgICAgICAgIHBhZGRpbmc6IGNvbnN0IEVkZ2VJbnNldHMuYWxsKDI0LjApLAogICAgICAgICAgICBjaGlsZDogVGV4dCgKICAgICAgICAgICAgICAiTm90ZTogSWYgeW91IGRvbid0IHJlY2VpdmUgYW4gZW1haWwsIHBsZWFzZSBjaGVjayB5b3VyIHNwYW0gZm9sZGVyIiwKICAgICAgICAgICAgICB0ZXh0QWxpZ246IFRleHRBbGlnbi5jZW50ZXIsCiAgICAgICAgICAgICAgc3R5bGU6IFRoZW1lLm9mKGNvbnRleHQpLnRleHRUaGVtZS50aXRsZU1lZGl1bSEuY29weVdpdGgoCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IFRoZW1lLm9mKGNvbnRleHQpLmNvbG9yU2NoZW1lLm9uQmFja2dyb3VuZCwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgKSwKICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgKSwKICAgICk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/authentication/ui/widgets/round_signin.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL3NlcnZpY2VzLmRhcnQnOwoKdHlwZWRlZiBTb2NpYWxTaWduaW5DYWxsYmFjayA9IHZvaWQgRnVuY3Rpb24oKTsKCmNsYXNzIFNvY2lhbFNpZ25pbkJ1dHRvbiBleHRlbmRzIFN0YXRlbGVzc1dpZGdldCB7CiAgZmluYWwgSW1hZ2UgaWNvbkltYWdlOwogIGZpbmFsIFNvY2lhbFNpZ25pbkNhbGxiYWNrPyBvblByZXNzZWQ7CgogIGNvbnN0IFNvY2lhbFNpZ25pbkJ1dHRvbih7CiAgICBzdXBlci5rZXksCiAgICByZXF1aXJlZCB0aGlzLmljb25JbWFnZSwKICAgIHJlcXVpcmVkIHRoaXMub25QcmVzc2VkLAogIH0pOwoKICBmYWN0b3J5IFNvY2lhbFNpZ25pbkJ1dHRvbi5nb29nbGUoU29jaWFsU2lnbmluQ2FsbGJhY2sgb25QcmVzc2VkKSB7CiAgICByZXR1cm4gU29jaWFsU2lnbmluQnV0dG9uKAogICAgICBpY29uSW1hZ2U6IEltYWdlLmFzc2V0KCJhc3NldHMvaWNvbnMvZ29vZ2xlLnBuZyIsIHdpZHRoOiAyNCksCiAgICAgIG9uUHJlc3NlZDogb25QcmVzc2VkLAogICAgKTsKICB9CgogIGZhY3RvcnkgU29jaWFsU2lnbmluQnV0dG9uLmdvb2dsZVBsYXlHYW1lcyhTb2NpYWxTaWduaW5DYWxsYmFjayBvblByZXNzZWQpIHsKICAgIHJldHVybiBTb2NpYWxTaWduaW5CdXR0b24oCiAgICAgIGljb25JbWFnZTogSW1hZ2UuYXNzZXQoImFzc2V0cy9pY29ucy9nb29nbGVfcGxheV9nYW1lcy5wbmciLCB3aWR0aDogMjQpLAogICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZCwKICAgICk7CiAgfQoKICBmYWN0b3J5IFNvY2lhbFNpZ25pbkJ1dHRvbi5mYWNlYm9vayhTb2NpYWxTaWduaW5DYWxsYmFjayBvblByZXNzZWQpIHsKICAgIHJldHVybiBTb2NpYWxTaWduaW5CdXR0b24oCiAgICAgIGljb25JbWFnZTogSW1hZ2UuYXNzZXQoImFzc2V0cy9pY29ucy9mYWNlYm9vay5wbmciLCB3aWR0aDogMjQpLAogICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZCwKICAgICk7CiAgfQoKICBmYWN0b3J5IFNvY2lhbFNpZ25pbkJ1dHRvbi5hcHBsZShTb2NpYWxTaWduaW5DYWxsYmFjayBvblByZXNzZWQpIHsKICAgIHJldHVybiBTb2NpYWxTaWduaW5CdXR0b24oCiAgICAgIGljb25JbWFnZTogSW1hZ2UuYXNzZXQoImFzc2V0cy9pY29ucy9hcHBsZS5wbmciLCB3aWR0aDogMjQpLAogICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZCwKICAgICk7CiAgfQoKICBmYWN0b3J5IFNvY2lhbFNpZ25pbkJ1dHRvbi50d2l0dGVyKFNvY2lhbFNpZ25pbkNhbGxiYWNrIG9uUHJlc3NlZCkgewogICAgcmV0dXJuIFNvY2lhbFNpZ25pbkJ1dHRvbigKICAgICAgaWNvbkltYWdlOiBJbWFnZS5hc3NldCgiYXNzZXRzL2ljb25zL3R3aXR0ZXIucG5nIiwgd2lkdGg6IDI0KSwKICAgICAgb25QcmVzc2VkOiBvblByZXNzZWQsCiAgICApOwogIH0KCiAgZmFjdG9yeSBTb2NpYWxTaWduaW5CdXR0b24ubWljcm9zb2Z0KFNvY2lhbFNpZ25pbkNhbGxiYWNrIG9uUHJlc3NlZCkgewogICAgcmV0dXJuIFNvY2lhbFNpZ25pbkJ1dHRvbigKICAgICAgaWNvbkltYWdlOiBJbWFnZS5hc3NldCgiYXNzZXRzL2ljb25zL21pY3Jvc29mdC5wbmciLCB3aWR0aDogMjQpLAogICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZCwKICAgICk7CiAgfQoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIHJldHVybiBDb250YWluZXIoCiAgICAgIHdpZHRoOiA1NiwKICAgICAgZGVjb3JhdGlvbjogQm94RGVjb3JhdGlvbigKICAgICAgICBib3JkZXI6IEJvcmRlci5hbGwoY29sb3I6IENvbG9ycy5ibGFjazEyKSwKICAgICAgICBzaGFwZTogQm94U2hhcGUuY2lyY2xlLAogICAgICApLAogICAgICBjaGlsZDogUmF3TWF0ZXJpYWxCdXR0b24oCiAgICAgICAgZWxldmF0aW9uOiAwLAogICAgICAgIG9uUHJlc3NlZDogKCkgewogICAgICAgICAgSGFwdGljRmVlZGJhY2subWVkaXVtSW1wYWN0KCk7CiAgICAgICAgICBvblByZXNzZWQ/LmNhbGwoKTsKICAgICAgICB9LAogICAgICAgIHNoYXBlOiBjb25zdCBDaXJjbGVCb3JkZXIoKSwKICAgICAgICBmaWxsQ29sb3I6IENvbG9ycy50cmFuc3BhcmVudCwKICAgICAgICBwYWRkaW5nOiBjb25zdCBFZGdlSW5zZXRzLmFsbCgxNiksCiAgICAgICAgY2hpbGQ6IGljb25JbWFnZSwKICAgICAgKSwKICAgICk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/authentication/ui/widgets/social_separator.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CgpjbGFzcyBTb2NpYWxTZXBhcmF0b3IgZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIGNvbnN0IFNvY2lhbFNlcGFyYXRvcih7c3VwZXIua2V5fSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgewogICAgcmV0dXJuIFJvdygKICAgICAgY2hpbGRyZW46IFsKICAgICAgICBjb25zdCBFeHBhbmRlZCgKICAgICAgICAgIGNoaWxkOiBEaXZpZGVyKGNvbG9yOiBDb2xvcnMuYmxhY2sxMiksCiAgICAgICAgKSwKICAgICAgICBQYWRkaW5nKAogICAgICAgICAgcGFkZGluZzogY29uc3QgRWRnZUluc2V0cy5hbGwoMTYuMCksCiAgICAgICAgICBjaGlsZDogVGV4dCgKICAgICAgICAgICAgIk9yIHNpZ24gaW4gd2l0aCIsCiAgICAgICAgICAgIHRleHRBbGlnbjogVGV4dEFsaWduLmNlbnRlciwKICAgICAgICAgICAgc3R5bGU6IFRoZW1lLm9mKGNvbnRleHQpLnRleHRUaGVtZS5sYWJlbFNtYWxsLAogICAgICAgICAgKSwKICAgICAgICApLAogICAgICAgIGNvbnN0IEV4cGFuZGVkKAogICAgICAgICAgY2hpbGQ6IERpdmlkZXIoY29sb3I6IENvbG9ycy5ibGFjazEyKSwKICAgICAgICApLAogICAgICBdLAogICAgKTsKICB9Cn0K","type":"text"},{"path":"test/modules/authentication/data/api/auth_api_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2VudGl0aWVzL3VzZXJfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL2F1dGhlbnRpY2F0aW9uL2FwaS9hdXRoZW50aWNhdGlvbl9hcGlfaW50ZXJmYWNlLmRhcnQnOwoKLy8vIEZha2UgaW1wbGVtZW50YXRpb24gb2YgW0F1dGhlbnRpY2F0aW9uQXBpXQovLy8gVGhpcyBpcyB1c2VmdWwgZm9yIHRlc3RpbmcgcHVycG9zZXMKY2xhc3MgRmFrZUF1dGhlbnRpY2F0aW9uQXBpIGltcGxlbWVudHMgQXV0aGVudGljYXRpb25BcGkgewogIENyZWRlbnRpYWxzPyBjdXJyZW50OwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ251cChTdHJpbmcgZW1haWwsIFN0cmluZyBwYXNzd29yZCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluKFN0cmluZyBlbWFpbCwgU3RyaW5nIHBhc3N3b3JkKSBhc3luYyB7CiAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihzZWNvbmRzOiAxKSk7CiAgICBjdXJyZW50ID0gQ3JlZGVudGlhbHMoCiAgICAgIGlkOiAnZmFrZS11c2VyLWlkJywKICAgICAgdG9rZW46ICdmYWtlLXVzZXItdG9rZW4tMTIzNDU2Nzg5MCcsCiAgICApOwogICAgcmV0dXJuIGN1cnJlbnQhOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWduaW5Bbm9ueW1vdXNseSgpIGFzeW5jIHsKICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKHNlY29uZHM6IDEpKTsKICAgIGN1cnJlbnQgPSBDcmVkZW50aWFscygKICAgICAgaWQ6ICdmYWtlLXVzZXItaWQtYW5vbnltb3VzJywKICAgICAgdG9rZW46ICdmYWtlLXVzZXItdG9rZW4tMTIzNDU2Nzg5OCcsCiAgICApOwogICAgcmV0dXJuIGN1cnJlbnQhOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHNpZ25vdXQoKSBhc3luYyB7CiAgICBjdXJyZW50ID0gbnVsbDsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEdvb2dsZSgpIGFzeW5jIHsKICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKHNlY29uZHM6IDEpKTsKICAgIGN1cnJlbnQgPSBDcmVkZW50aWFscygKICAgICAgaWQ6ICdmYWtlLXVzZXItaWQnLAogICAgICB0b2tlbjogJ2Zha2UtdXNlci10b2tlbi0xMjM0NTY3ODkwJywKICAgICk7CiAgICByZXR1cm4gY3VycmVudCE7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ25pbldpdGhHb29nbGVQbGF5KCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEFwcGxlKCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxDcmVkZW50aWFscz4gc2lnbmluV2l0aEZhY2Vib29rKCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiByZWNvdmVyUGFzc3dvcmQoU3RyaW5nIGVtYWlsKSBhc3luYyB7CiAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDEwMCkpOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPENyZWRlbnRpYWxzPz4gZ2V0KCkgewogICAgcmV0dXJuIEZ1dHVyZS52YWx1ZShjdXJyZW50KTsKICB9CgogIHt7I2Fub255bW91c19hdXRofX0KICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gb25MaW5rZWRBY2NvdW50KCkgYXN5bmMge317ey9hbm9ueW1vdXNfYXV0aH19CgogIHt7I2Fub255bW91c19hdXRofX0KICBAb3ZlcnJpZGUKICBGdXR1cmU8Q3JlZGVudGlhbHM+IHNpZ251cEZyb21Bbm9ueW1vdXNXaXRoR29vZ2xlKCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9e3svYW5vbnltb3VzX2F1dGh9fQoKICB7eyNhbm9ueW1vdXNfYXV0aH19CiAgQG92ZXJyaWRlCiAgRnV0dXJlPENyZWRlbnRpYWxzPiBzaWdudXBGcm9tQW5vbnltb3VzV2l0aEFwcGxlKCkgYXN5bmMgewogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgY3VycmVudCA9IENyZWRlbnRpYWxzKAogICAgICBpZDogJ2Zha2UtdXNlci1pZCcsCiAgICAgIHRva2VuOiAnZmFrZS11c2VyLXRva2VuLTEyMzQ1Njc4OTAnLAogICAgKTsKICAgIHJldHVybiBjdXJyZW50ITsKICB9e3svYW5vbnltb3VzX2F1dGh9fQp9Cg==","type":"text"},{"path":"test/modules/authentication/data/api/user_api_fake.dart","data":"aW1wb3J0ICdkYXJ0OnR5cGVkX2RhdGEnOwoKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9zdG9yYWdlX2FwaS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS91c2VyX2FwaS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2VudGl0aWVzL3VwbG9hZF9yZXN1bHQuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9lbnRpdGllcy91c2VyX2VudGl0eS5kYXJ0JzsKCmNsYXNzIEZha2VVc2VyQXBpIGltcGxlbWVudHMgVXNlckFwaSB7CiAgZmluYWwgU3RvcmFnZUFwaSBzdG9yYWdlQXBpOwogIFVzZXJFbnRpdHk/IGdldFVzZXJSZXN1bHQ7CgogIEZha2VVc2VyQXBpKHsKICAgIHJlcXVpcmVkIHRoaXMuc3RvcmFnZUFwaSwKICB9KTsKCiAgQG92ZXJyaWRlCiAgRnV0dXJlPFVzZXJFbnRpdHk+IGdldChTdHJpbmcgaWQpIGFzeW5jIHsKICAgIHJldHVybiBnZXRVc2VyUmVzdWx0ID8/CiAgICAgICAgVXNlckVudGl0eSgKICAgICAgICAgIGlkOiAndXNlcmlkJywKICAgICAgICAgIG5hbWU6ICdNYWMgR3l2ZXInLAogICAgICAgICAgZW1haWw6ICdtYWNAZ3l2ZXIuY29tJywKICAgICAgICAgIGF2YXRhclBhdGg6ICdodHRwczovL2F2YXRhci5jb20vbWFjZ3l2ZXIucG5nJywKICAgICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICAgICBsYXN0VXBkYXRlRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICAgKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiBjcmVhdGUoVXNlckVudGl0eSB1c2VyKSBhc3luYyB7CiAgICBnZXRVc2VyUmVzdWx0ID0gdXNlcjsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiBkZWxldGUoU3RyaW5nIGlkKSB7CiAgICByZXR1cm4gRnV0dXJlLnZhbHVlKCk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gZGVsZXRlTWUoKSB7CiAgICByZXR1cm4gRnV0dXJlLnZhbHVlKCk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gdXBkYXRlKFVzZXJFbnRpdHkgdXNlcikgewogICAgLy8gVE9ETzogaW1wbGVtZW50IHVwZGF0ZQogICAgdGhyb3cgVW5pbXBsZW1lbnRlZEVycm9yKCk7CiAgfQoKICBAb3ZlcnJpZGUKICBTdHJlYW08VXBsb2FkUmVzdWx0PiB1cGRhdGVBdmF0YXIoU3RyaW5nIHVzZXJJZCwgVWludDhMaXN0IGRhdGEpIGFzeW5jKiB7CiAgICBmaW5hbCB0YXNrID0gc3RvcmFnZUFwaS51cGxvYWREYXRhKAogICAgICBkYXRhLAogICAgICAndXNlcnMvJHVzZXJJZC9hdmF0YXInLAogICAgICAndGh1bWIuanBnJywKICAgICAgbWltZVR5cGU6ICdpbWFnZS9qcGcnLAogICAgKTsKCiAgICBsYXRlIFVwbG9hZFJlc3VsdCBsYXN0UmVzOwogICAgYXdhaXQgZm9yIChmaW5hbCByZXMgaW4gdGFzaykgewogICAgICB5aWVsZCByZXM7CiAgICAgIGxhc3RSZXMgPSByZXM7CiAgICB9CiAgICBpZiAobGFzdFJlcyBjYXNlIFVwbG9hZFJlc3VsdENvbXBsZXRlZCgpKSB7CiAgICAgIHJldHVybjsKICAgIH0gZWxzZSB7CiAgICAgIHRocm93IEV4Y2VwdGlvbignVXBsb2FkIGZhaWxlZCcpOwogICAgfQogIH0KfQo=","type":"text"},{"path":"test/modules/authentication/lost_password_page_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi91aS9yZWNvdmVyX3Bhc3N3b3JkX3BhZ2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvYXV0aGVudGljYXRpb24vdWkvd2lkZ2V0cy9yZWNvdmVyX3Bhc3N3b3JkX3Jlc3VsdC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3Rlc3QvZmx1dHRlcl90ZXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKCmltcG9ydCAnLi4vLi4vdGVzdF91dGlscy5kYXJ0JzsKCnZvaWQgbWFpbigpIHsKICBGdXR1cmU8dm9pZD4gYmVmb3JlVGVzdChXaWRnZXRUZXN0ZXIgdGVzdGVyKSBhc3luYyB7CiAgICBhd2FpdCB0ZXN0ZXIucHVtcFBhZ2UoCiAgICAgIHJvdXRlckNvbmZpZzogR29Sb3V0ZXIoCiAgICAgICAgaW5pdGlhbExvY2F0aW9uOiAnL3JlY292ZXJfcGFzc3dvcmQnLAogICAgICAgIHJvdXRlczogWwogICAgICAgICAgR29Sb3V0ZSgKICAgICAgICAgICAgbmFtZTogJ2hvbWUnLAogICAgICAgICAgICBwYXRoOiAnLycsCiAgICAgICAgICAgIGJ1aWxkZXI6IChjb250ZXh0LCBzdGF0ZSkgPT4gY29uc3QgUGFnZUZha2UoQ29sb3JzLmJsdWVBY2NlbnQpLAogICAgICAgICAgKSwKICAgICAgICAgIEdvUm91dGUoCiAgICAgICAgICAgIG5hbWU6ICdyZWNvdmVyX3Bhc3N3b3JkJywKICAgICAgICAgICAgcGF0aDogJy9yZWNvdmVyX3Bhc3N3b3JkJywKICAgICAgICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHN0YXRlKSA9PiBjb25zdCBSZWNvdmVyUGFzc3dvcmRQYWdlKCksCiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICksCiAgICApOwogIH0KCiAgdGVzdFdpZGdldHMoCiAgICAnUmVjb3ZlciBwYXNzd29yZCBwYWdlID0+IHNob3VsZCBkaXNwbGF5IGVtYWlsIGlucHV0IGFuZCBzdWJtaXQgYnV0dG9uJywKICAgICh0ZXN0ZXIpIGFzeW5jIHsKICAgICAgYXdhaXQgYmVmb3JlVGVzdCh0ZXN0ZXIpOwoKICAgICAgZXhwZWN0KGZpbmQuYnlUeXBlKFRleHRGb3JtRmllbGQpLCBmaW5kc09uZVdpZGdldCk7CiAgICAgIGV4cGVjdChmaW5kLmJ5VHlwZShFbGV2YXRlZEJ1dHRvbiksIGZpbmRzT25lV2lkZ2V0KTsKICAgIH0sCiAgKTsKCiAgdGVzdFdpZGdldHMoCiAgICAnZmlsbCB2YWxpZCBlbWFpbCB0aGVuIHNlbmQgPT4gc2hvdWxkIHNob3cgcmVjb3ZlciBwYXNzd29yZCBzZW50IHBhZ2UnLAogICAgKHRlc3RlcikgYXN5bmMgewogICAgICBhd2FpdCBiZWZvcmVUZXN0KHRlc3Rlcik7CiAgICAgIGNvbnN0IGVtYWlsID0gJ2JydWNlQHdheW5lLmNvbSc7CgogICAgICBmaW5hbCBlbWFpbElucHV0RmluZGVyID0gZmluZC5ieUtleShjb25zdCBLZXkoJ2VtYWlsX2lucHV0JykpOwogICAgICBmaW5hbCBzZW5kQnV0dG9uRmluZGVyID0gZmluZC5ieUtleShjb25zdCBLZXkoJ3JlY292ZXJfYnV0dG9uJykpOwoKICAgICAgYXdhaXQgdGVzdGVyLmVudGVyVGV4dChlbWFpbElucHV0RmluZGVyLCBlbWFpbCk7CiAgICAgIGF3YWl0IHRlc3Rlci5wdW1wKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTAwMCkpOwogICAgICBhd2FpdCB0ZXN0ZXIudGFwKHNlbmRCdXR0b25GaW5kZXIpOwogICAgICBhd2FpdCB0ZXN0ZXIucHVtcChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDUwMCkpOwogICAgICBhd2FpdCB0ZXN0ZXIucHVtcEFuZFNldHRsZSgpOwoKICAgICAgZXhwZWN0KGZpbmQuYnlUeXBlKFJlY292ZXJQYXNzd29yZFNlbnQpLCBmaW5kc09uZVdpZGdldCk7CiAgICB9LAogICk7Cn0K","type":"text"},{"path":"test/modules/authentication/repositories/authentication_repository_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9odHRwX2NsaWVudC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9yZXBvc2l0b3JpZXMvYXV0aGVudGljYXRpb25fcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfdGVzdC9mbHV0dGVyX3Rlc3QuZGFydCc7CmltcG9ydCAncGFja2FnZTpsb2dnZXIvbG9nZ2VyLmRhcnQnOwoKaW1wb3J0ICcuLi8uLi8uLi9jb3JlL2RhdGEvYXBpL3N0b3JhZ2VfYXBpX2Zha2UuZGFydCc7CmltcG9ydCAnLi4vLi4vLi4vY29yZS9zZWN1cml0eS9zZWN1cmVkX3N0b3JhZ2VfZmFrZS5kYXJ0JzsKaW1wb3J0ICcuLi9kYXRhL2FwaS9hdXRoX2FwaV9mYWtlLmRhcnQnOwppbXBvcnQgJy4uL2RhdGEvYXBpL3VzZXJfYXBpX2Zha2UuZGFydCc7Cgp2b2lkIG1haW4oKSB7CiAgdGVzdCgnYXQgaW5pdGlhbGl6YXRpb24gY3JlZGVudGlhbHMgc2hvdWxkIGJlIG51bGwnLCAoKSBhc3luYyB7CiAgICBmaW5hbCBhdXRoUmVwb3NpdG9yeSA9IEh0dHBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkoCiAgICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICAgIGF1dGhlbnRpY2F0aW9uQXBpOiBGYWtlQXV0aGVudGljYXRpb25BcGkoKSwKICAgICAgc3RvcmFnZTogRmFrZUF1dGhTZWN1cmVkU3RvcmFnZS5lbXB0eSgpLAogICAgICB1c2VyQXBpOiBGYWtlVXNlckFwaShzdG9yYWdlQXBpOiBGYWtlU3RvcmFnZUFwaSgpKSwKICAgICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgICApOwogICAgZmluYWwgY3JlZGVudGlhbHMgPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgIGV4cGVjdCgKICAgICAgY3JlZGVudGlhbHMsCiAgICAgIGlzTnVsbCwKICAgICAgcmVhc29uOiAndXNlciBzaG91bGQgYmUgbnVsbCBhdCB0aGUgYmVnaW5uaW5nJywKICAgICk7CiAgfSk7CgogIHRlc3QoJ3VzZXIgc2lnbnVwIC0+IHVzZXIgc2hvdWxkIG5vdyBjb25uZWN0ZWQnLCAoKSBhc3luYyB7CiAgICBmaW5hbCBhdXRoUmVwb3NpdG9yeSA9IEh0dHBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkoCiAgICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICAgIGF1dGhlbnRpY2F0aW9uQXBpOiBGYWtlQXV0aGVudGljYXRpb25BcGkoKSwKICAgICAgc3RvcmFnZTogRmFrZUF1dGhTZWN1cmVkU3RvcmFnZS5lbXB0eSgpLAogICAgICB1c2VyQXBpOiBGYWtlVXNlckFwaShzdG9yYWdlQXBpOiBGYWtlU3RvcmFnZUFwaSgpKSwKICAgICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgICApOwogICAgYXdhaXQgYXV0aFJlcG9zaXRvcnkuc2lnbnVwKCdlbWFpbCcsICdwYXNzd29yZCcpOwogICAgZmluYWwgY3JlZGVudGlhbHMgPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgIGV4cGVjdCgKICAgICAgY3JlZGVudGlhbHMsCiAgICAgIGlzTm90TnVsbCwKICAgICAgcmVhc29uOiAndXNlciBzaG91bGQgYmUgY29ubmVjdGVkJywKICAgICk7CiAgfSk7CgogIHRlc3QoJ3VzZXIgc2lnbmluIC0+IHVzZXIgc2hvdWxkIG5vdyBjb25uZWN0ZWQnLCAoKSBhc3luYyB7CiAgICBmaW5hbCBhdXRoUmVwb3NpdG9yeSA9IEh0dHBBdXRoZW50aWNhdGlvblJlcG9zaXRvcnkoCiAgICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICAgIGF1dGhlbnRpY2F0aW9uQXBpOiBGYWtlQXV0aGVudGljYXRpb25BcGkoKSwKICAgICAgc3RvcmFnZTogRmFrZUF1dGhTZWN1cmVkU3RvcmFnZS5lbXB0eSgpLAogICAgICB1c2VyQXBpOiBGYWtlVXNlckFwaShzdG9yYWdlQXBpOiBGYWtlU3RvcmFnZUFwaSgpKSwKICAgICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgICApOwogICAgYXdhaXQgYXV0aFJlcG9zaXRvcnkuc2lnbmluKCdlbWFpbCcsICdwYXNzd29yZCcpOwogICAgZmluYWwgY3JlZGVudGlhbHMgPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgIGV4cGVjdCgKICAgICAgY3JlZGVudGlhbHMsCiAgICAgIGlzTm90TnVsbCwKICAgICAgcmVhc29uOiAndXNlciBzaG91bGQgYmUgY29ubmVjdGVkJywKICAgICk7CiAgfSk7CgogIHRlc3QoCiAgICAndXNlciBpcyBjb25uZWN0ZWQgdGhlbiBsb2dvdXQgLT4gdXNlciBzaG91bGQgbm93IGJlIGluIHVuYXV0aCBzdGF0ZScsCiAgICAoKSBhc3luYyB7CiAgICAgIGZpbmFsIGF1dGhSZXBvc2l0b3J5ID0gSHR0cEF1dGhlbnRpY2F0aW9uUmVwb3NpdG9yeSgKICAgICAgICBsb2dnZXI6IExvZ2dlcigpLAogICAgICAgIGF1dGhlbnRpY2F0aW9uQXBpOiBGYWtlQXV0aGVudGljYXRpb25BcGkoKSwKICAgICAgICB1c2VyQXBpOiBGYWtlVXNlckFwaShzdG9yYWdlQXBpOiBGYWtlU3RvcmFnZUFwaSgpKSwKICAgICAgICBzdG9yYWdlOiBGYWtlQXV0aFNlY3VyZWRTdG9yYWdlLmVtcHR5KCksCiAgICAgICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgICAgICk7CiAgICAgIGF3YWl0IGF1dGhSZXBvc2l0b3J5LnNpZ25pbignZW1haWwnLCAncGFzc3dvcmQnKTsKICAgICAgdmFyIGNyZWRlbnRpYWxzID0gYXdhaXQgYXV0aFJlcG9zaXRvcnkuZ2V0KCk7CiAgICAgIGV4cGVjdCgKICAgICAgICBjcmVkZW50aWFscywKICAgICAgICBpc05vdE51bGwsCiAgICAgICAgcmVhc29uOiAndXNlciBzaG91bGQgYmUgY29ubmVjdGVkJywKICAgICAgKTsKICAgICAgYXdhaXQgYXV0aFJlcG9zaXRvcnkubG9nb3V0KCk7CiAgICAgIGNyZWRlbnRpYWxzID0gYXdhaXQgYXV0aFJlcG9zaXRvcnkuZ2V0KCk7CiAgICAgIGV4cGVjdCgKICAgICAgICBjcmVkZW50aWFscywKICAgICAgICBpc051bGwsCiAgICAgICAgcmVhc29uOiAndXNlciBzaG91bGQgYmUgZGlzY29ubmVjdGVkJywKICAgICAgKTsKICAgIH0sCiAgKTsKfQo=","type":"text"},{"path":"test/modules/authentication/signin_page_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9odHRwX2NsaWVudC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9yZXBvc2l0b3JpZXMvYXV0aGVudGljYXRpb25fcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi91aS9zaWduaW5fcGFnZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3Rlc3QvZmx1dHRlcl90ZXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmxvZ2dlci9sb2dnZXIuZGFydCc7CgppbXBvcnQgJy4uLy4uL2NvcmUvZGF0YS9hcGkvc3RvcmFnZV9hcGlfZmFrZS5kYXJ0JzsKaW1wb3J0ICcuLi8uLi9jb3JlL3NlY3VyaXR5L3NlY3VyZWRfc3RvcmFnZV9mYWtlLmRhcnQnOwppbXBvcnQgJy4uLy4uL3Rlc3RfdXRpbHMuZGFydCc7CmltcG9ydCAnZGF0YS9hcGkvYXV0aF9hcGlfZmFrZS5kYXJ0JzsKaW1wb3J0ICdkYXRhL2FwaS91c2VyX2FwaV9mYWtlLmRhcnQnOwoKdm9pZCBtYWluKCkgewogIGZpbmFsIGF1dGhBcGlGYWtlID0gRmFrZUF1dGhlbnRpY2F0aW9uQXBpKCk7CiAgZmluYWwgc3RvcmFnZUZha2UgPSBGYWtlQXV0aFNlY3VyZWRTdG9yYWdlLmVtcHR5KCk7CgogIGZpbmFsIGF1dGhSZXBvc2l0b3J5ID0gSHR0cEF1dGhlbnRpY2F0aW9uUmVwb3NpdG9yeSgKICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICBhdXRoZW50aWNhdGlvbkFwaTogYXV0aEFwaUZha2UsCiAgICBzdG9yYWdlOiBzdG9yYWdlRmFrZSwKICAgIHVzZXJBcGk6IEZha2VVc2VyQXBpKHN0b3JhZ2VBcGk6IEZha2VTdG9yYWdlQXBpKCkpLAogICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgKTsKCiAgRnV0dXJlPHZvaWQ+IGJlZm9yZVRlc3QoV2lkZ2V0VGVzdGVyIHRlc3RlcikgYXN5bmMgewogICAgYXdhaXQgdGVzdGVyLnB1bXBQYWdlKAogICAgICBhdXRoQXBpRmFrZU92ZXJyaWRlOiBhdXRoQXBpRmFrZSwKICAgICAgYXV0aFNlY3VyZWRTdG9yYWdlRmFrZU92ZXJyaWRlOiBzdG9yYWdlRmFrZSwKICAgICAgcm91dGVyQ29uZmlnOiBHb1JvdXRlcigKICAgICAgICBpbml0aWFsTG9jYXRpb246ICcvc2lnbmluJywKICAgICAgICByb3V0ZXM6IFsKICAgICAgICAgIEdvUm91dGUoCiAgICAgICAgICAgIHBhdGg6ICcvJywKICAgICAgICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHN0YXRlKSA9PiBjb25zdCBQYWdlRmFrZShDb2xvcnMuYmx1ZUFjY2VudCksCiAgICAgICAgICApLAogICAgICAgICAgR29Sb3V0ZSgKICAgICAgICAgICAgcGF0aDogJy9zaWduaW4nLAogICAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCwgc3RhdGUpID0+IGNvbnN0IFNpZ25pblBhZ2UoKSwKICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgKSwKICAgICk7CiAgICBhd2FpdCBhdXRoUmVwb3NpdG9yeS5sb2dvdXQoKTsKICB9CgogIGZpbmFsIHZhbGlkSW5wdXRzID0gVmFsdWVWYXJpYW50PFRlc3RFbnRyeT4oewogICAgY29uc3QgVGVzdEVudHJ5KCJ0ZXN0QGV4YW1wbGUuY29tIiwgInBhc3N3b3JkIiksCiAgICBjb25zdCBUZXN0RW50cnkoInRlc3RAZ21haWwuY29tIiwgInBhc3N3b3JkZGRkQDEyNTQiKSwKICAgIGNvbnN0IFRlc3RFbnRyeSgiMTJkMUBvdWNoLmlzIiwgIkFkbmRqRkZGR0ciKSwKICB9KTsKCiAgZmluYWwgaW52YWxpZElucHV0cyA9IFZhbHVlVmFyaWFudDxUZXN0RW50cnk+KHsKICAgIGNvbnN0IFRlc3RFbnRyeSgidGVzdC5jb20iLCAicGFzc3dvcmQiKSwKICAgIGNvbnN0IFRlc3RFbnRyeSgidGVzdEBnbWFpbCIsICJwYXNzd29yZDEyNTQiKSwKICAgIGNvbnN0IFRlc3RFbnRyeSgiMTJkMUBvdWNoLmlzIiwgImEiKSwKICB9KTsKCiAgdGVzdFdpZGdldHMoCiAgICAnZmlsbCB2YWxpZCBlbWFpbCwgcGFzc3dvcmQgYW5kIHN1Ym1pdCA9PiBzaG91bGQgYmUgY29ubmVjdGVkJywKICAgICh0ZXN0ZXIpIGFzeW5jIHsKICAgICAgYXdhaXQgYmVmb3JlVGVzdCh0ZXN0ZXIpOwoKICAgICAgdmFyIGF1dGggPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgICAgZXhwZWN0KGF1dGgsIGlzTnVsbCwgcmVhc29uOiAndXNlciBzaG91bGQgYmUgbm90IGF1dGhlbnRpY2F0ZWQnKTsKCiAgICAgIGZpbmFsIGVtYWlsSW5wdXRGaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgnZW1haWxfaW5wdXQnKSk7CiAgICAgIGZpbmFsIHBhc3N3b3JkSW5wdXRGaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgncGFzc3dvcmRfaW5wdXQnKSk7CgogICAgICAvLyBFbnRlciB0ZXh0IGludG8gdGhlIGVtYWlsIGFuZCBwYXNzd29yZCBpbnB1dCBmaWVsZHMKICAgICAgYXdhaXQgdGVzdGVyLmVudGVyVGV4dChlbWFpbElucHV0RmluZGVyLCB2YWxpZElucHV0cy5jdXJyZW50VmFsdWUhLmVtYWlsKTsKICAgICAgYXdhaXQgdGVzdGVyLmVudGVyVGV4dCgKICAgICAgICBwYXNzd29yZElucHV0RmluZGVyLAogICAgICAgIHZhbGlkSW5wdXRzLmN1cnJlbnRWYWx1ZSEucGFzc3dvcmQsCiAgICAgICk7CgogICAgICAvLyBGaW5kIGFuZCB0YXAgdGhlIHNlbmQgYnV0dG9uCiAgICAgIGZpbmFsIHNlbmRCdXR0b25GaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgnc2VuZF9idXR0b24nKSk7CiAgICAgIGF3YWl0IHRlc3Rlci50YXAoc2VuZEJ1dHRvbkZpbmRlcik7CgogICAgICAvLyBXYWl0IGZvciB0aGUgc3RhdGUgdG8gdXBkYXRlIGFuZCBvdXIgZmFrZSBkZWxheSB0byBmaW5pc2gKICAgICAgYXdhaXQgdGVzdGVyLnB1bXAoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxNTAwKSk7CiAgICAgIGF3YWl0IHRlc3Rlci5wdW1wQW5kU2V0dGxlKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogNTApKTsKCiAgICAgIGF1dGggPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgICAgZXhwZWN0KGF1dGgsIGlzTm90TnVsbCwgcmVhc29uOiAndXNlciBzaG91bGQgYmUgYXV0aGVudGljYXRlZCcpOwogICAgfSwKICAgIHZhcmlhbnQ6IHZhbGlkSW5wdXRzLAogICk7CgogIHRlc3RXaWRnZXRzKAogICAgJ2ZpbGwgaW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCBhbmQgc3VibWl0ID0+IHNob3VsZCBub3QgdHJ5IHRvIGF1dGhlbnRpY2F0ZScsCiAgICAodGVzdGVyKSBhc3luYyB7CiAgICAgIGF3YWl0IGJlZm9yZVRlc3QodGVzdGVyKTsKCiAgICAgIC8vIEZpbmQgdGhlIGVtYWlsIGFuZCBwYXNzd29yZCBpbnB1dCBmaWVsZHMKICAgICAgZmluYWwgZW1haWxJbnB1dEZpbmRlciA9IGZpbmQuYnlLZXkoY29uc3QgS2V5KCdlbWFpbF9pbnB1dCcpKTsKICAgICAgZmluYWwgcGFzc3dvcmRJbnB1dEZpbmRlciA9IGZpbmQuYnlLZXkoY29uc3QgS2V5KCdwYXNzd29yZF9pbnB1dCcpKTsKCiAgICAgIC8vIEVudGVyIHRleHQgaW50byB0aGUgZW1haWwgYW5kIHBhc3N3b3JkIGlucHV0IGZpZWxkcwogICAgICBhd2FpdCB0ZXN0ZXIuZW50ZXJUZXh0KAogICAgICAgICAgZW1haWxJbnB1dEZpbmRlciwgaW52YWxpZElucHV0cy5jdXJyZW50VmFsdWUhLmVtYWlsKTsKICAgICAgYXdhaXQgdGVzdGVyLmVudGVyVGV4dCgKICAgICAgICAgIHBhc3N3b3JkSW5wdXRGaW5kZXIsIGludmFsaWRJbnB1dHMuY3VycmVudFZhbHVlIS5wYXNzd29yZCk7CgogICAgICAvLyBGaW5kIGFuZCB0YXAgdGhlIHNlbmQgYnV0dG9uCiAgICAgIGZpbmFsIHNlbmRCdXR0b25GaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgnc2VuZF9idXR0b24nKSk7CiAgICAgIGF3YWl0IHRlc3Rlci50YXAoc2VuZEJ1dHRvbkZpbmRlcik7CgogICAgICAvLyBXYWl0IGZvciB0aGUgc3RhdGUgdG8gdXBkYXRlCiAgICAgIGF3YWl0IHRlc3Rlci5wdW1wKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTUwMCkpOwoKICAgICAgZmluYWwgYXV0aCA9IGF3YWl0IGF1dGhSZXBvc2l0b3J5LmdldCgpOwogICAgICBleHBlY3QoYXV0aCwgaXNOdWxsLCByZWFzb246ICdFbWFpbCBvciBwYXNzd29yZCB3YXMgaW5jb3JlY3QnKTsKICAgIH0sCiAgICB2YXJpYW50OiBpbnZhbGlkSW5wdXRzLAogICk7Cn0KCmNsYXNzIFRlc3RFbnRyeSB7CiAgZmluYWwgU3RyaW5nIGVtYWlsOwogIGZpbmFsIFN0cmluZyBwYXNzd29yZDsKCiAgY29uc3QgVGVzdEVudHJ5KHRoaXMuZW1haWwsIHRoaXMucGFzc3dvcmQpOwoKICBAb3ZlcnJpZGUKICBTdHJpbmcgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gJ3tlbWFpbDogJGVtYWlsLCBwYXNzd29yZDogJHBhc3N3b3JkfSc7CiAgfQp9Cg==","type":"text"},{"path":"test/modules/authentication/signup_page_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9odHRwX2NsaWVudC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi9yZXBvc2l0b3JpZXMvYXV0aGVudGljYXRpb25fcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9hdXRoZW50aWNhdGlvbi91aS9zaWdudXBfcGFnZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3Rlc3QvZmx1dHRlcl90ZXN0LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Z29fcm91dGVyL2dvX3JvdXRlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmxvZ2dlci9sb2dnZXIuZGFydCc7CgppbXBvcnQgJy4uLy4uL2NvcmUvZGF0YS9hcGkvc3RvcmFnZV9hcGlfZmFrZS5kYXJ0JzsKaW1wb3J0ICcuLi8uLi9jb3JlL3NlY3VyaXR5L3NlY3VyZWRfc3RvcmFnZV9mYWtlLmRhcnQnOwppbXBvcnQgJy4uLy4uL3Rlc3RfdXRpbHMuZGFydCc7CmltcG9ydCAnZGF0YS9hcGkvYXV0aF9hcGlfZmFrZS5kYXJ0JzsKaW1wb3J0ICdkYXRhL2FwaS91c2VyX2FwaV9mYWtlLmRhcnQnOwoKdm9pZCBtYWluKCkgewogIGZpbmFsIGF1dGhBcGlGYWtlID0gRmFrZUF1dGhlbnRpY2F0aW9uQXBpKCk7CiAgZmluYWwgc3RvcmFnZUZha2UgPSBGYWtlQXV0aFNlY3VyZWRTdG9yYWdlLmVtcHR5KCk7CgogIGZpbmFsIGF1dGhSZXBvc2l0b3J5ID0gSHR0cEF1dGhlbnRpY2F0aW9uUmVwb3NpdG9yeSgKICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICBhdXRoZW50aWNhdGlvbkFwaTogYXV0aEFwaUZha2UsCiAgICBzdG9yYWdlOiBzdG9yYWdlRmFrZSwKICAgIHVzZXJBcGk6IEZha2VVc2VyQXBpKHN0b3JhZ2VBcGk6IEZha2VTdG9yYWdlQXBpKCkpLAogICAgaHR0cENsaWVudDogSHR0cENsaWVudChiYXNlVXJsOiAnJyksCiAgKTsKCiAgRnV0dXJlPHZvaWQ+IGJlZm9yZVRlc3QoV2lkZ2V0VGVzdGVyIHRlc3RlcikgYXN5bmMgewogICAgYXdhaXQgdGVzdGVyLnB1bXBQYWdlKAogICAgICBhdXRoQXBpRmFrZU92ZXJyaWRlOiBhdXRoQXBpRmFrZSwKICAgICAgYXV0aFNlY3VyZWRTdG9yYWdlRmFrZU92ZXJyaWRlOiBzdG9yYWdlRmFrZSwKICAgICAgcm91dGVyQ29uZmlnOiBHb1JvdXRlcigKICAgICAgICBpbml0aWFsTG9jYXRpb246ICcvc2lnbnVwJywKICAgICAgICByb3V0ZXM6IFsKICAgICAgICAgIEdvUm91dGUoCiAgICAgICAgICAgIHBhdGg6ICcvJywKICAgICAgICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHN0YXRlKSA9PiBjb25zdCBQYWdlRmFrZShDb2xvcnMuYmx1ZUFjY2VudCksCiAgICAgICAgICApLAogICAgICAgICAgR29Sb3V0ZSgKICAgICAgICAgICAgcGF0aDogJy9zaWdudXAnLAogICAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCwgc3RhdGUpID0+IGNvbnN0IFNpZ251cFBhZ2UoKSwKICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgKSwKICAgICk7CiAgICBhd2FpdCBhdXRoUmVwb3NpdG9yeS5sb2dvdXQoKTsKICB9CgogIGZpbmFsIHZhbGlkSW5wdXRzID0gVmFsdWVWYXJpYW50PFNpZ251cFRlc3RFbnRyeT4oewogICAgY29uc3QgU2lnbnVwVGVzdEVudHJ5KCJ0ZXN0QGV4YW1wbGUuY29tIiwgInBhc3N3b3JkIiksCiAgICAvLyBjb25zdCBTaWdudXBUZXN0RW50cnkoInRlc3RAZ21haWwuY29tIiwgInBhc3N3b3JkZGRkQDEyNTQiKSwKICAgIC8vIGNvbnN0IFNpZ251cFRlc3RFbnRyeSgiMTJkMUBvdWNoLmlzIiwgIkFkbmRqRkZGR0ciKSwKICB9KTsKCiAgZmluYWwgaW52YWxpZElucHV0cyA9IFZhbHVlVmFyaWFudDxTaWdudXBUZXN0RW50cnk+KHsKICAgIGNvbnN0IFNpZ251cFRlc3RFbnRyeSgidGVzdC5jb20iLCAicGFzc3dvcmQiKSwKICAgIGNvbnN0IFNpZ251cFRlc3RFbnRyeSgidGVzdEBnbWFpbCIsICJwYXNzd29yZDEyNTQiKSwKICAgIGNvbnN0IFNpZ251cFRlc3RFbnRyeSgiMTJkMUBvdWNoLmlzIiwgImEiKSwKICB9KTsKCiAgdGVzdFdpZGdldHMoCiAgICAnZmlsbCB2YWxpZCBlbWFpbCwgcGFzc3dvcmQgYW5kIHN1Ym1pdCA9PiBzaG91bGQgY3JlYXRlIHVzZXInLAogICAgKHRlc3RlcikgYXN5bmMgewogICAgICBhd2FpdCBiZWZvcmVUZXN0KHRlc3Rlcik7CgogICAgICB2YXIgYXV0aCA9IGF3YWl0IGF1dGhSZXBvc2l0b3J5LmdldCgpOwogICAgICBleHBlY3QoYXV0aCwgaXNOdWxsLCByZWFzb246ICd1c2VyIHNob3VsZCBiZSBub3QgYXV0aGVudGljYXRlZCcpOwoKICAgICAgZmluYWwgZW1haWxJbnB1dEZpbmRlciA9IGZpbmQuYnlLZXkoY29uc3QgS2V5KCdlbWFpbF9pbnB1dCcpKTsKICAgICAgZmluYWwgcGFzc3dvcmRJbnB1dEZpbmRlciA9IGZpbmQuYnlLZXkoY29uc3QgS2V5KCdwYXNzd29yZF9pbnB1dCcpKTsKCiAgICAgIC8vIEVudGVyIHRleHQgaW50byB0aGUgZW1haWwgYW5kIHBhc3N3b3JkIGlucHV0IGZpZWxkcwogICAgICBhd2FpdCB0ZXN0ZXIuZW50ZXJUZXh0KGVtYWlsSW5wdXRGaW5kZXIsIHZhbGlkSW5wdXRzLmN1cnJlbnRWYWx1ZSEuZW1haWwpOwogICAgICBhd2FpdCB0ZXN0ZXIuZW50ZXJUZXh0KAogICAgICAgIHBhc3N3b3JkSW5wdXRGaW5kZXIsCiAgICAgICAgdmFsaWRJbnB1dHMuY3VycmVudFZhbHVlIS5wYXNzd29yZCwKICAgICAgKTsKCiAgICAgIC8vIEZpbmQgYW5kIHRhcCB0aGUgc2VuZCBidXR0b24KICAgICAgZmluYWwgc2VuZEJ1dHRvbkZpbmRlciA9IGZpbmQuYnlLZXkoY29uc3QgS2V5KCdzZW5kX2J1dHRvbicpKTsKICAgICAgYXdhaXQgdGVzdGVyLnRhcChzZW5kQnV0dG9uRmluZGVyKTsKCiAgICAgIC8vIFdhaXQgZm9yIHRoZSBzdGF0ZSB0byB1cGRhdGUgYW5kIG91ciBmYWtlIGRlbGF5IHRvIGZpbmlzaAogICAgICBhd2FpdCB0ZXN0ZXIucHVtcChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKICAgICAgYXdhaXQgdGVzdGVyLnB1bXBBbmRTZXR0bGUoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiA1MCkpOwoKICAgICAgYXV0aCA9IGF3YWl0IGF1dGhSZXBvc2l0b3J5LmdldCgpOwogICAgICBleHBlY3QoYXV0aCwgaXNOb3ROdWxsLCByZWFzb246ICd1c2VyIHNob3VsZCBiZSBhdXRoZW50aWNhdGVkJyk7CiAgICB9LAogICAgdmFyaWFudDogdmFsaWRJbnB1dHMsCiAgKTsKCiAgdGVzdFdpZGdldHMoCiAgICAnZmlsbCBpbnZhbGlkIGVtYWlsIG9yIHBhc3N3b3JkIGFuZCBzdWJtaXQgPT4gc2hvdWxkIG5vdCB0cnkgdG8gY3JlYXRlIHVzZXInLAogICAgKHRlc3RlcikgYXN5bmMgewogICAgICBhd2FpdCBiZWZvcmVUZXN0KHRlc3Rlcik7CgogICAgICAvLyBGaW5kIHRoZSBlbWFpbCBhbmQgcGFzc3dvcmQgaW5wdXQgZmllbGRzCiAgICAgIGZpbmFsIGVtYWlsSW5wdXRGaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgnZW1haWxfaW5wdXQnKSk7CiAgICAgIGZpbmFsIHBhc3N3b3JkSW5wdXRGaW5kZXIgPSBmaW5kLmJ5S2V5KGNvbnN0IEtleSgncGFzc3dvcmRfaW5wdXQnKSk7CgogICAgICAvLyBFbnRlciB0ZXh0IGludG8gdGhlIGVtYWlsIGFuZCBwYXNzd29yZCBpbnB1dCBmaWVsZHMKICAgICAgYXdhaXQgdGVzdGVyLmVudGVyVGV4dCgKICAgICAgICAgIGVtYWlsSW5wdXRGaW5kZXIsIGludmFsaWRJbnB1dHMuY3VycmVudFZhbHVlIS5lbWFpbCk7CiAgICAgIGF3YWl0IHRlc3Rlci5lbnRlclRleHQoCiAgICAgICAgICBwYXNzd29yZElucHV0RmluZGVyLCBpbnZhbGlkSW5wdXRzLmN1cnJlbnRWYWx1ZSEucGFzc3dvcmQpOwoKICAgICAgLy8gRmluZCBhbmQgdGFwIHRoZSBzZW5kIGJ1dHRvbgogICAgICBmaW5hbCBzZW5kQnV0dG9uRmluZGVyID0gZmluZC5ieUtleShjb25zdCBLZXkoJ3NlbmRfYnV0dG9uJykpOwogICAgICBhd2FpdCB0ZXN0ZXIudGFwKHNlbmRCdXR0b25GaW5kZXIpOwoKICAgICAgLy8gV2FpdCBmb3IgdGhlIHN0YXRlIHRvIHVwZGF0ZQogICAgICBhd2FpdCB0ZXN0ZXIucHVtcChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKCiAgICAgIGZpbmFsIGF1dGggPSBhd2FpdCBhdXRoUmVwb3NpdG9yeS5nZXQoKTsKICAgICAgZXhwZWN0KGF1dGgsIGlzTnVsbCwgcmVhc29uOiAnRW1haWwgb3IgcGFzc3dvcmQgd2FzIGluY29yZWN0Jyk7CiAgICB9LAogICAgdmFyaWFudDogaW52YWxpZElucHV0cywKICApOwp9CgpjbGFzcyBTaWdudXBUZXN0RW50cnkgewogIGZpbmFsIFN0cmluZyBlbWFpbDsKICBmaW5hbCBTdHJpbmcgcGFzc3dvcmQ7CgogIGNvbnN0IFNpZ251cFRlc3RFbnRyeSh0aGlzLmVtYWlsLCB0aGlzLnBhc3N3b3JkKTsKCiAgQG92ZXJyaWRlCiAgU3RyaW5nIHRvU3RyaW5nKCkgewogICAgcmV0dXJuICd7ZW1haWw6ICRlbWFpbCwgcGFzc3dvcmQ6ICRwYXNzd29yZH0nOwogIH0KfQo=","type":"text"}],"hooks":[],"name":"module_authentication","description":"A new brick created with the Mason CLI.","version":"0.1.0+1","environment":{"mason":">=0.1.0-dev.51 <0.1.0"},"readme":{"path":"README.md","data":"IyBtb2R1bGVfYXV0aGVudGljYXRpb24KClshW1Bvd2VyZWQgYnkgTWFzb25dKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZW5kcG9pbnQ/dXJsPWh0dHBzJTNBJTJGJTJGdGlueXVybC5jb20lMkZtYXNvbi1iYWRnZSldKGh0dHBzOi8vZ2l0aHViLmNvbS9mZWxhbmdlbC9tYXNvbikKCkEgbmV3IGJyaWNrIGNyZWF0ZWQgd2l0aCB0aGUgTWFzb24gQ0xJLgoKX0dlbmVyYXRlZCBieSBbbWFzb25dWzFdIPCfp7FfCgojIyBHZXR0aW5nIFN0YXJ0ZWQg8J+agAoKVGhpcyBpcyBhIHN0YXJ0aW5nIHBvaW50IGZvciBhIG5ldyBicmljay4KQSBmZXcgcmVzb3VyY2VzIHRvIGdldCB5b3Ugc3RhcnRlZCBpZiB0aGlzIGlzIHlvdXIgZmlyc3QgYnJpY2sgdGVtcGxhdGU6CgotIFtPZmZpY2lhbCBNYXNvbiBEb2N1bWVudGF0aW9uXVsyXQotIFtDb2RlIGdlbmVyYXRpb24gd2l0aCBNYXNvbiBCbG9nXVszXQotIFtWZXJ5IEdvb2QgTGl2ZXN0cmVhbTogRmVsaXggQW5nZWxvdiBEZW1vcyBNYXNvbl1bNF0KLSBbRmx1dHRlciBQYWNrYWdlIG9mIHRoZSBXZWVrOiBNYXNvbl1bNV0KLSBbT2JzZXJ2YWJsZSBGbHV0dGVyOiBCdWlsZGluZyBhIE1hc29uIGJyaWNrXVs2XQotIFtNZWV0IE1hc29uOiBGbHV0dGVyIFZpa2luZ3MgMjAyMl1bN10KClsxXTogaHR0cHM6Ly9naXRodWIuY29tL2ZlbGFuZ2VsL21hc29uClsyXTogaHR0cHM6Ly9kb2NzLmJyaWNraHViLmRldgpbM106IGh0dHBzOi8vdmVyeWdvb2QudmVudHVyZXMvYmxvZy9jb2RlLWdlbmVyYXRpb24td2l0aC1tYXNvbgpbNF06IGh0dHBzOi8veW91dHUuYmUvRzRQVGpBNnRwVFUKWzVdOiBodHRwczovL3lvdXR1LmJlL3FqQTBKRmlQTW5RCls2XTogaHR0cHM6Ly95b3V0dS5iZS9vOEIxRWZjVWlzdwpbN106IGh0dHBzOi8veW91dHUuYmUvTFhoZ2lGNUhpUWcK","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjEuMCsxCgotIFRPRE86IERlc2NyaWJlIGluaXRpYWwgcmVsZWFzZS4K","type":"text"},"license":{"path":"LICENSE","data":"VE9ETzogQWRkIHlvdXIgbGljZW5zZSBoZXJlLgo=","type":"text"},"vars":{"firebase":{"type":"boolean","description":"generate bricks for firebase","default":false},"supabase":{"type":"boolean","description":"generate bricks for supabase","default":false},"http_client":{"type":"boolean","description":"generate bricks for http client","default":false},"googleSignIn":{"type":"boolean","description":"googleSignIn","default":false,"prompt":"Use Google Sign In?"},"googlePlaySignIn":{"type":"boolean","description":"googlePlaySignIn","default":false,"prompt":"Use Google Play Sign In?"},"facebookSignIn":{"type":"boolean","description":"facebookSignIn","default":false,"prompt":"Use Facebook Sign In?"},"appleSignIn":{"type":"boolean","description":"appleSignIn","default":false,"prompt":"Use Apple Sign In?"},"addGoogleSigninDependency":{"type":"boolean","description":"addGoogleSigninDependency","default":false,"prompt":"Add Google Sign In Dependency?"},"anonymous_auth":{"type":"boolean","description":"generate bricks for anonymous auth","default":false}}});