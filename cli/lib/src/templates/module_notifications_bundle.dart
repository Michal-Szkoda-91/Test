// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final moduleNotificationsBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"lib/modules/notifications/api/entities/device_entity.freezed.dart","data":"","type":"text"},{"path":"lib/modules/notifications/api/entities/device_entity.g.dart","data":"Ly8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKCnBhcnQgb2YgJ2RldmljZV9lbnRpdHkuZGFydCc7CgovLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgovLyBKc29uU2VyaWFsaXphYmxlR2VuZXJhdG9yCi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgpfJERldmljZUVudGl0eURhdGFJbXBsIF8kJERldmljZUVudGl0eURhdGFJbXBsRnJvbUpzb24oTWFwIGpzb24pID0+CiAgICBfJERldmljZUVudGl0eURhdGFJbXBsKAogICAgICBpZDoganNvblsnaWQnXSBhcyBTdHJpbmc/LAogICAgICBjcmVhdGlvbkRhdGU6IERhdGVUaW1lLnBhcnNlKGpzb25bJ2NyZWF0aW9uRGF0ZSddIGFzIFN0cmluZyksCiAgICAgIGxhc3RVcGRhdGVEYXRlOiBEYXRlVGltZS5wYXJzZShqc29uWydsYXN0VXBkYXRlRGF0ZSddIGFzIFN0cmluZyksCiAgICAgIGluc3RhbGxhdGlvbklkOiBqc29uWydpbnN0YWxsYXRpb25JZCddIGFzIFN0cmluZywKICAgICAgdG9rZW46IGpzb25bJ3Rva2VuJ10gYXMgU3RyaW5nLAogICAgICBvcGVyYXRpbmdTeXN0ZW06CiAgICAgICAgICAkZW51bURlY29kZShfJE9wZXJhdGluZ1N5c3RlbUVudW1NYXAsIGpzb25bJ29wZXJhdGluZ1N5c3RlbSddKSwKICAgICk7CgpNYXA8U3RyaW5nLCBkeW5hbWljPiBfJCREZXZpY2VFbnRpdHlEYXRhSW1wbFRvSnNvbigKICAgICAgICBfJERldmljZUVudGl0eURhdGFJbXBsIGluc3RhbmNlKSA9PgogICAgPFN0cmluZywgZHluYW1pYz57CiAgICAgICdpZCc6IGluc3RhbmNlLmlkLAogICAgICAnY3JlYXRpb25EYXRlJzogaW5zdGFuY2UuY3JlYXRpb25EYXRlLnRvSXNvODYwMVN0cmluZygpLAogICAgICAnbGFzdFVwZGF0ZURhdGUnOiBpbnN0YW5jZS5sYXN0VXBkYXRlRGF0ZS50b0lzbzg2MDFTdHJpbmcoKSwKICAgICAgJ2luc3RhbGxhdGlvbklkJzogaW5zdGFuY2UuaW5zdGFsbGF0aW9uSWQsCiAgICAgICd0b2tlbic6IGluc3RhbmNlLnRva2VuLAogICAgICAnb3BlcmF0aW5nU3lzdGVtJzogXyRPcGVyYXRpbmdTeXN0ZW1FbnVtTWFwW2luc3RhbmNlLm9wZXJhdGluZ1N5c3RlbV0hLAogICAgfTsKCmNvbnN0IF8kT3BlcmF0aW5nU3lzdGVtRW51bU1hcCA9IHsKICBPcGVyYXRpbmdTeXN0ZW0uaW9zOiAnaW9zJywKICBPcGVyYXRpbmdTeXN0ZW0uYW5kcm9pZDogJ2FuZHJvaWQnLAp9Owo=","type":"text"},{"path":"lib/modules/notifications/api/entities/firebase_device_entity.dart","data":"Ly8gaWdub3JlOiBkZXBlbmRfb25fcmVmZXJlbmNlZF9wYWNrYWdlcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGludmFsaWRfYW5ub3RhdGlvbl90YXJnZXQKCmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9lbnRpdGllcy9qc29uX2NvbnZlcnRlcnMuZGFydCc7CmltcG9ydCAncGFja2FnZTpjbG91ZF9maXJlc3RvcmUvY2xvdWRfZmlyZXN0b3JlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ2RldmljZV9lbnRpdHkuZnJlZXplZC5kYXJ0JzsKcGFydCAnZGV2aWNlX2VudGl0eS5nLmRhcnQnOwoKZW51bSBPcGVyYXRpbmdTeXN0ZW0gewogIEBKc29uVmFsdWUoJ2lvcycpCiAgaW9zLAogIEBKc29uVmFsdWUoJ2FuZHJvaWQnKQogIGFuZHJvaWQsCn0KCkBmcmVlemVkCnNlYWxlZCBjbGFzcyBEZXZpY2VFbnRpdHkgd2l0aCBfJERldmljZUVudGl0eSB7CiAgY29uc3QgZmFjdG9yeSBEZXZpY2VFbnRpdHkoewogICAgQEpzb25LZXkoaW5jbHVkZUlmTnVsbDogZmFsc2UpIFN0cmluZz8gaWQsCiAgICBAVGltZXN0YW1wQ29udmVydGVyKCkgcmVxdWlyZWQgRGF0ZVRpbWUgY3JlYXRpb25EYXRlLAogICAgQFRpbWVzdGFtcENvbnZlcnRlcigpIHJlcXVpcmVkIERhdGVUaW1lIGxhc3RVcGRhdGVEYXRlLAogICAgcmVxdWlyZWQgU3RyaW5nIGluc3RhbGxhdGlvbklkLAogICAgcmVxdWlyZWQgU3RyaW5nIHRva2VuLAogICAgcmVxdWlyZWQgT3BlcmF0aW5nU3lzdGVtIG9wZXJhdGluZ1N5c3RlbSwKICB9KSA9IERldmljZUVudGl0eURhdGE7CgogIGNvbnN0IERldmljZUVudGl0eS5fKCk7CgogIGZhY3RvcnkgRGV2aWNlRW50aXR5LmZyb21Kc29uKFN0cmluZyBpZCwgTWFwPFN0cmluZywgZHluYW1pYz4ganNvbikgPT4KICAgICAgXyREZXZpY2VFbnRpdHlGcm9tSnNvbihqc29uLi5bJ2lkJ10gPSBpZCk7CgogIGZhY3RvcnkgRGV2aWNlRW50aXR5LmZyb21QcmVmcyhNYXA8U3RyaW5nLCBkeW5hbWljPiBqc29uKSB7CiAgICBmaW5hbCBpbnN0YWxsYXRpb25JZCA9IGpzb25bJ2luc3RhbGxhdGlvbklkJ10gYXMgU3RyaW5nPzsKICAgIHJldHVybiBEZXZpY2VFbnRpdHkoCiAgICAgIGlkOiBqc29uWydpZCddIGFzIFN0cmluZz8sCiAgICAgIGluc3RhbGxhdGlvbklkOiBpbnN0YWxsYXRpb25JZCA/PyAnJywKICAgICAgdG9rZW46IGpzb25bJ3Rva2VuJ10gYXMgU3RyaW5nPyA/PyAnJywKICAgICAgb3BlcmF0aW5nU3lzdGVtOiBPcGVyYXRpbmdTeXN0ZW0udmFsdWVzLmZpcnN0V2hlcmUoCiAgICAgICAgKGUpID0+IGUubmFtZSA9PSBqc29uWydvcGVyYXRpbmdTeXN0ZW0nXSBhcyBTdHJpbmc/LAogICAgICAgIG9yRWxzZTogKCkgPT4gdGhyb3cgRXhjZXB0aW9uKAogICAgICAgICAgIk9wZXJhdGluZyBzeXN0ZW0gbm90IGZvdW5kIGZvciAke2pzb25bJ29wZXJhdGluZ1N5c3RlbSddfSIsCiAgICAgICAgKSwKICAgICAgKSwKICAgICAgY3JlYXRpb25EYXRlOiBEYXRlVGltZS5wYXJzZShqc29uWydjcmVhdGlvbkRhdGUnXSBhcyBTdHJpbmcpLAogICAgICBsYXN0VXBkYXRlRGF0ZTogRGF0ZVRpbWUucGFyc2UoanNvblsnbGFzdFVwZGF0ZURhdGUnXSBhcyBTdHJpbmcpLAogICAgKTsKICB9CgogIE1hcDxTdHJpbmcsIGR5bmFtaWM+IHRvSnNvbkZvclByZWZzKCkgPT4gewogICAgICAgICdpZCc6IGlkLAogICAgICAgICdpbnN0YWxsYXRpb25JZCc6IGluc3RhbGxhdGlvbklkLAogICAgICAgICd0b2tlbic6IHRva2VuLAogICAgICAgICdvcGVyYXRpbmdTeXN0ZW0nOiBvcGVyYXRpbmdTeXN0ZW0ubmFtZSwKICAgICAgICAnY3JlYXRpb25EYXRlJzogY3JlYXRpb25EYXRlLnRvSXNvODYwMVN0cmluZygpLAogICAgICAgICdsYXN0VXBkYXRlRGF0ZSc6IGxhc3RVcGRhdGVEYXRlLnRvSXNvODYwMVN0cmluZygpLAogICAgICB9Owp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/entities/firebase_notifications_entity.dart","data":"Ly8gaWdub3JlOiBkZXBlbmRfb25fcmVmZXJlbmNlZF9wYWNrYWdlcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGludmFsaWRfYW5ub3RhdGlvbl90YXJnZXQKCmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9lbnRpdGllcy9qc29uX2NvbnZlcnRlcnMuZGFydCc7CmltcG9ydCAncGFja2FnZTpjbG91ZF9maXJlc3RvcmUvY2xvdWRfZmlyZXN0b3JlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ25vdGlmaWNhdGlvbnNfZW50aXR5LmZyZWV6ZWQuZGFydCc7CnBhcnQgJ25vdGlmaWNhdGlvbnNfZW50aXR5LmcuZGFydCc7CgpAZnJlZXplZApzZWFsZWQgY2xhc3MgTm90aWZpY2F0aW9uRW50aXR5IHdpdGggXyROb3RpZmljYXRpb25FbnRpdHkgewogIGNvbnN0IGZhY3RvcnkgTm90aWZpY2F0aW9uRW50aXR5KHsKICAgIEBKc29uS2V5KGluY2x1ZGVJZk51bGw6IGZhbHNlLCB0b0pzb246IENvbnZlcnRlcnMuaWQpIFN0cmluZz8gaWQsCiAgICByZXF1aXJlZCBTdHJpbmcgdGl0bGUsCiAgICByZXF1aXJlZCBTdHJpbmcgYm9keSwKICAgIEBKc29uS2V5KG5hbWU6ICJjcmVhdGlvbl9kYXRlIikKICAgIEBUaW1lc3RhbXBDb252ZXJ0ZXIoKQogICAgcmVxdWlyZWQgRGF0ZVRpbWUgY3JlYXRpb25EYXRlLAogICAgQEpzb25LZXkobmFtZTogInNlZW5fZGF0ZSIpIEBUaW1lc3RhbXBDb252ZXJ0ZXIoKSBEYXRlVGltZT8gcmVhZERhdGUsCiAgfSkgPSBOb3RpZmljYXRpb25FbnRpdHlEYXRhOwoKICBjb25zdCBOb3RpZmljYXRpb25FbnRpdHkuXygpOwoKICBmYWN0b3J5IE5vdGlmaWNhdGlvbkVudGl0eS5mcm9tSnNvbihTdHJpbmcgaWQsIE1hcDxTdHJpbmcsIGR5bmFtaWM+IGpzb24pID0+CiAgICAgIF8kTm90aWZpY2F0aW9uRW50aXR5RnJvbUpzb24oanNvbi4uWydpZCddID0gaWQpOwoKICAvLyBNYXA8U3RyaW5nLCBkeW5hbWljPiB0b0pzb24oKSA9PiBfJE5vdGlmaWNhdGlvbkVudGl0eVRvSnNvbih0aGlzKTsKfQo=","type":"text"},{"path":"lib/modules/notifications/api/entities/notifications_entity.freezed.dart","data":"","type":"text"},{"path":"lib/modules/notifications/api/entities/notifications_entity.g.dart","data":"Ly8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKCnBhcnQgb2YgJ25vdGlmaWNhdGlvbnNfZW50aXR5LmRhcnQnOwoKLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKLy8gSnNvblNlcmlhbGl6YWJsZUdlbmVyYXRvcgovLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoKXyROb3RpZmljYXRpb25EYXRhSW1wbCBfJCROb3RpZmljYXRpb25EYXRhSW1wbEZyb21Kc29uKE1hcCBqc29uKSA9PgogICAgXyROb3RpZmljYXRpb25EYXRhSW1wbCgKICAgICAgaWQ6IGpzb25bJ2lkJ10gYXMgU3RyaW5nPywKICAgICAgdGl0bGU6IGpzb25bJ3RpdGxlJ10gYXMgU3RyaW5nLAogICAgICBjcmVhdGlvbkRhdGU6IERhdGVUaW1lLnBhcnNlKGpzb25bJ2NyZWF0aW9uRGF0ZSddIGFzIFN0cmluZyksCiAgICAgIGJvZHk6IGpzb25bJ2JvZHknXSBhcyBTdHJpbmcsCiAgICAgIHJlYWREYXRlOiBqc29uWydyZWFkRGF0ZSddID09IG51bGwKICAgICAgICAgID8gbnVsbAogICAgICAgICAgOiBEYXRlVGltZS5wYXJzZShqc29uWydyZWFkRGF0ZSddIGFzIFN0cmluZyksCiAgICApOwoKTWFwPFN0cmluZywgZHluYW1pYz4gXyQkTm90aWZpY2F0aW9uRGF0YUltcGxUb0pzb24oCiAgICAgICAgXyROb3RpZmljYXRpb25EYXRhSW1wbCBpbnN0YW5jZSkgPT4KICAgIDxTdHJpbmcsIGR5bmFtaWM+ewogICAgICAnaWQnOiBpbnN0YW5jZS5pZCwKICAgICAgJ3RpdGxlJzogaW5zdGFuY2UudGl0bGUsCiAgICAgICdjcmVhdGlvbkRhdGUnOiBpbnN0YW5jZS5jcmVhdGlvbkRhdGUudG9Jc284NjAxU3RyaW5nKCksCiAgICAgICdib2R5JzogaW5zdGFuY2UuYm9keSwKICAgICAgJ3JlYWREYXRlJzogaW5zdGFuY2UucmVhZERhdGU/LnRvSXNvODYwMVN0cmluZygpLAogICAgfTsK","type":"text"},{"path":"lib/modules/notifications/api/entities/restApi_device_entity.dart","data":"Ly8gaWdub3JlOiBkZXBlbmRfb25fcmVmZXJlbmNlZF9wYWNrYWdlcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGludmFsaWRfYW5ub3RhdGlvbl90YXJnZXQKCmltcG9ydCAncGFja2FnZTpmcmVlemVkX2Fubm90YXRpb24vZnJlZXplZF9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAnZGV2aWNlX2VudGl0eS5mcmVlemVkLmRhcnQnOwpwYXJ0ICdkZXZpY2VfZW50aXR5LmcuZGFydCc7CgplbnVtIE9wZXJhdGluZ1N5c3RlbSB7CiAgQEpzb25WYWx1ZSgnaW9zJykKICBpb3MsCiAgQEpzb25WYWx1ZSgnYW5kcm9pZCcpCiAgYW5kcm9pZCwKfQoKQGZyZWV6ZWQKc2VhbGVkIGNsYXNzIERldmljZUVudGl0eSB3aXRoIF8kRGV2aWNlRW50aXR5IHsKICBjb25zdCBmYWN0b3J5IERldmljZUVudGl0eSh7CiAgICBTdHJpbmc/IGlkLAogICAgcmVxdWlyZWQgRGF0ZVRpbWUgY3JlYXRpb25EYXRlLAogICAgcmVxdWlyZWQgRGF0ZVRpbWUgbGFzdFVwZGF0ZURhdGUsCiAgICByZXF1aXJlZCBTdHJpbmcgaW5zdGFsbGF0aW9uSWQsCiAgICByZXF1aXJlZCBTdHJpbmcgdG9rZW4sCiAgICByZXF1aXJlZCBPcGVyYXRpbmdTeXN0ZW0gb3BlcmF0aW5nU3lzdGVtLAogIH0pID0gRGV2aWNlRW50aXR5RGF0YTsKCiAgY29uc3QgRGV2aWNlRW50aXR5Ll8oKTsKCiAgZmFjdG9yeSBEZXZpY2VFbnRpdHkuZnJvbUpzb24oTWFwPFN0cmluZywgT2JqZWN0Pz4ganNvbikgPT4KICAgICAgXyREZXZpY2VFbnRpdHlGcm9tSnNvbihqc29uKTsKCiAgZmFjdG9yeSBEZXZpY2VFbnRpdHkuZnJvbVByZWZzKE1hcDxTdHJpbmcsIGR5bmFtaWM+IGpzb24pIHsKICAgIGZpbmFsIGluc3RhbGxhdGlvbklkID0ganNvblsnaW5zdGFsbGF0aW9uSWQnXSBhcyBTdHJpbmc/OwogICAgcmV0dXJuIF8kRGV2aWNlRW50aXR5RnJvbUpzb24oanNvbi4uWydpZCddID0gaW5zdGFsbGF0aW9uSWQpOwogIH0KCiAgTWFwPFN0cmluZywgZHluYW1pYz4gdG9Kc29uRm9yUHJlZnMoKSA9PiB0b0pzb24oKTsKfQo=","type":"text"},{"path":"lib/modules/notifications/api/entities/restApi_notifications_entity.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZyZWV6ZWRfYW5ub3RhdGlvbi9mcmVlemVkX2Fubm90YXRpb24uZGFydCc7CgpwYXJ0ICdub3RpZmljYXRpb25zX2VudGl0eS5mcmVlemVkLmRhcnQnOwpwYXJ0ICdub3RpZmljYXRpb25zX2VudGl0eS5nLmRhcnQnOwoKQGZyZWV6ZWQKY2xhc3MgTm90aWZpY2F0aW9uRW50aXR5IHdpdGggXyROb3RpZmljYXRpb25FbnRpdHkgewogIGNvbnN0IGZhY3RvcnkgTm90aWZpY2F0aW9uRW50aXR5KHsKICAgIFN0cmluZz8gaWQsCiAgICByZXF1aXJlZCBTdHJpbmcgdGl0bGUsCiAgICByZXF1aXJlZCBEYXRlVGltZSBjcmVhdGlvbkRhdGUsCiAgICByZXF1aXJlZCBTdHJpbmcgYm9keSwKICAgIERhdGVUaW1lPyByZWFkRGF0ZSwKICAgIC8vIE5vdGlmaWNhdGlvblR5cGVzPyB0eXBlLAogIH0pID0gTm90aWZpY2F0aW9uRGF0YTsKCiAgZmFjdG9yeSBOb3RpZmljYXRpb25FbnRpdHkuZnJvbUpzb24oTWFwPFN0cmluZywgT2JqZWN0Pz4ganNvbikgPT4KICAgICAgXyROb3RpZmljYXRpb25FbnRpdHlGcm9tSnNvbihqc29uKTsKfQo=","type":"text"},{"path":"lib/modules/notifications/api/entities/supabase_device_entity.dart","data":"Ly8gaWdub3JlOiBkZXBlbmRfb25fcmVmZXJlbmNlZF9wYWNrYWdlcwovLyBpZ25vcmVfZm9yX2ZpbGU6IGludmFsaWRfYW5ub3RhdGlvbl90YXJnZXQKCmltcG9ydCAncGFja2FnZTpmcmVlemVkX2Fubm90YXRpb24vZnJlZXplZF9hbm5vdGF0aW9uLmRhcnQnOwoKcGFydCAnZGV2aWNlX2VudGl0eS5mcmVlemVkLmRhcnQnOwpwYXJ0ICdkZXZpY2VfZW50aXR5LmcuZGFydCc7CgplbnVtIE9wZXJhdGluZ1N5c3RlbSB7CiAgQEpzb25WYWx1ZSgnaW9zJykKICBpb3MsCiAgQEpzb25WYWx1ZSgnYW5kcm9pZCcpCiAgYW5kcm9pZCwKfQoKQGZyZWV6ZWQKc2VhbGVkIGNsYXNzIERldmljZUVudGl0eSB3aXRoIF8kRGV2aWNlRW50aXR5IHsKICBjb25zdCBmYWN0b3J5IERldmljZUVudGl0eSh7CiAgICBASnNvbktleShpbmNsdWRlSWZOdWxsOiBmYWxzZSkgU3RyaW5nPyBpZCwKICAgIEBKc29uS2V5KG5hbWU6ICJ1c2VyX2lkIikgU3RyaW5nPyB1c2VySWQsCiAgICBASnNvbktleShuYW1lOiAnY3JlYXRpb25fZGF0ZScpIHJlcXVpcmVkIERhdGVUaW1lIGNyZWF0aW9uRGF0ZSwKICAgIEBKc29uS2V5KG5hbWU6ICdsYXN0X3VwZGF0ZV9kYXRlJykgcmVxdWlyZWQgRGF0ZVRpbWUgbGFzdFVwZGF0ZURhdGUsCiAgICBASnNvbktleShuYW1lOiAnaW5zdGFsbGF0aW9uX2lkJykgcmVxdWlyZWQgU3RyaW5nIGluc3RhbGxhdGlvbklkLAogICAgcmVxdWlyZWQgU3RyaW5nIHRva2VuLAogICAgcmVxdWlyZWQgT3BlcmF0aW5nU3lzdGVtIG9wZXJhdGluZ1N5c3RlbSwKICB9KSA9IERldmljZUVudGl0eURhdGE7CgogIGNvbnN0IERldmljZUVudGl0eS5fKCk7CgogIGZhY3RvcnkgRGV2aWNlRW50aXR5LmZyb21Kc29uKE1hcDxTdHJpbmcsIE9iamVjdD8+IGpzb24pID0+CiAgICAgIF8kRGV2aWNlRW50aXR5RnJvbUpzb24oanNvbik7CgogIGZhY3RvcnkgRGV2aWNlRW50aXR5LmZyb21QcmVmcyhNYXA8U3RyaW5nLCBkeW5hbWljPiBqc29uKSA9PiBEZXZpY2VFbnRpdHkoCiAgICAgICAgaWQ6IGpzb25bJ2lkJ10gYXMgU3RyaW5nPywKICAgICAgICBpbnN0YWxsYXRpb25JZDoganNvblsnaW5zdGFsbGF0aW9uX2lkJ10gYXMgU3RyaW5nPyA/PyAnJywKICAgICAgICB0b2tlbjoganNvblsndG9rZW4nXSBhcyBTdHJpbmc/ID8/ICcnLAogICAgICAgIG9wZXJhdGluZ1N5c3RlbTogT3BlcmF0aW5nU3lzdGVtLnZhbHVlcy5maXJzdFdoZXJlKAogICAgICAgICAgKGUpID0+IGUubmFtZSA9PSBqc29uWydvcGVyYXRpbmdTeXN0ZW0nXSBhcyBTdHJpbmc/LAogICAgICAgICAgb3JFbHNlOiAoKSA9PiB0aHJvdyBFeGNlcHRpb24oCiAgICAgICAgICAgICJPcGVyYXRpbmcgc3lzdGVtIG5vdCBmb3VuZCBmb3IgJHtqc29uWydvcGVyYXRpbmdTeXN0ZW0nXX0iLAogICAgICAgICAgKSwKICAgICAgICApLAogICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUucGFyc2UoanNvblsnY3JlYXRpb25fZGF0ZSddIGFzIFN0cmluZyksCiAgICAgICAgbGFzdFVwZGF0ZURhdGU6IERhdGVUaW1lLnBhcnNlKGpzb25bJ2xhc3RfdXBkYXRlX2RhdGUnXSBhcyBTdHJpbmcpLAogICAgICApOwoKICBNYXA8U3RyaW5nLCBkeW5hbWljPiB0b0pzb25Gb3JQcmVmcygpID0+IHRvSnNvbigpOwp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/entities/supabase_notifications_entity.dart","data":"Ly8gaWdub3JlX2Zvcl9maWxlOiBpbnZhbGlkX2Fubm90YXRpb25fdGFyZ2V0CgppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ25vdGlmaWNhdGlvbnNfZW50aXR5LmZyZWV6ZWQuZGFydCc7CnBhcnQgJ25vdGlmaWNhdGlvbnNfZW50aXR5LmcuZGFydCc7CgpAZnJlZXplZApjbGFzcyBOb3RpZmljYXRpb25FbnRpdHkgd2l0aCBfJE5vdGlmaWNhdGlvbkVudGl0eSB7CiAgY29uc3QgZmFjdG9yeSBOb3RpZmljYXRpb25FbnRpdHkoewogICAgU3RyaW5nPyBpZCwKICAgIEBKc29uS2V5KG5hbWU6ICd1c2VyX2lkJykgU3RyaW5nPyB1c2VySWQsCiAgICByZXF1aXJlZCBTdHJpbmcgdGl0bGUsCiAgICBASnNvbktleShuYW1lOiAnY3JlYXRpb25fZGF0ZScpIHJlcXVpcmVkIERhdGVUaW1lIGNyZWF0aW9uRGF0ZSwKICAgIHJlcXVpcmVkIFN0cmluZyBib2R5LAogICAgQEpzb25LZXkobmFtZTogJ3JlYWRfZGF0ZScpIERhdGVUaW1lPyByZWFkRGF0ZSwKICAgIC8vIE5vdGlmaWNhdGlvblR5cGVzPyB0eXBlLAogIH0pID0gTm90aWZpY2F0aW9uRGF0YTsKCiAgZmFjdG9yeSBOb3RpZmljYXRpb25FbnRpdHkuZnJvbUpzb24oTWFwPFN0cmluZywgT2JqZWN0Pz4ganNvbikgPT4KICAgICAgXyROb3RpZmljYXRpb25FbnRpdHlGcm9tSnNvbihqc29uKTsKfQo=","type":"text"},{"path":"lib/modules/notifications/api/firebase_device_api.dart","data":"aW1wb3J0ICdkYXJ0OmFzeW5jJzsKaW1wb3J0ICdwYWNrYWdlOnVuaXZlcnNhbF9pby9pby5kYXJ0JzsKCmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9hcGkvYmFzZV9hcGlfZXhjZXB0aW9ucy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9lbnRpdGllcy9kZXZpY2VfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Y2xvdWRfZmlyZXN0b3JlL2Nsb3VkX2ZpcmVzdG9yZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZpcmViYXNlX2FwcF9pbnN0YWxsYXRpb25zL2ZpcmViYXNlX2FwcF9pbnN0YWxsYXRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfbWVzc2FnaW5nL2ZpcmViYXNlX21lc3NhZ2luZy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfcml2ZXJwb2QvZmx1dHRlcl9yaXZlcnBvZC5kYXJ0JzsKCmFic3RyYWN0IGNsYXNzIERldmljZUFwaSB7CiAgLy8vIFdlIHVzZSBhIHVuaXF1ZSBpZCBmb3IgdGhlIGRldmljZSAvIGluc3RhbGxhdGlvbgogIC8vLyBUaGlzIGFsbG93cyB0byBzZW5kIG5vdGlmaWNhdGlvbnMgdG8gYSBzcGVjaWZpYyBkZXZpY2UKICAvLy8gaU9TIGFuZCBBbmRyb2lkIHRlbmRzIG5vdyB0byByZXN0cmljdCB0aGUgdXNlIG9mIGRldmljZSBpZAogIC8vLyBZb3UgY291bGQgYWxzbyBnZW5lcmF0ZSB5b3VyIG93biBpZCBhbmQgc3RvcmUgaXQgaW4gdGhlIGRldmljZQogIC8vLyBCdXQgYXMgd2UgdXNlIGZpcmViYXNlIGZvciBub3RpZmljYXRpb25zIHdlIGNhbiB1c2UgdGhlIGZpcmViYXNlIGluc3RhbGxhdGlvbiBpZAogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IGdldCgpOwoKICAvLy8gUmVnaXN0ZXIgdGhlIGRldmljZSBpbiB0aGUgYmFja2VuZAogIC8vLyBPZiBjb3Vyc2UgeW91ciBiYWNrZW5kIHNob3VsZCBjaGVjayBpZiB0aGUgZGV2aWNlIGlzIGFscmVhZHkgcmVnaXN0ZXJlZAogIC8vLyB0aHJvd3MgYW4gW0FwaUVycm9yXSBpZiBzb21ldGhpbmcgZ29lcyB3cm9uZwogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IHJlZ2lzdGVyKFN0cmluZyB1c2VySWQsIERldmljZUVudGl0eSBkZXZpY2UpOwoKICAvLy8gVXBkYXRlIHRoZSBkZXZpY2UgaW4gdGhlIGJhY2tlbmQKICAvLy8gdGhyb3dzIGFuIFtBcGlFcnJvcl0gaWYgc29tZXRoaW5nIGdvZXMgd3JvbmcKICBGdXR1cmU8RGV2aWNlRW50aXR5PiB1cGRhdGUoRGV2aWNlRW50aXR5IGRldmljZSk7CgogIC8vLyBVbnJlZ2lzdGVyIHRoZSBkZXZpY2UgaW4gdGhlIGJhY2tlbmQKICBGdXR1cmU8dm9pZD4gdW5yZWdpc3RlcihTdHJpbmcgdXNlcklkLCBTdHJpbmcgZGV2aWNlSWQpOwoKICAvLy8gTGlzdGVuIHRvIHRva2VuIHJlZnJlc2gKICB2b2lkIG9uVG9rZW5SZWZyZXNoKE9uVG9rZW5SZWZyZXNoIG9uVG9rZW5SZWZyZXNoKTsKCiAgLy8vIFJlbW92ZSB0aGUgdG9rZW4gcmVmcmVzaCBsaXN0ZW5lcgogIHZvaWQgcmVtb3ZlT25Ub2tlblJlZnJlc2hMaXN0ZW5lcigpOwp9Cgp0eXBlZGVmIE9uVG9rZW5SZWZyZXNoID0gdm9pZCBGdW5jdGlvbihTdHJpbmcgdG9rZW4pOwoKZmluYWwgZGV2aWNlQXBpUHJvdmlkZXIgPSBQcm92aWRlcjxEZXZpY2VBcGk+KAogIChyZWYpID0+IEZpcmViYXNlRGV2aWNlQXBpKAogICAgbWVzc2FnaW5nOiBGaXJlYmFzZU1lc3NhZ2luZy5pbnN0YW5jZSwKICAgIGluc3RhbGxhdGlvbnM6IEZpcmViYXNlSW5zdGFsbGF0aW9ucy5pbnN0YW5jZSwKICAgIGNsaWVudDogRmlyZWJhc2VGaXJlc3RvcmUuaW5zdGFuY2UsCiAgKSwKKTsKCmNsYXNzIEZpcmViYXNlRGV2aWNlQXBpIGltcGxlbWVudHMgRGV2aWNlQXBpIHsKICBmaW5hbCBGaXJlYmFzZU1lc3NhZ2luZyBfbWVzc2FnaW5nOwogIGZpbmFsIEZpcmViYXNlRmlyZXN0b3JlIF9jbGllbnQ7CiAgZmluYWwgRmlyZWJhc2VJbnN0YWxsYXRpb25zIF9pbnN0YWxsYXRpb25zOwogIFN0cmVhbVN1YnNjcmlwdGlvbj8gX29uVG9rZW5SZWZyZXNoU3Vic2NyaXB0aW9uOwoKICBGaXJlYmFzZURldmljZUFwaSh7CiAgICByZXF1aXJlZCBGaXJlYmFzZUZpcmVzdG9yZSBjbGllbnQsCiAgICByZXF1aXJlZCBGaXJlYmFzZU1lc3NhZ2luZyBtZXNzYWdpbmcsCiAgICByZXF1aXJlZCBGaXJlYmFzZUluc3RhbGxhdGlvbnMgaW5zdGFsbGF0aW9ucywKICB9KSAgOiBfbWVzc2FnaW5nID0gbWVzc2FnaW5nLAogICAgICAgIF9jbGllbnQgPSBjbGllbnQsCiAgICAgICAgX2luc3RhbGxhdGlvbnMgPSBpbnN0YWxsYXRpb25zOwoKICBDb2xsZWN0aW9uUmVmZXJlbmNlPERldmljZUVudGl0eT8+IF9jb2xsZWN0aW9uKFN0cmluZyB1c2VySWQpID0+IF9jbGllbnQKICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJzJykKICAgICAgLmRvYyh1c2VySWQpCiAgICAgIC5jb2xsZWN0aW9uKCdkZXZpY2VzJykKICAgICAgLndpdGhDb252ZXJ0ZXIoCiAgICAgICAgZnJvbUZpcmVzdG9yZTogKHNuYXBzaG90LCBfKSB7CiAgICAgICAgICBpZiAoc25hcHNob3QuZXhpc3RzKSB7CiAgICAgICAgICAgIHJldHVybiBEZXZpY2VFbnRpdHkuZnJvbUpzb24oc25hcHNob3QuaWQsIHNuYXBzaG90LmRhdGEoKSEpOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfSwKICAgICAgICB0b0ZpcmVzdG9yZTogKGRhdGEsIF8pID0+IGRhdGEhLnRvSnNvbigpLAogICAgICApOwoKICBRdWVyeTxEZXZpY2VFbnRpdHk/PiBnZXQgX2dyb3VwID0+CiAgICAgIF9jbGllbnQuY29sbGVjdGlvbkdyb3VwKCdkZXZpY2VzJykud2l0aENvbnZlcnRlcigKICAgICAgICAgICAgZnJvbUZpcmVzdG9yZTogKHNuYXBzaG90LCBfKSB7CiAgICAgICAgICAgICAgaWYgKHNuYXBzaG90LmV4aXN0cykgewogICAgICAgICAgICAgICAgcmV0dXJuIERldmljZUVudGl0eS5mcm9tSnNvbihzbmFwc2hvdC5pZCwgc25hcHNob3QuZGF0YSgpISk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICB9LAogICAgICAgICAgICB0b0ZpcmVzdG9yZTogKGRhdGEsIF8pID0+IGRhdGEhLnRvSnNvbigpLAogICAgICAgICAgKTsKCiAgQG92ZXJyaWRlCiAgRnV0dXJlPERldmljZUVudGl0eT4gZ2V0KCkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgaW5zdGFsbGF0aW9uSWQgPSBhd2FpdCBfaW5zdGFsbGF0aW9ucy5nZXRJZCgpOwogICAgICBmaW5hbCB0b2tlbiA9IGF3YWl0IF9tZXNzYWdpbmcuZ2V0VG9rZW4oKTsKICAgICAgZmluYWwgb3MgPSBQbGF0Zm9ybS5pc0FuZHJvaWQKICAgICAgICAgID8gT3BlcmF0aW5nU3lzdGVtLmFuZHJvaWQgLy8KICAgICAgICAgIDogT3BlcmF0aW5nU3lzdGVtLmlvczsKICAgICAgcmV0dXJuIERldmljZUVudGl0eSgKICAgICAgICBpbnN0YWxsYXRpb25JZDogaW5zdGFsbGF0aW9uSWQsCiAgICAgICAgdG9rZW46IHRva2VuISwKICAgICAgICBvcGVyYXRpbmdTeXN0ZW06IG9zLAogICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICAgbGFzdFVwZGF0ZURhdGU6IERhdGVUaW1lLm5vdygpLAogICAgICApOwogICAgfSBjYXRjaCAoZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiByZWdpc3RlcihTdHJpbmcgdXNlcklkLCBEZXZpY2VFbnRpdHkgZGV2aWNlKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfY29sbGVjdGlvbih1c2VySWQpLmRvYyhkZXZpY2UuaW5zdGFsbGF0aW9uSWQpLnNldChkZXZpY2UpOwogICAgICByZXR1cm4gZGV2aWNlOwogICAgfSBjYXRjaCAoZSwgdHJhY2UpIHsKICAgICAgdGhyb3cgQXBpRXJyb3IoCiAgICAgICAgY29kZTogMCwKICAgICAgICBtZXNzYWdlOiAnJGUgOiAkdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPERldmljZUVudGl0eT4gdXBkYXRlKERldmljZUVudGl0eSBkZXZpY2UpIGFzeW5jIHsKICAgIHRyeSB7CiAgICAgIGZpbmFsIGRvYyA9IGF3YWl0IF9ncm91cAogICAgICAgICAgLndoZXJlKCJpbnN0YWxsYXRpb25JZCIsIGlzRXF1YWxUbzogZGV2aWNlLmluc3RhbGxhdGlvbklkKQogICAgICAgICAgLmdldCgpOwogICAgICBpZiAoZG9jLmRvY3MuaXNFbXB0eSkgewogICAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgICAgY29kZTogMCwKICAgICAgICAgIG1lc3NhZ2U6ICdEZXZpY2Ugbm90IGZvdW5kJywKICAgICAgICApOwogICAgICB9CiAgICAgIGF3YWl0IGRvYy5kb2NzLmZpcnN0LnJlZmVyZW5jZS5zZXQoZGV2aWNlKTsKICAgICAgcmV0dXJuIGRldmljZTsKICAgIH0gY2F0Y2ggKGUsIHRyYWNlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlOiAkdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHVucmVnaXN0ZXIoU3RyaW5nIHVzZXJJZCwgU3RyaW5nIGRldmljZUlkKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfY29sbGVjdGlvbih1c2VySWQpLmRvYyhkZXZpY2VJZCkuZGVsZXRlKCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIHZvaWQgb25Ub2tlblJlZnJlc2goT25Ub2tlblJlZnJlc2ggb25Ub2tlblJlZnJlc2gpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbiA9CiAgICAgICAgX21lc3NhZ2luZy5vblRva2VuUmVmcmVzaC5saXN0ZW4oKGRhdGEpID0+IG9uVG9rZW5SZWZyZXNoKGRhdGEpKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgcmVtb3ZlT25Ub2tlblJlZnJlc2hMaXN0ZW5lcigpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbj8uY2FuY2VsKCk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/firebase_notifications_api.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9iYXNlX2FwaV9leGNlcHRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvbW9kZWxzL3BhZ2VhYmxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2VudGl0aWVzL25vdGlmaWNhdGlvbnNfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Y2xvdWRfZmlyZXN0b3JlL2Nsb3VkX2ZpcmVzdG9yZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZpcmViYXNlX21lc3NhZ2luZy9maXJlYmFzZV9tZXNzYWdpbmcuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bG9nZ2VyL2xvZ2dlci5kYXJ0JzsKCmZpbmFsIG5vdGlmaWNhdGlvbnNBcGlQcm92aWRlciA9IFByb3ZpZGVyPE5vdGlmaWNhdGlvbnNBcGk+KAogIChyZWYpID0+IEZpcmViYXNlTm90aWZpY2F0aW9uc0FwaSgKICAgIG1lc3NhZ2luZzogRmlyZWJhc2VNZXNzYWdpbmcuaW5zdGFuY2UsCiAgICBsb2dnZXI6IExvZ2dlcigpLAogICAgY2xpZW50OiBGaXJlYmFzZUZpcmVzdG9yZS5pbnN0YW5jZSwKICApLAopOwoKLy8vIFRoaXMgY2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIGxpc3RlbmluZyBmcm9tIGZpcmViYXNlIG5vdGlmaWNhdGlvbnMKLy8vIEFzIEkgbGlrZSByZXBvc2l0b3JpZXMgdG8gbm90IGRlcGVuZCBvbiBleHRlcm5hbCBsaWJyYXJpZXMKLy8vIEkgd3JhcHBlZCBzb21lIG9mIHRoZSBmaXJlYmFzZSBtZXNzYWdpbmcgbWV0aG9kcwovLy8KLy8vIFlvdSBjb3VsZCB1c2UgZGlyZWN0bHkgdGhlIGZpcmViYXNlIG1lc3NhZ2luZyBtZXRob2RzIGJ1dCBtYWtpbmcgYSBmYWtlIGltcGxlbWVudGF0aW9uCi8vLyBvZiB0aGlzIGNsYXNzIHdvdWxkIGJlIGhhcmRlci4KYWJzdHJhY3QgY2xhc3MgTm90aWZpY2F0aW9uc0FwaSB7CiAgLy8vIFJlcXVlc3QgcGVybWlzc2lvbiB0byByZWNlaXZlIG5vdGlmaWNhdGlvbnMKICBGdXR1cmU8dm9pZD4gcmVxdWVzdFBlcm1pc3Npb24oKTsKCiAgLy8gVXNlZCB0byBsaXN0ZW4gdG8gbm90aWZpY2F0aW9ucyB3aGVuIHRoZSBhcHAgaXMgaW4gZm9yZWdyb3VuZAogIHZvaWQgc2V0Rm9yZWdyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpOwogIC8vIFVzZWQgdG8gbGlzdGVuIHRvIG5vdGlmaWNhdGlvbnMgd2hlbiB0aGUgYXBwIGlzIGluIGJhY2tncm91bmQKICB2b2lkIHNldEJhY2tncm91bmRIYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKTsKICAvLyBVc2VkIHRvIGxpc3RlbiB0byBub3RpZmljYXRpb25zIHdoZW4gdXNlciBjbGlja3Mgb24gdGhlIG5vdGlmaWNhdGlvbgogIHZvaWQgc2V0T25PcGVuTm90aWZpY2F0aW9uSGFuZGxlcihPblJlbW90ZU1lc3NhZ2UgaGFuZGxlcik7CiAgLy8gVXNlZCB0byBnZXQgdGhlIHBhc3Qgbm90aWZpY2F0aW9ucyBmcm9tIHRoZSBzZXJ2ZXIKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uRW50aXR5Pj4gZ2V0KAogICAgICBTdHJpbmcgdXNlcklkLCBpbnQgcGFnZSwgaW50IHBhZ2VTaXplKTsKICAvLyBVc2VkIHRvIG1hcmsgYSBub3RpZmljYXRpb24gYXMgcmVhZAogIEZ1dHVyZTx2b2lkPiByZWFkKFN0cmluZyB1c2VySWQsIFN0cmluZyBub3RpZmljYXRpb25JZCk7CiAgLy8gVXNlZCB0byBnZXQgdGhlIHVucmVhZCBub3RpZmljYXRpb25zIGNvdW50CiAgU3RyZWFtPGludD4gdW5yZWFkTm90aWZpY2F0aW9ucyhTdHJpbmcgdXNlcklkKTsKCiAgLy8gVXNlZCB0byByZWdpc3RlciB0byBhIHRvcGljCiAgLy8gKHRoaXMgYWxsb3dzIHlvdSB0byBzZW5kIG5vdGlmaWNhdGlvbnMgdG8gYSBncm91cCBvZiB1c2VycykKICAvLyBZb3UgY2FuIGNyZWF0ZSBvbmUgZ2VuZXJhbCB0b3BpYyBmb3IgZWFjaCBsYW5ndWFnZQogIHZvaWQgcmVnaXN0ZXJUb3BpYyhTdHJpbmcgdG9waWMpOwoKICAvLyBVc2VkIHRvIHVucmVnaXN0ZXIgZnJvbSBhIHRvcGljCiAgdm9pZCB1bnJlZ2lzdGVyVG9waWMoU3RyaW5nIHRvcGljKTsKfQoKdHlwZWRlZiBPblJlbW90ZU1lc3NhZ2UgPSBGdXR1cmU8dm9pZD4gRnVuY3Rpb24oUmVtb3RlTWVzc2FnZSBtZXNzYWdlKTsKCmNsYXNzIEZpcmViYXNlTm90aWZpY2F0aW9uc0FwaSBpbXBsZW1lbnRzIE5vdGlmaWNhdGlvbnNBcGkgewogIGZpbmFsIEZpcmViYXNlTWVzc2FnaW5nIF9tZXNzYWdpbmc7CiAgZmluYWwgRmlyZWJhc2VGaXJlc3RvcmUgX2NsaWVudDsKICBmaW5hbCBMb2dnZXIgX2xvZ2dlcjsKCiAgRmlyZWJhc2VOb3RpZmljYXRpb25zQXBpKHsKICAgIHJlcXVpcmVkIEZpcmViYXNlTWVzc2FnaW5nIG1lc3NhZ2luZywKICAgIHJlcXVpcmVkIEZpcmViYXNlRmlyZXN0b3JlIGNsaWVudCwKICAgIHJlcXVpcmVkIExvZ2dlciBsb2dnZXIsCiAgfSkgIDogX21lc3NhZ2luZyA9IG1lc3NhZ2luZywKICAgICAgICBfY2xpZW50ID0gY2xpZW50LAogICAgICAgIF9sb2dnZXIgPSBsb2dnZXI7CgogIENvbGxlY3Rpb25SZWZlcmVuY2U8Tm90aWZpY2F0aW9uRW50aXR5Pz4gX2NvbGxlY3Rpb24oU3RyaW5nIHVzZXJJZCkgPT4gX2NsaWVudAogICAgICAuY29sbGVjdGlvbigndXNlcnMnKQogICAgICAuZG9jKHVzZXJJZCkKICAgICAgLmNvbGxlY3Rpb24oJ25vdGlmaWNhdGlvbnMnKQogICAgICAud2l0aENvbnZlcnRlcigKICAgICAgICBmcm9tRmlyZXN0b3JlOiAoc25hcHNob3QsIF8pIHsKICAgICAgICAgIGlmIChzbmFwc2hvdC5leGlzdHMpIHsKICAgICAgICAgICAgcmV0dXJuIE5vdGlmaWNhdGlvbkVudGl0eS5mcm9tSnNvbihzbmFwc2hvdC5pZCwgc25hcHNob3QuZGF0YSgpISk7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICB9LAogICAgICAgIHRvRmlyZXN0b3JlOiAoZGF0YSwgXykgPT4gZGF0YSEudG9Kc29uKCksCiAgICAgICk7CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiByZXF1ZXN0UGVybWlzc2lvbigpIGFzeW5jIHsKICAgIHRyeSB7CiAgICAgIGF3YWl0IF9tZXNzYWdpbmcucmVxdWVzdFBlcm1pc3Npb24oKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgX2xvZ2dlci5lKGUpOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCBzZXRGb3JlZ3JvdW5kSGFuZGxlcihPblJlbW90ZU1lc3NhZ2UgaGFuZGxlcikgewogICAgRmlyZWJhc2VNZXNzYWdpbmcub25NZXNzYWdlLmxpc3RlbihoYW5kbGVyKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgc2V0QmFja2dyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpIHsKICAgIEZpcmViYXNlTWVzc2FnaW5nLm9uQmFja2dyb3VuZE1lc3NhZ2UoaGFuZGxlcik7CiAgfQoKICBAb3ZlcnJpZGUKICB2b2lkIHNldE9uT3Blbk5vdGlmaWNhdGlvbkhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpIHsKICAgIEZpcmViYXNlTWVzc2FnaW5nLm9uTWVzc2FnZU9wZW5lZEFwcC5saXN0ZW4oaGFuZGxlcik7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uRW50aXR5Pj4gZ2V0KAogICAgU3RyaW5nIHVzZXJJZCwKICAgIGludCBwYWdlLAogICAgaW50IHBhZ2VTaXplLAogICkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgcmV0dXJuIF9jb2xsZWN0aW9uKHVzZXJJZCkgLy8KICAgICAgICAgIC5vcmRlckJ5KCdjcmVhdGlvbl9kYXRlJywgZGVzY2VuZGluZzogdHJ1ZSkKICAgICAgICAgIC5nZXQoKQogICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICh2YWx1ZSkgPT4gUGFnZWFibGUoCiAgICAgICAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUsCiAgICAgICAgICAgICAgZGF0YTogdmFsdWUuZG9jcy5tYXAoKGUpID0+IGUuZGF0YSgpISkudG9MaXN0KCksCiAgICAgICAgICAgICksCiAgICAgICAgICApOwogICAgfSBjYXRjaCAoZSwgc3RhY2t0cmFjZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZTogJHN0YWNrdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHJlYWQoU3RyaW5nIHVzZXJJZCwgU3RyaW5nIG5vdGlmaWNhdGlvbklkKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfY29sbGVjdGlvbih1c2VySWQpLmRvYyhub3RpZmljYXRpb25JZCkudXBkYXRlKHsKICAgICAgICAnc2Vlbl9kYXRlJzogRGF0ZVRpbWUubm93KCksCiAgICAgIH0pOwogICAgfSBjYXRjaCAoZSwgc3RhY2t0cmFjZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZTogJHN0YWNrdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgU3RyZWFtPGludD4gdW5yZWFkTm90aWZpY2F0aW9ucyhTdHJpbmcgdXNlcklkKSB7CiAgICB0cnkgewogICAgICAvLyBwcmVmZXIgcmVhZGluZyBhIGNvdW50ZXIgZnJvbSBhIGRvY3VtZW50IChsaWtlIG9uIHlvdXIgdXNlciBvciBhIHN0YXRzIHN1YnNjb2xsZWN0aW9uKQogICAgICByZXR1cm4gX2NvbGxlY3Rpb24odXNlcklkKQogICAgICAgICAgLndoZXJlKCdzZWVuX2RhdGUnLCBpc051bGw6IHRydWUpCiAgICAgICAgICAuc25hcHNob3RzKCkKICAgICAgICAgIC5tYXAoKGV2ZW50KSA9PiBldmVudC5kb2NzLmxlbmd0aCk7CiAgICB9IGNhdGNoIChlLCBzdGFja3RyYWNlKSB7CiAgICAgIGRlYnVnUHJpbnQoJyRlOiAkc3RhY2t0cmFjZScpOwogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZTogJHN0YWNrdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCByZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy5zdWJzY3JpYmVUb1RvcGljKHRvcGljKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgdW5yZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy51bnN1YnNjcmliZUZyb21Ub3BpYyh0b3BpYyk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/local_notifier.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9pbml0aWFsaXplci9vbnN0YXJ0X3NlcnZpY2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy9wcm92aWRlcnMvbW9kZWxzL25vdGlmaWNhdGlvbi5kYXJ0JzsKe3sjd2ViQ29tcGF0fX1pbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9mb3VuZGF0aW9uLmRhcnQnO3t7L3dlYkNvbXBhdH19CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX2xvY2FsX25vdGlmaWNhdGlvbnMvZmx1dHRlcl9sb2NhbF9ub3RpZmljYXRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwp7eyN3ZWJDb21wYXR9fWltcG9ydCAncGFja2FnZTp1bml2ZXJzYWxfaHRtbC9qcy5kYXJ0Jzt7ey93ZWJDb21wYXR9fQoKZmluYWwgbG9jYWxOb3RpZmllclByb3ZpZGVyID0gUHJvdmlkZXI8TG9jYWxOb3RpZmllcj4oKHJlZikgewogIHJldHVybiBMb2NhbE5vdGlmaWVyKAogICAgbm90aWZpY2F0aW9uTWFuYWdlcjogRmx1dHRlckxvY2FsTm90aWZpY2F0aW9uc1BsdWdpbigpLAogICk7Cn0pOwoKZmluYWwgbm90aWZpY2F0aW9uc1NldHRpbmdzUHJvdmlkZXIgPSBQcm92aWRlcjxOb3RpZmljYXRpb25TZXR0aW5ncz4oKHJlZikgewogIHJldHVybiBOb3RpZmljYXRpb25TZXR0aW5ncygKICAgIG5vdGlmaWNhdGlvbk1hbmFnZXI6IEZsdXR0ZXJMb2NhbE5vdGlmaWNhdGlvbnNQbHVnaW4oKSwKICAgIGFuZHJvaWRDaGFubmVsOiBjb25zdCBBbmRyb2lkTm90aWZpY2F0aW9uQ2hhbm5lbCgKICAgICAgLy8gY2hhbm5lbCBpZCAtIHlvdSBjYW4gdXNlIGRpZmZlcmVudCBjaGFubmVscyBmb3IgZGlmZmVyZW50IHB1cnBvc2VzIChOZXdzLCBNZXNzYWdlcywgZXRjKQogICAgICAnWW91ckFwcCcsCiAgICAgIC8vIGFwcCBpZAogICAgICAnWW91ckFwcCcsCiAgICAgIC8vIHRoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBjaGFubmVsIHRoYXQgd2lsbCBiZSBzaG93biBpbiB0aGUgQW5kcm9pZCBub3RpZmljYXRpb24gc2V0dGluZ3MKICAgICAgZGVzY3JpcHRpb246ICdnZW5lcmFsIFlvdXJBcHAgY2hhbm5lbCcsCiAgICAgIGltcG9ydGFuY2U6IEltcG9ydGFuY2UubWF4LAogICAgKSwKICApOwp9KTsKCi8vLyBGaXJlYmFzZSBzaG93cyBhdXRvbWF0aWNhbGx5IG5vdGlmaWNhdGlvbnMgd2hlbiB0aGUgYXBwIGlzIGluIGJhY2tncm91bmQKLy8vIEJ1dCB3aGVuIHRoZSBhcHAgaXMgaW4gZm9yZWdyb3VuZCwgeW91IGhhdmUgdG8gc2hvdyB0aGUgbm90aWZpY2F0aW9uIHlvdXJzZWxmIG9uIGlPUwovLy8gQWxzbyB3aXRoIHRoaXMgeW91IGNhbiBzY2hlZHVsZSBub3RpZmljYXRpb25zCi8vLyBGb3IgbW9yZSBpbmZvcm1hdGlvbnMgY2hlY2sgdGhlIGRvY3VtZW50YXRpb246IGh0dHBzOi8vcHViLmRldi9wYWNrYWdlcy9mbHV0dGVyX2xvY2FsX25vdGlmaWNhdGlvbnMKLy8vCi8vLyBBcyB3ZSBkb24ndCByZWx5IG9uIG1vY2tzIHdlIHdyYXBwZWQgdGhlIGZsdXR0ZXJfbG9jYWxfbm90aWZpY2F0aW9ucyBwbHVnaW4gZm9yIG91ciBuZWVkcwpjbGFzcyBMb2NhbE5vdGlmaWVyIHsKICBmaW5hbCBGbHV0dGVyTG9jYWxOb3RpZmljYXRpb25zUGx1Z2luIF9ub3RpZmljYXRpb25NYW5hZ2VyOwoKICBMb2NhbE5vdGlmaWVyKHsKICAgIHJlcXVpcmVkIEZsdXR0ZXJMb2NhbE5vdGlmaWNhdGlvbnNQbHVnaW4gbm90aWZpY2F0aW9uTWFuYWdlciwKICB9KSA6IF9ub3RpZmljYXRpb25NYW5hZ2VyID0gbm90aWZpY2F0aW9uTWFuYWdlcjsKCiAgRnV0dXJlPHZvaWQ+IHNob3coTm90aWZpY2F0aW9uU2V0dGluZ3Mgc2V0dGluZ3MsIE5vdGlmaWNhdGlvbiBtZXNzYWdlKSBhc3luYyB7CiAgICB7eyN3ZWJDb21wYXR9fQogICAgaWYgKGtJc1dlYikgewogICAgICBjb250ZXh0LmNhbGxNZXRob2QoInNob3dOb3RpZmljYXRpb24iLCBbCiAgICAgICAgbWVzc2FnZS50aXRsZSwKICAgICAgICBtZXNzYWdlLmJvZHksCiAgICAgIF0pOwogICAgICByZXR1cm47CiAgICB9CiAgICB7ey93ZWJDb21wYXR9fQogICAgX25vdGlmaWNhdGlvbk1hbmFnZXIuc2hvdygKICAgICAgbWVzc2FnZS5oYXNoQ29kZSwKICAgICAgbWVzc2FnZS50aXRsZSwKICAgICAgbWVzc2FnZS5ib2R5LAogICAgICBOb3RpZmljYXRpb25EZXRhaWxzKAogICAgICAgIGFuZHJvaWQ6IEFuZHJvaWROb3RpZmljYXRpb25EZXRhaWxzKAogICAgICAgICAgc2V0dGluZ3MuYW5kcm9pZENoYW5uZWwuaWQsCiAgICAgICAgICBzZXR0aW5ncy5hbmRyb2lkQ2hhbm5lbC5uYW1lLAogICAgICAgICAgaW1wb3J0YW5jZTogc2V0dGluZ3MuYW5kcm9pZENoYW5uZWwuaW1wb3J0YW5jZSwKICAgICAgICAgIHByaW9yaXR5OiBQcmlvcml0eS5oaWdoLAogICAgICAgICAgY2hhbm5lbERlc2NyaXB0aW9uOiBzZXR0aW5ncy5hbmRyb2lkQ2hhbm5lbC5kZXNjcmlwdGlvbiA/PyAnJywKICAgICAgICApLAogICAgICApLAogICAgICAvLyB5b3UgY2FuIGFkZCBhIHBheWxvYWQgdG8gcmVkaXJlY3QgdGhlIHVzZXIgdG8gYSBzcGVjaWZpYyBwYWdlCiAgICAgIC8vIHBheWxvYWQ6IG1lc3NhZ2UucGF5bG9hZAogICAgKTsKICB9Cn0KCi8vLyBUaGlzIGlzIHRoZSBzZXR0aW5ncyBmb3IgdGhlIG5vdGlmaWNhdGlvbnMKLy8vIFlvdSBjb3VsZCBoYXZlIHRoaXMgZGlyZWN0bHkgaW4gTG9jYWxOb3RpZmllciBidXQgaXQncyBiZXR0ZXIgdG8gc2VwYXJhdGUgdGhlIGNvbmNlcm5zCi8vLyBTbyBub3cgeW91IGNhbiBzZW5kIGRpZmZlcmVudCBub3RpZmljYXRpb25zIHdpdGggZGlmZmVyZW50IHNldHRpbmdzCi8vLyBbaW5pdF0gbWV0aG9kIHdpbGwgYmUgY2FsbGVkIGF1dG9tYXRpY2FsbHkgYnkgdGhlIFtJbml0aWFsaXplcl0gY2xhc3MKY2xhc3MgTm90aWZpY2F0aW9uU2V0dGluZ3MgaW1wbGVtZW50cyBPblN0YXJ0U2VydmljZSB7CiAgZmluYWwgRmx1dHRlckxvY2FsTm90aWZpY2F0aW9uc1BsdWdpbiBfbm90aWZpY2F0aW9uTWFuYWdlcjsKICBmaW5hbCBBbmRyb2lkTm90aWZpY2F0aW9uQ2hhbm5lbCBhbmRyb2lkQ2hhbm5lbDsKCiAgTm90aWZpY2F0aW9uU2V0dGluZ3MoewogICAgcmVxdWlyZWQgRmx1dHRlckxvY2FsTm90aWZpY2F0aW9uc1BsdWdpbiBub3RpZmljYXRpb25NYW5hZ2VyLAogICAgcmVxdWlyZWQgdGhpcy5hbmRyb2lkQ2hhbm5lbCwKICB9KSA6IF9ub3RpZmljYXRpb25NYW5hZ2VyID0gbm90aWZpY2F0aW9uTWFuYWdlcjsKCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IGluaXQoKSBhc3luYyB7CiAgICBjb25zdCBhbmRyb2lkU2V0dGluZ3MgPQogICAgICAgIEFuZHJvaWRJbml0aWFsaXphdGlvblNldHRpbmdzKCdAbWlwbWFwL2ljX2xhdW5jaGVyJyk7CiAgICBjb25zdCBpb3NTZXR0aW5ncyA9IERhcndpbkluaXRpYWxpemF0aW9uU2V0dGluZ3MoKTsKICAgIGNvbnN0IGluaXRpYWxpemF0aW9uU2V0dGluZ3MgPSBJbml0aWFsaXphdGlvblNldHRpbmdzKAogICAgICBhbmRyb2lkOiBhbmRyb2lkU2V0dGluZ3MsCiAgICAgIGlPUzogaW9zU2V0dGluZ3MsCiAgICApOwogICAgX25vdGlmaWNhdGlvbk1hbmFnZXIuaW5pdGlhbGl6ZSgKICAgICAgaW5pdGlhbGl6YXRpb25TZXR0aW5ncywKICAgICAgb25EaWRSZWNlaXZlTm90aWZpY2F0aW9uUmVzcG9uc2U6IChwYXlsb2FkKSA9PiByZWRpcmVjdFRvUGF5bG9hZChwYXlsb2FkKSwKICAgICk7CiAgICBhd2FpdCBfbm90aWZpY2F0aW9uTWFuYWdlcgogICAgICAgIC5yZXNvbHZlUGxhdGZvcm1TcGVjaWZpY0ltcGxlbWVudGF0aW9uIC8vCiAgICAgICAgPEFuZHJvaWRGbHV0dGVyTG9jYWxOb3RpZmljYXRpb25zUGx1Z2luPigpCiAgICAgICAgPy5jcmVhdGVOb3RpZmljYXRpb25DaGFubmVsKGFuZHJvaWRDaGFubmVsKTsKICB9CgogIEZ1dHVyZTx2b2lkPiByZWRpcmVjdFRvUGF5bG9hZCgKICAgIE5vdGlmaWNhdGlvblJlc3BvbnNlIG5vdGlmaWNhdGlvblJlc3BvbnNlLAogICkgYXN5bmMgewogICAgLy8gVE9ETyB1bmNvbW1lbnQgdGhpcyB3aGVuIHlvdSB3YW50IHRvIG5hdmlnYXRlIHRvIGEgc3BlY2lmaWMgcGFnZSB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgbm90aWZpY2F0aW9uCiAgICAvLyBmaW5hbCBTdHJpbmc/IHBheWxvYWQgPSBub3RpZmljYXRpb25SZXNwb25zZS5wYXlsb2FkOwogICAgLy8gaWYgKHBheWxvYWQgIT0gbnVsbCAmJiBwYXlsb2FkLmlzTm90RW1wdHkpIHsKICAgIC8vICAgbmF2aWdhdG9yS2V5LmN1cnJlbnRTdGF0ZT8ucHVzaE5hbWVkKHBheWxvYWQpOwogICAgLy8gfQogIH0KfQo=","type":"text"},{"path":"lib/modules/notifications/api/restApi_device_api.dart","data":"aW1wb3J0ICdkYXJ0OmFzeW5jJzsKCmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9hcGkvYmFzZV9hcGlfZXhjZXB0aW9ucy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9odHRwX2NsaWVudC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9lbnRpdGllcy9kZXZpY2VfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZGlvL2Rpby5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZpcmViYXNlX2FwcF9pbnN0YWxsYXRpb25zL2ZpcmViYXNlX2FwcF9pbnN0YWxsYXRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfbWVzc2FnaW5nL2ZpcmViYXNlX21lc3NhZ2luZy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfcml2ZXJwb2QvZmx1dHRlcl9yaXZlcnBvZC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnVuaXZlcnNhbF9pby9pby5kYXJ0JzsKCmFic3RyYWN0IGNsYXNzIERldmljZUFwaSB7CiAgLy8vIFdlIHVzZSBhIHVuaXF1ZSBpZCBmb3IgdGhlIGRldmljZSAvIGluc3RhbGxhdGlvbgogIC8vLyBUaGlzIGFsbG93cyB0byBzZW5kIG5vdGlmaWNhdGlvbnMgdG8gYSBzcGVjaWZpYyBkZXZpY2UKICAvLy8gaU9TIGFuZCBBbmRyb2lkIHRlbmRzIG5vdyB0byByZXN0cmljdCB0aGUgdXNlIG9mIGRldmljZSBpZAogIC8vLyBZb3UgY291bGQgYWxzbyBnZW5lcmF0ZSB5b3VyIG93biBpZCBhbmQgc3RvcmUgaXQgaW4gdGhlIGRldmljZQogIC8vLyBCdXQgYXMgd2UgdXNlIGZpcmViYXNlIGZvciBub3RpZmljYXRpb25zIHdlIGNhbiB1c2UgdGhlIGZpcmViYXNlIGluc3RhbGxhdGlvbiBpZAogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IGdldCgpOwoKICAvLy8gUmVnaXN0ZXIgdGhlIGRldmljZSBpbiB0aGUgYmFja2VuZAogIC8vLyBPZiBjb3Vyc2UgeW91ciBiYWNrZW5kIHNob3VsZCBjaGVjayBpZiB0aGUgZGV2aWNlIGlzIGFscmVhZHkgcmVnaXN0ZXJlZAogIC8vLyB0aHJvd3MgYW4gW0FwaUVycm9yXSBpZiBzb21ldGhpbmcgZ29lcyB3cm9uZwogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IHJlZ2lzdGVyKFN0cmluZyB1c2VySWQsIERldmljZUVudGl0eSBkZXZpY2UpOwoKICAvLy8gVXBkYXRlIHRoZSBkZXZpY2UgaW4gdGhlIGJhY2tlbmQKICAvLy8gdGhyb3dzIGFuIFtBcGlFcnJvcl0gaWYgc29tZXRoaW5nIGdvZXMgd3JvbmcKICBGdXR1cmU8RGV2aWNlRW50aXR5PiB1cGRhdGUoRGV2aWNlRW50aXR5IGRldmljZSk7CgogIC8vLyBVbnJlZ2lzdGVyIHRoZSBkZXZpY2UgaW4gdGhlIGJhY2tlbmQKICBGdXR1cmU8dm9pZD4gdW5yZWdpc3RlcihTdHJpbmcgdXNlcklkLCBTdHJpbmcgZGV2aWNlSWQpOwoKICAvLy8gTGlzdGVuIHRvIHRva2VuIHJlZnJlc2gKICB2b2lkIG9uVG9rZW5SZWZyZXNoKE9uVG9rZW5SZWZyZXNoIG9uVG9rZW5SZWZyZXNoKTsKCiAgLy8vIFJlbW92ZSB0aGUgdG9rZW4gcmVmcmVzaCBsaXN0ZW5lcgogIHZvaWQgcmVtb3ZlT25Ub2tlblJlZnJlc2hMaXN0ZW5lcigpOwp9Cgp0eXBlZGVmIE9uVG9rZW5SZWZyZXNoID0gdm9pZCBGdW5jdGlvbihTdHJpbmcgdG9rZW4pOwoKZmluYWwgZGV2aWNlQXBpUHJvdmlkZXIgPSBQcm92aWRlcjxEZXZpY2VBcGk+KAogIChyZWYpID0+IEZpcmViYXNlRGV2aWNlQXBpKAogICAgY2xpZW50OiByZWYucmVhZChodHRwQ2xpZW50UHJvdmlkZXIpLAogICAgbWVzc2FnaW5nOiBGaXJlYmFzZU1lc3NhZ2luZy5pbnN0YW5jZSwKICAgIGluc3RhbGxhdGlvbnM6IEZpcmViYXNlSW5zdGFsbGF0aW9ucy5pbnN0YW5jZSwKICApLAopOwoKY2xhc3MgRmlyZWJhc2VEZXZpY2VBcGkgaW1wbGVtZW50cyBEZXZpY2VBcGkgewogIGZpbmFsIERpbyBfY2xpZW50OwogIGZpbmFsIEZpcmViYXNlTWVzc2FnaW5nIF9tZXNzYWdpbmc7CiAgZmluYWwgRmlyZWJhc2VJbnN0YWxsYXRpb25zIF9pbnN0YWxsYXRpb25zOwogIFN0cmVhbVN1YnNjcmlwdGlvbj8gX29uVG9rZW5SZWZyZXNoU3Vic2NyaXB0aW9uOwoKICBGaXJlYmFzZURldmljZUFwaSh7CiAgICByZXF1aXJlZCBEaW8gY2xpZW50LAogICAgcmVxdWlyZWQgRmlyZWJhc2VNZXNzYWdpbmcgbWVzc2FnaW5nLAogICAgcmVxdWlyZWQgRmlyZWJhc2VJbnN0YWxsYXRpb25zIGluc3RhbGxhdGlvbnMsCiAgfSkgIDogX2NsaWVudCA9IGNsaWVudCwKICAgICAgICBfbWVzc2FnaW5nID0gbWVzc2FnaW5nLAogICAgICAgIF9pbnN0YWxsYXRpb25zID0gaW5zdGFsbGF0aW9uczsKCiAgQG92ZXJyaWRlCiAgRnV0dXJlPERldmljZUVudGl0eT4gZ2V0KCkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgaW5zdGFsbGF0aW9uSWQgPSBhd2FpdCBfaW5zdGFsbGF0aW9ucy5nZXRJZCgpOwogICAgICBmaW5hbCB0b2tlbiA9IGF3YWl0IF9tZXNzYWdpbmcuZ2V0VG9rZW4oKTsKICAgICAgZmluYWwgb3MgPSBQbGF0Zm9ybS5pc0FuZHJvaWQKICAgICAgICAgID8gT3BlcmF0aW5nU3lzdGVtLmFuZHJvaWQgLy8KICAgICAgICAgIDogT3BlcmF0aW5nU3lzdGVtLmlvczsKICAgICAgcmV0dXJuIERldmljZUVudGl0eSgKICAgICAgICBpbnN0YWxsYXRpb25JZDogaW5zdGFsbGF0aW9uSWQsCiAgICAgICAgdG9rZW46IHRva2VuISwKICAgICAgICBvcGVyYXRpbmdTeXN0ZW06IG9zLAogICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICAgbGFzdFVwZGF0ZURhdGU6IERhdGVUaW1lLm5vdygpLAogICAgICApOwogICAgfSBjYXRjaCAoZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiByZWdpc3RlcihTdHJpbmcgdXNlcklkLCBEZXZpY2VFbnRpdHkgZGV2aWNlKSBhc3luYyB7CiAgICB0cnkgewogICAgICBmaW5hbCByZXNwb25zZSA9IGF3YWl0IF9jbGllbnQucG9zdCgKICAgICAgICAnL3VzZXJzLyR1c2VySWQvZGV2aWNlcycsCiAgICAgICAgZGF0YTogZGV2aWNlLnRvSnNvbigpLAogICAgICApOwogICAgICByZXR1cm4gRGV2aWNlRW50aXR5LmZyb21Kc29uKHJlc3BvbnNlLmRhdGEhIGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KTsKICAgIH0gb24gRGlvRXhjZXB0aW9uIGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yLmZyb21EaW9FeGNlcHRpb24oZSk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZSA6ICR0cmFjZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiB1cGRhdGUoRGV2aWNlRW50aXR5IGRldmljZSkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgcmVzcG9uc2UgPSBhd2FpdCBfY2xpZW50LnB1dCgKICAgICAgICAnL2RldmljZXMvJHtkZXZpY2UuaWR9JywKICAgICAgICBkYXRhOiBkZXZpY2UudG9Kc29uKCksCiAgICAgICk7CiAgICAgIHJldHVybiBEZXZpY2VFbnRpdHkuZnJvbUpzb24ocmVzcG9uc2UuZGF0YSEgYXMgTWFwPFN0cmluZywgZHluYW1pYz4pOwogICAgfSBvbiBEaW9FeGNlcHRpb24gY2F0Y2ggKGUpIHsKICAgICAgdGhyb3cgQXBpRXJyb3IuZnJvbURpb0V4Y2VwdGlvbihlKTsKICAgIH0gY2F0Y2ggKGUsIHRyYWNlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlOiAkdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHVucmVnaXN0ZXIoU3RyaW5nIHVzZXJJZCwgU3RyaW5nIGRldmljZUlkKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfY2xpZW50LmRlbGV0ZSgKICAgICAgICAnL2RldmljZXMvJGRldmljZUlkJywKICAgICAgKTsKICAgIH0gb24gRGlvRXhjZXB0aW9uIGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yLmZyb21EaW9FeGNlcHRpb24oZSk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIHZvaWQgb25Ub2tlblJlZnJlc2goT25Ub2tlblJlZnJlc2ggb25Ub2tlblJlZnJlc2gpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbiA9CiAgICAgICAgX21lc3NhZ2luZy5vblRva2VuUmVmcmVzaC5saXN0ZW4oKGRhdGEpID0+IG9uVG9rZW5SZWZyZXNoKGRhdGEpKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgcmVtb3ZlT25Ub2tlblJlZnJlc2hMaXN0ZW5lcigpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbj8uY2FuY2VsKCk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/restApi_notifications_api.dart","data":"aW1wb3J0ICdkYXJ0OmNvbnZlcnQnOwoKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9iYXNlX2FwaV9leGNlcHRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvYXBpL2h0dHBfY2xpZW50LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvbW9kZWxzL3BhZ2VhYmxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2VudGl0aWVzL25vdGlmaWNhdGlvbnNfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZGlvL2Rpby5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZpcmViYXNlX21lc3NhZ2luZy9maXJlYmFzZV9tZXNzYWdpbmcuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bG9nZ2VyL2xvZ2dlci5kYXJ0JzsKCmZpbmFsIG5vdGlmaWNhdGlvbnNBcGlQcm92aWRlciA9IFByb3ZpZGVyPE5vdGlmaWNhdGlvbnNBcGk+KAogIChyZWYpID0+IEZpcmViYXNlTm90aWZpY2F0aW9uc0FwaSgKICAgIG1lc3NhZ2luZzogRmlyZWJhc2VNZXNzYWdpbmcuaW5zdGFuY2UsCiAgICBsb2dnZXI6IExvZ2dlcigpLAogICAgY2xpZW50OiByZWYucmVhZChodHRwQ2xpZW50UHJvdmlkZXIpLAogICksCik7CgovLy8gVGhpcyBjbGFzcyBpcyByZXNwb25zaWJsZSBmb3IgbGlzdGVuaW5nIGZyb20gZmlyZWJhc2Ugbm90aWZpY2F0aW9ucwovLy8gQXMgSSBsaWtlIHJlcG9zaXRvcmllcyB0byBub3QgZGVwZW5kIG9uIGV4dGVybmFsIGxpYnJhcmllcwovLy8gSSB3cmFwcGVkIHNvbWUgb2YgdGhlIGZpcmViYXNlIG1lc3NhZ2luZyBtZXRob2RzCi8vLwovLy8gWW91IGNvdWxkIHVzZSBkaXJlY3RseSB0aGUgZmlyZWJhc2UgbWVzc2FnaW5nIG1ldGhvZHMgYnV0IG1ha2luZyBhIGZha2UgaW1wbGVtZW50YXRpb24KLy8vIG9mIHRoaXMgY2xhc3Mgd291bGQgYmUgaGFyZGVyLgphYnN0cmFjdCBjbGFzcyBOb3RpZmljYXRpb25zQXBpIHsKICAvLy8gUmVxdWVzdCBwZXJtaXNzaW9uIHRvIHJlY2VpdmUgbm90aWZpY2F0aW9ucwogIEZ1dHVyZTx2b2lkPiByZXF1ZXN0UGVybWlzc2lvbigpOwoKICAvLyBVc2VkIHRvIGxpc3RlbiB0byBub3RpZmljYXRpb25zIHdoZW4gdGhlIGFwcCBpcyBpbiBmb3JlZ3JvdW5kCiAgdm9pZCBzZXRGb3JlZ3JvdW5kSGFuZGxlcihPblJlbW90ZU1lc3NhZ2UgaGFuZGxlcik7CgogIC8vIFVzZWQgdG8gbGlzdGVuIHRvIG5vdGlmaWNhdGlvbnMgd2hlbiB0aGUgYXBwIGlzIGluIGJhY2tncm91bmQKICB2b2lkIHNldEJhY2tncm91bmRIYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKTsKCiAgLy8gVXNlZCB0byBsaXN0ZW4gdG8gbm90aWZpY2F0aW9ucyB3aGVuIHVzZXIgY2xpY2tzIG9uIHRoZSBub3RpZmljYXRpb24KICB2b2lkIHNldE9uT3Blbk5vdGlmaWNhdGlvbkhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpOwoKICAvLyBVc2VkIHRvIGdldCB0aGUgcGFzdCBub3RpZmljYXRpb25zIGZyb20gdGhlIHNlcnZlcgogIEZ1dHVyZTxQYWdlYWJsZTxOb3RpZmljYXRpb25FbnRpdHk+PiBnZXQoCiAgICAgIFN0cmluZyB1c2VySWQsIGludCBwYWdlLCBpbnQgcGFnZVNpemUpOwoKICAvLyBVc2VkIHRvIG1hcmsgYSBub3RpZmljYXRpb24gYXMgcmVhZAogIEZ1dHVyZTx2b2lkPiByZWFkKFN0cmluZyB1c2VySWQsIFN0cmluZyBub3RpZmljYXRpb25JZCk7CgogIC8vIFVzZWQgdG8gZ2V0IHRoZSB1bnJlYWQgbm90aWZpY2F0aW9ucyBjb3VudAogIFN0cmVhbTxpbnQ+IHVucmVhZE5vdGlmaWNhdGlvbnMoU3RyaW5nIHVzZXJJZCk7CgogIC8vIFVzZWQgdG8gcmVnaXN0ZXIgdG8gYSB0b3BpYwogIHZvaWQgcmVnaXN0ZXJUb3BpYyhTdHJpbmcgdG9waWMpOwoKICAvLyBVc2VkIHRvIHVucmVnaXN0ZXIgZnJvbSBhIHRvcGljCiAgdm9pZCB1bnJlZ2lzdGVyVG9waWMoU3RyaW5nIHRvcGljKTsKfQoKdHlwZWRlZiBPblJlbW90ZU1lc3NhZ2UgPSBGdXR1cmU8dm9pZD4gRnVuY3Rpb24oUmVtb3RlTWVzc2FnZSBtZXNzYWdlKTsKCmNsYXNzIEZpcmViYXNlTm90aWZpY2F0aW9uc0FwaSBpbXBsZW1lbnRzIE5vdGlmaWNhdGlvbnNBcGkgewogIGZpbmFsIEZpcmViYXNlTWVzc2FnaW5nIF9tZXNzYWdpbmc7CiAgZmluYWwgSHR0cENsaWVudCBfY2xpZW50OwogIGZpbmFsIExvZ2dlciBfbG9nZ2VyOwoKICBGaXJlYmFzZU5vdGlmaWNhdGlvbnNBcGkoewogICAgcmVxdWlyZWQgRmlyZWJhc2VNZXNzYWdpbmcgbWVzc2FnaW5nLAogICAgcmVxdWlyZWQgSHR0cENsaWVudCBjbGllbnQsCiAgICByZXF1aXJlZCBMb2dnZXIgbG9nZ2VyLAogIH0pICA6IF9tZXNzYWdpbmcgPSBtZXNzYWdpbmcsCiAgICAgICAgX2NsaWVudCA9IGNsaWVudCwKICAgICAgICBfbG9nZ2VyID0gbG9nZ2VyOwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gcmVxdWVzdFBlcm1pc3Npb24oKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfbWVzc2FnaW5nLnJlcXVlc3RQZXJtaXNzaW9uKCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIF9sb2dnZXIuZShlKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIHZvaWQgc2V0Rm9yZWdyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpIHsKICAgIEZpcmViYXNlTWVzc2FnaW5nLm9uTWVzc2FnZS5saXN0ZW4oaGFuZGxlcik7CiAgfQoKICBAb3ZlcnJpZGUKICB2b2lkIHNldEJhY2tncm91bmRIYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBGaXJlYmFzZU1lc3NhZ2luZy5vbkJhY2tncm91bmRNZXNzYWdlKGhhbmRsZXIpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCBzZXRPbk9wZW5Ob3RpZmljYXRpb25IYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBGaXJlYmFzZU1lc3NhZ2luZy5vbk1lc3NhZ2VPcGVuZWRBcHAubGlzdGVuKGhhbmRsZXIpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCByZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy5zdWJzY3JpYmVUb1RvcGljKHRvcGljKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgdW5yZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy51bnN1YnNjcmliZUZyb21Ub3BpYyh0b3BpYyk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uRW50aXR5Pj4gZ2V0KAogICAgU3RyaW5nIHVzZXJJZCwKICAgIGludCBwYWdlLAogICAgaW50IHBhZ2VTaXplLAogICkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgcmVzcG9uc2UgPSBhd2FpdCBfY2xpZW50LmdldCgKICAgICAgICAnL3VzZXJzLyR1c2VySWQvbm90aWZpY2F0aW9ucycsCiAgICAgICAgcXVlcnlQYXJhbWV0ZXJzOiB7CiAgICAgICAgICAncGFnZSc6IHBhZ2UsCiAgICAgICAgICAncGFnZVNpemUnOiBwYWdlU2l6ZSwKICAgICAgICB9LAogICAgICApOwogICAgICBpZiAocmVzcG9uc2UuZGF0YSA9PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIGNvbnN0IFBhZ2VhYmxlKAogICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICBwYWdlOiAwLAogICAgICAgICAgcGFnZVNpemU6IDAsCiAgICAgICAgKTsKICAgICAgfQogICAgICBmaW5hbCBkYXRhID0gcmVzcG9uc2UuZGF0YSEgYXMgTGlzdDxkeW5hbWljPjsKICAgICAgZmluYWwgbGlzdCA9IGRhdGEKICAgICAgICAgIC5tYXAoKGUpID0+IE5vdGlmaWNhdGlvbkVudGl0eS5mcm9tSnNvbihlIGFzIE1hcDxTdHJpbmcsIGR5bmFtaWM+KSkKICAgICAgICAgIC50b0xpc3QoKTsKICAgICAgcmV0dXJuIFBhZ2VhYmxlKAogICAgICAgIGRhdGE6IGxpc3QsCiAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemUsCiAgICAgICk7CiAgICB9IG9uIERpb0V4Y2VwdGlvbiBjYXRjaCAoZSkgewogICAgICB0aHJvdyBBcGlFcnJvci5mcm9tRGlvRXhjZXB0aW9uKGUpOwogICAgfSBjYXRjaCAoZSwgc3RhY2t0cmFjZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZTogJHN0YWNrdHJhY2UnLAogICAgICApOwogICAgfQogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHJlYWQoU3RyaW5nIHVzZXJJZCwgU3RyaW5nIG5vdGlmaWNhdGlvbklkKSBhc3luYyB7CiAgICB0cnkgewogICAgICBmaW5hbCBfID0gYXdhaXQgX2NsaWVudC5wdXQoCiAgICAgICAgJy91c2Vycy8kdXNlcklkL25vdGlmaWNhdGlvbnMvJG5vdGlmaWNhdGlvbklkJywKICAgICAgKTsKICAgIH0gb24gRGlvRXhjZXB0aW9uIGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yLmZyb21EaW9FeGNlcHRpb24oZSk7CiAgICB9IGNhdGNoIChlLCBzdGFja3RyYWNlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlOiAkc3RhY2t0cmFjZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBTdHJlYW08aW50PiB1bnJlYWROb3RpZmljYXRpb25zKFN0cmluZyB1c2VySWQpIGFzeW5jKiB7CiAgICB0cnkgewogICAgICBmaW5hbCByZXNwb25zZSA9IGF3YWl0IF9jbGllbnQuZ2V0PFJlc3BvbnNlQm9keT4oCiAgICAgICAgJy91c2Vycy8kdXNlcklkL25vdGlmaWNhdGlvbnMvdW5yZWFkJywKICAgICAgICBvcHRpb25zOiBPcHRpb25zKAogICAgICAgICAgcmVzcG9uc2VUeXBlOiBSZXNwb25zZVR5cGUuc3RyZWFtLAogICAgICAgICksCiAgICAgICk7CiAgICAgIHlpZWxkKiB1dGY4LmRlY29kZXIKICAgICAgICAgIC5iaW5kKHJlc3BvbnNlLmRhdGEhLnN0cmVhbSkKICAgICAgICAgIC5tYXAoKGxpbmUpID0+IGpzb25EZWNvZGUobGluZSkpCiAgICAgICAgICAubWFwKAogICAgICAgIChldmVudCkgewogICAgICAgICAgZmluYWwgbGlzdCA9IGV2ZW50IGFzIExpc3Q8ZHluYW1pYz47CiAgICAgICAgICBmaW5hbCBsYXN0SXRlbSA9IGxpc3QubGFzdE9yTnVsbDsKICAgICAgICAgIGlmIChsaXN0LmlzRW1wdHkgfHwgbGFzdEl0ZW0gPT0gbnVsbCkgewogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgIH0KICAgICAgICAgIC8vIGlnbm9yZTogYXZvaWRfZHluYW1pY19jYWxscwogICAgICAgICAgcmV0dXJuIGxhc3RJdGVtWydjb3VudCddIGFzIGludDsgLy8gdGhpcyBpcyBmb3IgZGVtbyBwdXJwb3NlcwogICAgICAgIH0sCiAgICAgICk7CiAgICB9IG9uIERpb0V4Y2VwdGlvbiBjYXRjaCAoZSwgc3RhY2t0cmFjZSkgewogICAgICBkZWJ1Z1ByaW50KCckZTogJHN0YWNrdHJhY2UnKTsKICAgICAgdGhyb3cgQXBpRXJyb3IuZnJvbURpb0V4Y2VwdGlvbihlKTsKICAgIH0gY2F0Y2ggKGUsIHN0YWNrdHJhY2UpIHsKICAgICAgZGVidWdQcmludCgnJGU6ICRzdGFja3RyYWNlJyk7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlOiAkc3RhY2t0cmFjZScsCiAgICAgICk7CiAgICB9CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/supabase_device_api.dart","data":"aW1wb3J0ICdkYXJ0OmFzeW5jJzsKCmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvZGF0YS9hcGkvYmFzZV9hcGlfZXhjZXB0aW9ucy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9lbnRpdGllcy9kZXZpY2VfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfYXBwX2luc3RhbGxhdGlvbnMvZmlyZWJhc2VfYXBwX2luc3RhbGxhdGlvbnMuZGFydCc7CmltcG9ydCAncGFja2FnZTpmaXJlYmFzZV9tZXNzYWdpbmcvZmlyZWJhc2VfbWVzc2FnaW5nLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6c3VwYWJhc2VfZmx1dHRlci9zdXBhYmFzZV9mbHV0dGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6dW5pdmVyc2FsX2lvL2lvLmRhcnQnOwoKYWJzdHJhY3QgY2xhc3MgRGV2aWNlQXBpIHsKICAvLy8gV2UgdXNlIGEgdW5pcXVlIGlkIGZvciB0aGUgZGV2aWNlIC8gaW5zdGFsbGF0aW9uCiAgLy8vIFRoaXMgYWxsb3dzIHRvIHNlbmQgbm90aWZpY2F0aW9ucyB0byBhIHNwZWNpZmljIGRldmljZQogIC8vLyBpT1MgYW5kIEFuZHJvaWQgdGVuZHMgbm93IHRvIHJlc3RyaWN0IHRoZSB1c2Ugb2YgZGV2aWNlIGlkCiAgLy8vIFlvdSBjb3VsZCBhbHNvIGdlbmVyYXRlIHlvdXIgb3duIGlkIGFuZCBzdG9yZSBpdCBpbiB0aGUgZGV2aWNlCiAgLy8vIEJ1dCBhcyB3ZSB1c2UgZmlyZWJhc2UgZm9yIG5vdGlmaWNhdGlvbnMgd2UgY2FuIHVzZSB0aGUgZmlyZWJhc2UgaW5zdGFsbGF0aW9uIGlkCiAgRnV0dXJlPERldmljZUVudGl0eT4gZ2V0KCk7CgogIC8vLyBSZWdpc3RlciB0aGUgZGV2aWNlIGluIHRoZSBiYWNrZW5kCiAgLy8vIE9mIGNvdXJzZSB5b3VyIGJhY2tlbmQgc2hvdWxkIGNoZWNrIGlmIHRoZSBkZXZpY2UgaXMgYWxyZWFkeSByZWdpc3RlcmVkCiAgLy8vIHRocm93cyBhbiBbQXBpRXJyb3JdIGlmIHNvbWV0aGluZyBnb2VzIHdyb25nCiAgRnV0dXJlPERldmljZUVudGl0eT4gcmVnaXN0ZXIoU3RyaW5nIHVzZXJJZCwgRGV2aWNlRW50aXR5IGRldmljZSk7CgogIC8vLyBVcGRhdGUgdGhlIGRldmljZSBpbiB0aGUgYmFja2VuZAogIC8vLyB0aHJvd3MgYW4gW0FwaUVycm9yXSBpZiBzb21ldGhpbmcgZ29lcyB3cm9uZwogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IHVwZGF0ZShEZXZpY2VFbnRpdHkgZGV2aWNlKTsKCiAgLy8vIFVucmVnaXN0ZXIgdGhlIGRldmljZSBpbiB0aGUgYmFja2VuZAogIEZ1dHVyZTx2b2lkPiB1bnJlZ2lzdGVyKFN0cmluZyB1c2VySWQsIFN0cmluZyBkZXZpY2VJZCk7CgogIC8vLyBMaXN0ZW4gdG8gdG9rZW4gcmVmcmVzaAogIHZvaWQgb25Ub2tlblJlZnJlc2goT25Ub2tlblJlZnJlc2ggb25Ub2tlblJlZnJlc2gpOwoKICAvLy8gUmVtb3ZlIHRoZSB0b2tlbiByZWZyZXNoIGxpc3RlbmVyCiAgdm9pZCByZW1vdmVPblRva2VuUmVmcmVzaExpc3RlbmVyKCk7Cn0KCnR5cGVkZWYgT25Ub2tlblJlZnJlc2ggPSB2b2lkIEZ1bmN0aW9uKFN0cmluZyB0b2tlbik7CgpmaW5hbCBkZXZpY2VBcGlQcm92aWRlciA9IFByb3ZpZGVyPERldmljZUFwaT4oCiAgKHJlZikgPT4gRmlyZWJhc2VEZXZpY2VBcGkoCiAgICBjbGllbnQ6IFN1cGFiYXNlLmluc3RhbmNlLmNsaWVudCwKICAgIG1lc3NhZ2luZzogRmlyZWJhc2VNZXNzYWdpbmcuaW5zdGFuY2UsCiAgICBpbnN0YWxsYXRpb25zOiBGaXJlYmFzZUluc3RhbGxhdGlvbnMuaW5zdGFuY2UsCiAgKSwKKTsKCmNsYXNzIEZpcmViYXNlRGV2aWNlQXBpIGltcGxlbWVudHMgRGV2aWNlQXBpIHsKICBmaW5hbCBTdXBhYmFzZUNsaWVudCBfY2xpZW50OwogIGZpbmFsIEZpcmViYXNlTWVzc2FnaW5nIF9tZXNzYWdpbmc7CiAgZmluYWwgRmlyZWJhc2VJbnN0YWxsYXRpb25zIF9pbnN0YWxsYXRpb25zOwogIFN0cmVhbVN1YnNjcmlwdGlvbj8gX29uVG9rZW5SZWZyZXNoU3Vic2NyaXB0aW9uOwoKICBGaXJlYmFzZURldmljZUFwaSh7CiAgICByZXF1aXJlZCBTdXBhYmFzZUNsaWVudCBjbGllbnQsCiAgICByZXF1aXJlZCBGaXJlYmFzZU1lc3NhZ2luZyBtZXNzYWdpbmcsCiAgICByZXF1aXJlZCBGaXJlYmFzZUluc3RhbGxhdGlvbnMgaW5zdGFsbGF0aW9ucywKICB9KSAgOiBfY2xpZW50ID0gY2xpZW50LAogICAgICAgIF9tZXNzYWdpbmcgPSBtZXNzYWdpbmcsCiAgICAgICAgX2luc3RhbGxhdGlvbnMgPSBpbnN0YWxsYXRpb25zOwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiBnZXQoKSBhc3luYyB7CiAgICB0cnkgewogICAgICBmaW5hbCBpbnN0YWxsYXRpb25JZCA9IGF3YWl0IF9pbnN0YWxsYXRpb25zLmdldElkKCk7CiAgICAgIGZpbmFsIHRva2VuID0gYXdhaXQgX21lc3NhZ2luZy5nZXRUb2tlbigpOwogICAgICBmaW5hbCBvcyA9IFBsYXRmb3JtLmlzQW5kcm9pZAogICAgICAgICAgPyBPcGVyYXRpbmdTeXN0ZW0uYW5kcm9pZCAvLwogICAgICAgICAgOiBPcGVyYXRpbmdTeXN0ZW0uaW9zOwogICAgICByZXR1cm4gRGV2aWNlRW50aXR5KAogICAgICAgIGluc3RhbGxhdGlvbklkOiBpbnN0YWxsYXRpb25JZCwKICAgICAgICB0b2tlbjogdG9rZW4hLAogICAgICAgIG9wZXJhdGluZ1N5c3RlbTogb3MsCiAgICAgICAgY3JlYXRpb25EYXRlOiBEYXRlVGltZS5ub3coKSwKICAgICAgICBsYXN0VXBkYXRlRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IHJlZ2lzdGVyKFN0cmluZyB1c2VySWQsIERldmljZUVudGl0eSBkZXZpY2UpIGFzeW5jIHsKICAgIHRyeSB7CiAgICAgIGZpbmFsIGRldmljZUNweSA9IGRldmljZS5jb3B5V2l0aCh1c2VySWQ6IHVzZXJJZCk7CiAgICAgIGZpbmFsIHJlc3VsdCA9IGF3YWl0IF9jbGllbnQKICAgICAgICAgIC5mcm9tKCdkZXZpY2VzJykgLy8KICAgICAgICAgIC5pbnNlcnQoZGV2aWNlQ3B5LnRvSnNvbigpKQogICAgICAgICAgLnNlbGVjdCgpOwogICAgICByZXR1cm4gRGV2aWNlRW50aXR5LmZyb21Kc29uKHJlc3VsdC5maXJzdCk7CiAgICB9IGNhdGNoIChlLCB0cmFjZSkgewogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZSA6ICR0cmFjZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiB1cGRhdGUoRGV2aWNlRW50aXR5IGRldmljZSkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgcmVzdWx0ID0gYXdhaXQgX2NsaWVudAogICAgICAgICAgLmZyb20oJ2RldmljZXMnKSAvLwogICAgICAgICAgLnVwZGF0ZShkZXZpY2UudG9Kc29uKCkpCiAgICAgICAgICAuZXEoJ2luc3RhbGxhdGlvbl9pZCcsIGRldmljZS5pbnN0YWxsYXRpb25JZCkKICAgICAgICAgIC5zZWxlY3QoKTsKICAgICAgcmV0dXJuIERldmljZUVudGl0eS5mcm9tSnNvbihyZXN1bHQuZmlyc3QpOwogICAgfSBjYXRjaCAoZSwgdHJhY2UpIHsKICAgICAgdGhyb3cgQXBpRXJyb3IoCiAgICAgICAgY29kZTogMCwKICAgICAgICBtZXNzYWdlOiAnJGU6ICR0cmFjZScsCiAgICAgICk7CiAgICB9CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gdW5yZWdpc3RlcihTdHJpbmcgdXNlcklkLCBTdHJpbmcgaW5zdGFsbGF0aW9uSWQpIGFzeW5jIHsKICAgIHRyeSB7CiAgICAgIGF3YWl0IF9jbGllbnQKICAgICAgICAgIC5mcm9tKCdkZXZpY2VzJykgLy8KICAgICAgICAgIC5kZWxldGUoKQogICAgICAgICAgLmVxKCdpbnN0YWxsYXRpb25faWQnLCBpbnN0YWxsYXRpb25JZCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRocm93IEFwaUVycm9yKAogICAgICAgIGNvZGU6IDAsCiAgICAgICAgbWVzc2FnZTogJyRlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIHZvaWQgb25Ub2tlblJlZnJlc2goT25Ub2tlblJlZnJlc2ggb25Ub2tlblJlZnJlc2gpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbiA9CiAgICAgICAgX21lc3NhZ2luZy5vblRva2VuUmVmcmVzaC5saXN0ZW4oKGRhdGEpID0+IG9uVG9rZW5SZWZyZXNoKGRhdGEpKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgcmVtb3ZlT25Ub2tlblJlZnJlc2hMaXN0ZW5lcigpIHsKICAgIF9vblRva2VuUmVmcmVzaFN1YnNjcmlwdGlvbj8uY2FuY2VsKCk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/api/supabase_notifications_api.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL2FwaS9iYXNlX2FwaV9leGNlcHRpb25zLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL2RhdGEvbW9kZWxzL3BhZ2VhYmxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2VudGl0aWVzL25vdGlmaWNhdGlvbnNfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfbWVzc2FnaW5nL2ZpcmViYXNlX21lc3NhZ2luZy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CmltcG9ydCAncGFja2FnZTpsb2dnZXIvbG9nZ2VyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6c3VwYWJhc2VfZmx1dHRlci9zdXBhYmFzZV9mbHV0dGVyLmRhcnQnOwoKZmluYWwgbm90aWZpY2F0aW9uc0FwaVByb3ZpZGVyID0gUHJvdmlkZXI8Tm90aWZpY2F0aW9uc0FwaT4oCiAgKHJlZikgPT4gRmlyZWJhc2VOb3RpZmljYXRpb25zQXBpKAogICAgbWVzc2FnaW5nOiBGaXJlYmFzZU1lc3NhZ2luZy5pbnN0YW5jZSwKICAgIGxvZ2dlcjogTG9nZ2VyKCksCiAgICBjbGllbnQ6IFN1cGFiYXNlLmluc3RhbmNlLmNsaWVudCwKICApLAopOwoKLy8vIFRoaXMgY2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIGxpc3RlbmluZyBmcm9tIGZpcmViYXNlIG5vdGlmaWNhdGlvbnMKLy8vIEFzIEkgbGlrZSByZXBvc2l0b3JpZXMgdG8gbm90IGRlcGVuZCBvbiBleHRlcm5hbCBsaWJyYXJpZXMKLy8vIEkgd3JhcHBlZCBzb21lIG9mIHRoZSBmaXJlYmFzZSBtZXNzYWdpbmcgbWV0aG9kcwovLy8KLy8vIFlvdSBjb3VsZCB1c2UgZGlyZWN0bHkgdGhlIGZpcmViYXNlIG1lc3NhZ2luZyBtZXRob2RzIGJ1dCBtYWtpbmcgYSBmYWtlIGltcGxlbWVudGF0aW9uCi8vLyBvZiB0aGlzIGNsYXNzIHdvdWxkIGJlIGhhcmRlci4KYWJzdHJhY3QgY2xhc3MgTm90aWZpY2F0aW9uc0FwaSB7CiAgLy8vIFJlcXVlc3QgcGVybWlzc2lvbiB0byByZWNlaXZlIG5vdGlmaWNhdGlvbnMKICBGdXR1cmU8dm9pZD4gcmVxdWVzdFBlcm1pc3Npb24oKTsKCiAgLy8gVXNlZCB0byBsaXN0ZW4gdG8gbm90aWZpY2F0aW9ucyB3aGVuIHRoZSBhcHAgaXMgaW4gZm9yZWdyb3VuZAogIHZvaWQgc2V0Rm9yZWdyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpOwoKICAvLyBVc2VkIHRvIGxpc3RlbiB0byBub3RpZmljYXRpb25zIHdoZW4gdGhlIGFwcCBpcyBpbiBiYWNrZ3JvdW5kCiAgdm9pZCBzZXRCYWNrZ3JvdW5kSGFuZGxlcihPblJlbW90ZU1lc3NhZ2UgaGFuZGxlcik7CgogIC8vIFVzZWQgdG8gbGlzdGVuIHRvIG5vdGlmaWNhdGlvbnMgd2hlbiB1c2VyIGNsaWNrcyBvbiB0aGUgbm90aWZpY2F0aW9uCiAgdm9pZCBzZXRPbk9wZW5Ob3RpZmljYXRpb25IYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKTsKCiAgLy8gVXNlZCB0byBnZXQgdGhlIHBhc3Qgbm90aWZpY2F0aW9ucyBmcm9tIHRoZSBzZXJ2ZXIKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uRW50aXR5Pj4gZ2V0KAogICAgICBTdHJpbmcgdXNlcklkLCBpbnQgcGFnZSwgaW50IHBhZ2VTaXplKTsKCiAgLy8gVXNlZCB0byBtYXJrIGEgbm90aWZpY2F0aW9uIGFzIHJlYWQKICBGdXR1cmU8dm9pZD4gcmVhZChTdHJpbmcgdXNlcklkLCBTdHJpbmcgbm90aWZpY2F0aW9uSWQpOwoKICAvLyBVc2VkIHRvIGdldCB0aGUgdW5yZWFkIG5vdGlmaWNhdGlvbnMgY291bnQKICBTdHJlYW08aW50PiB1bnJlYWROb3RpZmljYXRpb25zKFN0cmluZyB1c2VySWQpOwoKICAvLyBVc2VkIHRvIHJlZ2lzdGVyIHRvIGEgdG9waWMKICB2b2lkIHJlZ2lzdGVyVG9waWMoU3RyaW5nIHRvcGljKTsKCiAgLy8gVXNlZCB0byB1bnJlZ2lzdGVyIGZyb20gYSB0b3BpYwogIHZvaWQgdW5yZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYyk7Cn0KCnR5cGVkZWYgT25SZW1vdGVNZXNzYWdlID0gRnV0dXJlPHZvaWQ+IEZ1bmN0aW9uKFJlbW90ZU1lc3NhZ2UgbWVzc2FnZSk7CgpjbGFzcyBGaXJlYmFzZU5vdGlmaWNhdGlvbnNBcGkgaW1wbGVtZW50cyBOb3RpZmljYXRpb25zQXBpIHsKICBmaW5hbCBGaXJlYmFzZU1lc3NhZ2luZyBfbWVzc2FnaW5nOwogIGZpbmFsIFN1cGFiYXNlQ2xpZW50IF9jbGllbnQ7CiAgZmluYWwgTG9nZ2VyIF9sb2dnZXI7CgogIEZpcmViYXNlTm90aWZpY2F0aW9uc0FwaSh7CiAgICByZXF1aXJlZCBGaXJlYmFzZU1lc3NhZ2luZyBtZXNzYWdpbmcsCiAgICByZXF1aXJlZCBTdXBhYmFzZUNsaWVudCBjbGllbnQsCiAgICByZXF1aXJlZCBMb2dnZXIgbG9nZ2VyLAogIH0pICA6IF9tZXNzYWdpbmcgPSBtZXNzYWdpbmcsCiAgICAgICAgX2NsaWVudCA9IGNsaWVudCwKICAgICAgICBfbG9nZ2VyID0gbG9nZ2VyOwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gcmVxdWVzdFBlcm1pc3Npb24oKSBhc3luYyB7CiAgICB0cnkgewogICAgICBhd2FpdCBfbWVzc2FnaW5nLnJlcXVlc3RQZXJtaXNzaW9uKCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIF9sb2dnZXIuZShlKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIHZvaWQgc2V0Rm9yZWdyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpIHsKICAgIEZpcmViYXNlTWVzc2FnaW5nLm9uTWVzc2FnZS5saXN0ZW4oaGFuZGxlcik7CiAgfQoKICBAb3ZlcnJpZGUKICB2b2lkIHNldEJhY2tncm91bmRIYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBGaXJlYmFzZU1lc3NhZ2luZy5vbkJhY2tncm91bmRNZXNzYWdlKGhhbmRsZXIpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCBzZXRPbk9wZW5Ob3RpZmljYXRpb25IYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBGaXJlYmFzZU1lc3NhZ2luZy5vbk1lc3NhZ2VPcGVuZWRBcHAubGlzdGVuKGhhbmRsZXIpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCByZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy5zdWJzY3JpYmVUb1RvcGljKHRvcGljKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgdW5yZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX21lc3NhZ2luZy51bnN1YnNjcmliZUZyb21Ub3BpYyh0b3BpYyk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uRW50aXR5Pj4gZ2V0KAogICAgU3RyaW5nIHVzZXJJZCwKICAgIGludCBwYWdlLAogICAgaW50IHBhZ2VTaXplLAogICkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgZmluYWwgcmVzcG9uc2UgPSBhd2FpdCBfY2xpZW50CiAgICAgICAgICAuZnJvbSgnbm90aWZpY2F0aW9ucycpCiAgICAgICAgICAuc2VsZWN0KCkKICAgICAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZCkKICAgICAgICAgIC5vcmRlcignY3JlYXRpb25fZGF0ZScsIGFzY2VuZGluZzogZmFsc2UpCiAgICAgICAgICAucmFuZ2UocGFnZSAqIHBhZ2VTaXplLCAocGFnZSArIDEpICogcGFnZVNpemUgLSAxKTsKICAgICAgaWYgKHJlc3BvbnNlLmlzRW1wdHkpIHsKICAgICAgICByZXR1cm4gY29uc3QgUGFnZWFibGUoCiAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgIHBhZ2U6IDAsCiAgICAgICAgICBwYWdlU2l6ZTogMCwKICAgICAgICApOwogICAgICB9CiAgICAgIGZpbmFsIGxpc3QgPSByZXNwb25zZQogICAgICAgICAgLm1hcCgoZSkgPT4gTm90aWZpY2F0aW9uRW50aXR5LmZyb21Kc29uKGUpKSAvLwogICAgICAgICAgLnRvTGlzdCgpOwogICAgICByZXR1cm4gUGFnZWFibGUoCiAgICAgICAgZGF0YTogbGlzdCwKICAgICAgICBwYWdlOiBwYWdlLAogICAgICAgIHBhZ2VTaXplOiBwYWdlU2l6ZSwKICAgICAgKTsKICAgIH0gY2F0Y2ggKGUsIHN0YWNrdHJhY2UpIHsKICAgICAgdGhyb3cgQXBpRXJyb3IoCiAgICAgICAgY29kZTogMCwKICAgICAgICBtZXNzYWdlOiAnJGU6ICRzdGFja3RyYWNlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiByZWFkKFN0cmluZyB1c2VySWQsIFN0cmluZyBub3RpZmljYXRpb25JZCkgYXN5bmMgewogICAgdHJ5IHsKICAgICAgYXdhaXQgX2NsaWVudAogICAgICAgICAgLmZyb20oJ25vdGlmaWNhdGlvbnMnKQogICAgICAgICAgLnVwZGF0ZSh7J3JlYWRfZGF0ZSc6IERhdGVUaW1lLm5vdygpLnRvU3RyaW5nKCl9KQogICAgICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKQogICAgICAgICAgLmVxKCdpZCcsIG5vdGlmaWNhdGlvbklkKTsKICAgIH0gY2F0Y2ggKGUsIHN0YWNrdHJhY2UpIHsKICAgICAgdGhyb3cgQXBpRXJyb3IoCiAgICAgICAgY29kZTogMCwKICAgICAgICBtZXNzYWdlOiAnJGU6ICRzdGFja3RyYWNlJywKICAgICAgKTsKICAgIH0KICB9CgogIEBvdmVycmlkZQogIFN0cmVhbTxpbnQ+IHVucmVhZE5vdGlmaWNhdGlvbnMoU3RyaW5nIHVzZXJJZCkgewogICAgdHJ5IHsKICAgICAgcmV0dXJuIF9jbGllbnQKICAgICAgICAgIC5mcm9tKCdub3RpZmljYXRpb25zJykKICAgICAgICAgIC5zdHJlYW0ocHJpbWFyeUtleTogWydpZCddKQogICAgICAgICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKQogICAgICAgICAgLmxpbWl0KDEwKQogICAgICAgICAgLm1hcCgoZXZlbnQpID0+IGV2ZW50Lmxlbmd0aCk7CiAgICB9IGNhdGNoIChlLCBzdGFja3RyYWNlKSB7CiAgICAgIGRlYnVnUHJpbnQoJyRlOiAkc3RhY2t0cmFjZScpOwogICAgICB0aHJvdyBBcGlFcnJvcigKICAgICAgICBjb2RlOiAwLAogICAgICAgIG1lc3NhZ2U6ICckZTogJHN0YWNrdHJhY2UnLAogICAgICApOwogICAgfQogIH0KfQo=","type":"text"},{"path":"lib/modules/notifications/providers/models/device.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9lbnRpdGllcy9kZXZpY2VfZW50aXR5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ2RldmljZS5mcmVlemVkLmRhcnQnOwoKQGZyZWV6ZWQKY2xhc3MgRGV2aWNlIHdpdGggXyREZXZpY2UgewogIGNvbnN0IGZhY3RvcnkgRGV2aWNlKHsKICAgIFN0cmluZz8gaWQsCiAgICByZXF1aXJlZCBTdHJpbmcgaW5zdGFsbGF0aW9uSWQsCiAgICByZXF1aXJlZCBTdHJpbmcgdG9rZW4sCiAgICByZXF1aXJlZCBPcGVyYXRpbmdTeXN0ZW0gcGxhdGZvcm0sCiAgICByZXF1aXJlZCBEYXRlVGltZSBjcmVhdGVkQXQsCiAgICByZXF1aXJlZCBEYXRlVGltZSB1cGRhdGVkQXQsCiAgfSkgPSBfRGV2aWNlRGF0YTsKCiAgZmFjdG9yeSBEZXZpY2UuZnJvbUVudGl0eShEZXZpY2VFbnRpdHkgZW50aXR5KSB7CiAgICByZXR1cm4gRGV2aWNlKAogICAgICBpZDogZW50aXR5LmlkLAogICAgICBpbnN0YWxsYXRpb25JZDogZW50aXR5Lmluc3RhbGxhdGlvbklkLAogICAgICB0b2tlbjogZW50aXR5LnRva2VuLAogICAgICBwbGF0Zm9ybTogZW50aXR5Lm9wZXJhdGluZ1N5c3RlbSwKICAgICAgY3JlYXRlZEF0OiBlbnRpdHkuY3JlYXRpb25EYXRlLAogICAgICB1cGRhdGVkQXQ6IGVudGl0eS5sYXN0VXBkYXRlRGF0ZSwKICAgICk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/providers/models/device.freezed.dart","data":"","type":"text"},{"path":"lib/modules/notifications/providers/models/notification.dart","data":"Ly8gaWdub3JlX2Zvcl9maWxlOiBpbnZhbGlkX2Fubm90YXRpb25fdGFyZ2V0CgppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2xvY2FsX25vdGlmaWVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZnJlZXplZF9hbm5vdGF0aW9uL2ZyZWV6ZWRfYW5ub3RhdGlvbi5kYXJ0JzsKCnBhcnQgJ25vdGlmaWNhdGlvbi5mcmVlemVkLmRhcnQnOwoKQGZyZWV6ZWQKY2xhc3MgTm90aWZpY2F0aW9uIHdpdGggXyROb3RpZmljYXRpb24gewogIGNvbnN0IE5vdGlmaWNhdGlvbi5fKCk7CgogIGNvbnN0IGZhY3RvcnkgTm90aWZpY2F0aW9uLndpdGhEYXRhKHsKICAgIFN0cmluZz8gaWQsCiAgICBTdHJpbmc/IHRpdGxlLAogICAgU3RyaW5nPyBib2R5LAogICAgcmVxdWlyZWQgRGF0ZVRpbWUgY3JlYXRlZEF0LAogICAgRGF0ZVRpbWU/IHJlYWRBdCwKICAgIExvY2FsTm90aWZpZXI/IG5vdGlmaWVyLAogICAgTm90aWZpY2F0aW9uU2V0dGluZ3M/IG5vdGlmaWVyU2V0dGluZ3MsCiAgfSkgPSBOb3RpZmljYXRpb25EYXRhOwoKICBmYWN0b3J5IE5vdGlmaWNhdGlvbi5mcm9tKAogICAgTWFwPFN0cmluZywgZHluYW1pYz4ganNvbiwgewogICAgU3RyaW5nPyBpZCwKICAgIExvY2FsTm90aWZpZXI/IG5vdGlmaWVyQXBpLAogICAgTm90aWZpY2F0aW9uU2V0dGluZ3M/IG5vdGlmaWVyU2V0dGluZ3MsCiAgfSkgPT4KICAgICAgTm90aWZpY2F0aW9uLndpdGhEYXRhKAogICAgICAgIGlkOiBpZCwKICAgICAgICB0aXRsZToganNvblsndGl0bGUnXSBhcyBTdHJpbmcsCiAgICAgICAgYm9keToganNvblsnYm9keSddIGFzIFN0cmluZywKICAgICAgICBjcmVhdGVkQXQ6IERhdGVUaW1lLm5vdygpLAogICAgICAgIG5vdGlmaWVyOiBub3RpZmllckFwaSwKICAgICAgICBub3RpZmllclNldHRpbmdzOiBub3RpZmllclNldHRpbmdzLAogICAgICApOwoKICBGdXR1cmU8dm9pZD4gc2hvdyh7Tm90aWZpY2F0aW9uU2V0dGluZ3M/IHNldHRpbmdzfSkgYXN5bmMgewogICAgaWYgKG5vdGlmaWVyID09IG51bGwpIHsKICAgICAgdGhyb3cgRXhjZXB0aW9uKAogICAgICAgICdZb3UgbXVzdCBwcm92aWRlIGEgTG9jYWxOb3RpZmllckFwaSB0byBzaG93IGEgbm90aWZpY2F0aW9uJywKICAgICAgKTsKICAgIH0KICAgIGlmICh0aXRsZSA9PSBudWxsIHx8IGJvZHkgPT0gbnVsbCkgewogICAgICAvLyB3ZSBkb24ndCBzaG93IGEgbm90aWZpY2F0aW9uIHdpdGhvdXQgdGl0bGUgb3IgYm9keQogICAgICAvLyB0aGlzIGlzIGEgc2lsZW50IG5vdGlmaWNhdGlvbiB0aGF0IHdlIHdhbnQgdG8gaGFuZGxlCiAgICAgIC8vIEltcHJvdmVtZW50IDogd2UgY2FuIGNyZWF0ZSBhIHNlYWxlZCBjbGFzcyB3aXRoIGJvdGggdHlwZXMgb2Ygbm90aWZpY2F0aW9ucwogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAobm90aWZpZXJTZXR0aW5ncyAhPSBudWxsKSB7CiAgICAgIGF3YWl0IG5vdGlmaWVyIS5zaG93KG5vdGlmaWVyU2V0dGluZ3MhLCB0aGlzKTsKICAgICAgcmV0dXJuOwogICAgfSBlbHNlIGlmIChzZXR0aW5ncyAhPSBudWxsKSB7CiAgICAgIGF3YWl0IG5vdGlmaWVyIS5zaG93KHNldHRpbmdzLCB0aGlzKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgdGhyb3cgRXhjZXB0aW9uKAogICAgICAnWW91IG11c3QgcHJvdmlkZSBhIE5vdGlmaWNhdGlvblNldHRpbmdzIHRvIHNob3cgYSBub3RpZmljYXRpb24nLAogICAgKTsKICB9CgogIGJvb2wgZ2V0IHNlZW4gPT4gcmVhZEF0ICE9IG51bGw7Cn0K","type":"text"},{"path":"lib/modules/notifications/providers/models/notification.freezed.dart","data":"","type":"text"},{"path":"lib/modules/notifications/providers/notifications_provider.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL21vZGVscy9wYWdlYWJsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9zdGF0ZXMvdXNlcl9zdGF0ZV9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvbm90aWZpY2F0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvcmVwb3NpdG9yaWVzL25vdGlmaWNhdGlvbnNfcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmxvZ2dlci9sb2dnZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTpyaXZlcnBvZF9hbm5vdGF0aW9uL3JpdmVycG9kX2Fubm90YXRpb24uZGFydCc7CgpmaW5hbCBub3RpZmljYXRpb25zUGFnZVN0YXRlUHJvdmlkZXIgPQogICAgQXN5bmNOb3RpZmllclByb3ZpZGVyPE5vdGlmaWNhdGlvbnNOb3RpZmllciwgUGFnZWFibGU8Tm90aWZpY2F0aW9uPj4oCiAgTm90aWZpY2F0aW9uc05vdGlmaWVyLm5ldywKKTsKCmNsYXNzIE5vdGlmaWNhdGlvbnNOb3RpZmllciBleHRlbmRzIEFzeW5jTm90aWZpZXI8UGFnZWFibGU8Tm90aWZpY2F0aW9uPj4gewogIHZhciBfbG9ja2VkID0gZmFsc2U7CgogIEBvdmVycmlkZQogIEZ1dHVyZU9yPFBhZ2VhYmxlPE5vdGlmaWNhdGlvbj4+IGJ1aWxkKCkgYXN5bmMgewogICAgZmluYWwgbm90aWZpY2F0aW9uUmVwb3NpdG9yeSA9IHJlZi5yZWFkKG5vdGlmaWNhdGlvblJlcG9zaXRvcnlQcm92aWRlcik7CiAgICBmaW5hbCB1c2VyU3RhdGUgPSByZWYud2F0Y2godXNlclN0YXRlTm90aWZpZXJQcm92aWRlcik7CiAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDE1MDApKTsKICAgIHJldHVybiBub3RpZmljYXRpb25SZXBvc2l0b3J5LmdldCh1c2VyU3RhdGUudXNlci5pZE9yVGhyb3cpOwogIH0KCiAgRnV0dXJlPHZvaWQ+IHJlYWRBbGwoKSBhc3luYyB7CiAgICBpZiAoIXN0YXRlLmhhc1ZhbHVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRyeSB7CiAgICAgIGZpbmFsIG5vdGlmaWNhdGlvblJlcG9zaXRvcnkgPSByZWYucmVhZChub3RpZmljYXRpb25SZXBvc2l0b3J5UHJvdmlkZXIpOwogICAgICBmaW5hbCB1c2VyU3RhdGUgPSByZWYud2F0Y2godXNlclN0YXRlTm90aWZpZXJQcm92aWRlcik7CiAgICAgIGZpbmFsIExpc3Q8Tm90aWZpY2F0aW9uPiB1cGRhdGVkTm90aWZpY2F0aW9ucyA9IFtdOwogICAgICBmb3IgKGZpbmFsIG5vdGlmaWNhdGlvbiBpbiBzdGF0ZS52YWx1ZSEuZGF0YSkgewogICAgICAgIGlmIChub3RpZmljYXRpb24uc2VlbikgewogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIHVwZGF0ZWROb3RpZmljYXRpb25zLmFkZCgKICAgICAgICAgIGF3YWl0IG5vdGlmaWNhdGlvblJlcG9zaXRvcnkucmVhZCgKICAgICAgICAgICAgdXNlclN0YXRlLnVzZXIuaWRPclRocm93LAogICAgICAgICAgICBub3RpZmljYXRpb24sCiAgICAgICAgICApLAogICAgICAgICk7CiAgICAgICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxMDApKTsKICAgICAgfQogICAgICBmaW5hbCBMaXN0PE5vdGlmaWNhdGlvbj4gb2xkTm90aWZpY2F0aW9ucyA9IHN0YXRlCiAgICAgICAgICAudmFsdWUhIC8vCiAgICAgICAgICAuZGF0YQogICAgICAgICAgLndoZXJlKChlbGVtZW50KSA9PiBlbGVtZW50LnNlZW4pCiAgICAgICAgICAudG9MaXN0KCk7CiAgICAgIHN0YXRlID0gQXN5bmNWYWx1ZS5kYXRhKAogICAgICAgIHN0YXRlLnZhbHVlIS5jb3B5V2l0aCgKICAgICAgICAgIGRhdGE6IFsKICAgICAgICAgICAgLi4udXBkYXRlZE5vdGlmaWNhdGlvbnMsCiAgICAgICAgICAgIC4uLm9sZE5vdGlmaWNhdGlvbnMsCiAgICAgICAgICBdLAogICAgICAgICksCiAgICAgICk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIExvZ2dlcigpLmUoImVycm9yICRlIik7CiAgICB9CiAgfQoKICBGdXR1cmU8dm9pZD4gcmVmcmVzaCgpIGFzeW5jIHsKICAgIGlmIChfbG9ja2VkKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIF9sb2NrZWQgPSB0cnVlOwogICAgc3RhdGUgPSBjb25zdCBBc3luY1ZhbHVlLmxvYWRpbmcoKTsKICAgIGZpbmFsIG5vdGlmaWNhdGlvblJlcG9zaXRvcnkgPSByZWYucmVhZChub3RpZmljYXRpb25SZXBvc2l0b3J5UHJvdmlkZXIpOwogICAgZmluYWwgdXNlclN0YXRlID0gcmVmLndhdGNoKHVzZXJTdGF0ZU5vdGlmaWVyUHJvdmlkZXIpOwogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxNTAwKSk7CiAgICBzdGF0ZSA9IEFzeW5jVmFsdWUuZGF0YSgKICAgICAgYXdhaXQgbm90aWZpY2F0aW9uUmVwb3NpdG9yeS5nZXQodXNlclN0YXRlLnVzZXIuaWRPclRocm93KSwKICAgICk7CiAgICBfbG9ja2VkID0gZmFsc2U7CiAgfQoKICBGdXR1cmU8dm9pZD4gZmV0Y2hOZXh0UGFnZSgpIGFzeW5jIHsKICAgIGlmIChfbG9ja2VkKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIF9sb2NrZWQgPSB0cnVlOwogICAgZmluYWwgbm90aWZpY2F0aW9uUmVwb3NpdG9yeSA9IHJlZi5yZWFkKG5vdGlmaWNhdGlvblJlcG9zaXRvcnlQcm92aWRlcik7CiAgICBmaW5hbCB1c2VyU3RhdGUgPSByZWYud2F0Y2godXNlclN0YXRlTm90aWZpZXJQcm92aWRlcik7CiAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDUwMCkpOwoKICAgIGZpbmFsIHBhZ2VOdW1iZXIgPSBzdGF0ZS52YWx1ZSEucGFnZSArIDE7CiAgICBmaW5hbCBuZXh0UGFnZSA9IGF3YWl0IG5vdGlmaWNhdGlvblJlcG9zaXRvcnkuZ2V0KAogICAgICB1c2VyU3RhdGUudXNlci5pZE9yVGhyb3csCiAgICAgIHBhZ2U6IHBhZ2VOdW1iZXIsCiAgICApOwogICAgc3RhdGUgPSBBc3luY1ZhbHVlLmRhdGEoCiAgICAgIHN0YXRlLnZhbHVlIS5jb3B5V2l0aCgKICAgICAgICBwYWdlOiBwYWdlTnVtYmVyLAogICAgICAgIGRhdGE6IFsKICAgICAgICAgIC4uLnN0YXRlLnZhbHVlIS5kYXRhLAogICAgICAgICAgLi4ubmV4dFBhZ2UuZGF0YSwKICAgICAgICBdLAogICAgICApLAogICAgKTsKICAgIF9sb2NrZWQgPSBmYWxzZTsKICB9Cn0K","type":"text"},{"path":"lib/modules/notifications/repositories/device_repository.dart","data":"aW1wb3J0ICdkYXJ0OmNvbnZlcnQnOwoKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9zaGFyZWRfcHJlZmVyZW5jZXMvc2hhcmVkX3ByZWZlcmVuY2VzLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2RldmljZV9hcGkuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy9hcGkvZW50aXRpZXMvZGV2aWNlX2VudGl0eS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvZGV2aWNlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6c2hhcmVkX3ByZWZlcmVuY2VzL3NoYXJlZF9wcmVmZXJlbmNlcy5kYXJ0JzsKCmZpbmFsIGRldmljZVJlcG9zaXRvcnlQcm92aWRlciA9IFByb3ZpZGVyPERldmljZVJlcG9zaXRvcnk+KAogIChyZWYpIHsKICAgIGZpbmFsIHByZWZzTG9hZGVyID0gcmVmLndhdGNoKHNoYXJlZFByZWZlcmVuY2VzUHJvdmlkZXIpOwogICAgcmV0dXJuIERldmljZVJlcG9zaXRvcnkoCiAgICAgIHByZWZzOiBwcmVmc0xvYWRlci5wcmVmcywKICAgICAgZGV2aWNlQXBpOiByZWYud2F0Y2goZGV2aWNlQXBpUHJvdmlkZXIpLAogICAgKTsKICB9LAopOwoKY29uc3QgX2RldmljZVByZWZzS2V5ID0gJ2RldmljZSc7Cgp0eXBlZGVmIE9uVG9rZW5SZWZyZXNoQ2FsbGJhY2sgPSB2b2lkIEZ1bmN0aW9uKERldmljZSBkZXZpY2UpOwoKLy8vIFRoaXMgcmVwb3NpdG9yeSBpcyByZXNwb25zaWJsZSBmb3IgdGhlIGRldmljZSByZWdpc3RyYXRpb24KLy8vIFlvdSBuZWVkIHRvIHJlZ2lzdGVyIHRoZSBkZXZpY2UgaW4geW91ciBiYWNrZW5kIHRvIGJlIGFibGUgdG8gc2VuZCBub3RpZmljYXRpb25zCi8vLyBZb3UgY2FuIGFsc28gdW5yZWdpc3RlciB0aGUgZGV2aWNlCi8vLyBUaGUgZGV2aWNlIGlzIGFsc28gc3RvcmVkIGluIHRoZSBzaGFyZWQgcHJlZmVyZW5jZXMgdG8gcHJldmVudCBzcGFtbWluZyB0aGUgYmFja2VuZAovLy8gVGhlIHRva2VuIGlzIHVwZGF0ZWQgd2hlbiB0aGUgdG9rZW4gaXMgcmVmcmVzaGVkCi8vLyBPcHRpb25uYWx5IHlvdSBjYW4gYWxzbyBhZGQgdGhlIHVzZXIgaWQgdG8gdGhlIG1ldGhvZHMKY2xhc3MgRGV2aWNlUmVwb3NpdG9yeSB7CiAgZmluYWwgRGV2aWNlQXBpIF9kZXZpY2VBcGk7CiAgZmluYWwgU2hhcmVkUHJlZmVyZW5jZXMgX3ByZWZzOwoKICBEZXZpY2VSZXBvc2l0b3J5KHsKICAgIHJlcXVpcmVkIERldmljZUFwaSBkZXZpY2VBcGksCiAgICByZXF1aXJlZCBTaGFyZWRQcmVmZXJlbmNlcyBwcmVmcywKICB9KSAgOiBfZGV2aWNlQXBpID0gZGV2aWNlQXBpLAogICAgICAgIF9wcmVmcyA9IHByZWZzOwoKICBGdXR1cmU8RGV2aWNlPz4gZ2V0KCkgYXN5bmMgewogICAgZmluYWwgZGV2aWNlRW50aXR5ID0gYXdhaXQgX2dldEZyb21QcmVmcygpOwogICAgaWYgKGRldmljZUVudGl0eSA9PSBudWxsKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogICAgcmV0dXJuIERldmljZS5mcm9tRW50aXR5KGRldmljZUVudGl0eSk7CiAgfQoKICBGdXR1cmU8dm9pZD4gcmVnaXN0ZXIoU3RyaW5nIHVzZXJJZCkgYXN5bmMgewogICAgZmluYWwgZGV2aWNlID0gYXdhaXQgX2dldEZyb21QcmVmcygpOwogICAgaWYgKGRldmljZSAhPSBudWxsKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGZpbmFsIG5ld0RldmljZSA9IGF3YWl0IF9kZXZpY2VBcGkuZ2V0KCk7CiAgICBmaW5hbCByZXNwb25zZSA9IGF3YWl0IF9kZXZpY2VBcGkucmVnaXN0ZXIodXNlcklkLCBuZXdEZXZpY2UpOwogICAgYXdhaXQgX3NhdmVJblByZWZzKHJlc3BvbnNlKTsKICB9CgogIEZ1dHVyZTx2b2lkPiB1bnJlZ2lzdGVyKFN0cmluZyB1c2VySWQpIGFzeW5jIHsKICAgIGZpbmFsIGRldmljZSA9IGF3YWl0IF9nZXRGcm9tUHJlZnMoKTsKICAgIGlmIChkZXZpY2UgPT0gbnVsbCkgewogICAgICByZXR1cm47CiAgICB9CiAgICBhd2FpdCBfZGV2aWNlQXBpLnVucmVnaXN0ZXIodXNlcklkLCBkZXZpY2UuaW5zdGFsbGF0aW9uSWQpOwogICAgYXdhaXQgX3JlbW92ZUZyb21QcmVmcygpOwogIH0KCiAgdm9pZCBvblRva2VuVXBkYXRlKE9uVG9rZW5SZWZyZXNoQ2FsbGJhY2sgb25Ub2tlblJlZnJlc2gpIHsKICAgIF9kZXZpY2VBcGkub25Ub2tlblJlZnJlc2goKHRva2VuKSBhc3luYyB7CiAgICAgIGZpbmFsIGRldmljZSA9IGF3YWl0IF9nZXRGcm9tUHJlZnMoKTsKICAgICAgaWYgKGRldmljZSA9PSBudWxsKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGZpbmFsIHVwZGF0ZWREZXZpY2UgPSBkZXZpY2UuY29weVdpdGgoCiAgICAgICAgdG9rZW46IHRva2VuLAogICAgICAgIGxhc3RVcGRhdGVEYXRlOiBEYXRlVGltZS5ub3coKSwKICAgICAgKTsKICAgICAgb25Ub2tlblJlZnJlc2goRGV2aWNlLmZyb21FbnRpdHkodXBkYXRlZERldmljZSkpOwogICAgfSk7CiAgfQoKICB2b2lkIHJlbW92ZVRva2VuVXBkYXRlTGlzdGVuZXIoKSB7CiAgICBfZGV2aWNlQXBpLnJlbW92ZU9uVG9rZW5SZWZyZXNoTGlzdGVuZXIoKTsKICB9CgogIEZ1dHVyZTx2b2lkPiB1cGRhdGVUb2tlbihTdHJpbmcgdG9rZW4pIGFzeW5jIHsKICAgIGZpbmFsIGRldmljZSA9IGF3YWl0IF9nZXRGcm9tUHJlZnMoKTsKICAgIGlmIChkZXZpY2UgPT0gbnVsbCkgewogICAgICByZXR1cm47CiAgICB9CiAgICBmaW5hbCB1cGRhdGVkRGV2aWNlID0gZGV2aWNlLmNvcHlXaXRoKHRva2VuOiB0b2tlbik7CiAgICBhd2FpdCBfZGV2aWNlQXBpLnVwZGF0ZSh1cGRhdGVkRGV2aWNlKTsKICAgIGF3YWl0IF9zYXZlSW5QcmVmcyh1cGRhdGVkRGV2aWNlKTsKICB9CgogIC8vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAvLy8gUFJJVkFURVMKICAvLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogIEZ1dHVyZTx2b2lkPiBfc2F2ZUluUHJlZnMoRGV2aWNlRW50aXR5IGRldmljZSkgYXN5bmMgewogICAgZmluYWwganNvbiA9IGRldmljZS50b0pzb25Gb3JQcmVmcygpOwogICAgZmluYWwgZGF0YSA9IGpzb25FbmNvZGUoanNvbik7CiAgICBhd2FpdCBfcHJlZnMuc2V0U3RyaW5nKF9kZXZpY2VQcmVmc0tleSwgZGF0YSk7CiAgfQoKICBGdXR1cmU8RGV2aWNlRW50aXR5Pz4gX2dldEZyb21QcmVmcygpIGFzeW5jIHsKICAgIGZpbmFsIGRldmljZUpzb24gPSBfcHJlZnMuZ2V0U3RyaW5nKF9kZXZpY2VQcmVmc0tleSk7CiAgICBpZiAoZGV2aWNlSnNvbiAhPSBudWxsKSB7CiAgICAgIGZpbmFsIGRldmljZU1hcCA9IGpzb25EZWNvZGUoZGV2aWNlSnNvbikgYXMgTWFwPFN0cmluZywgZHluYW1pYz47CiAgICAgIHJldHVybiBEZXZpY2VFbnRpdHkuZnJvbVByZWZzKGRldmljZU1hcCk7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9CgogIEZ1dHVyZTx2b2lkPiBfcmVtb3ZlRnJvbVByZWZzKCkgYXN5bmMgewogICAgYXdhaXQgX3ByZWZzLnJlbW92ZShfZGV2aWNlUHJlZnNLZXkpOwogIH0KfQo=","type":"text"},{"path":"lib/modules/notifications/repositories/notifications_repository.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL21vZGVscy9wYWdlYWJsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9pbml0aWFsaXplci9vbnN0YXJ0X3NlcnZpY2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L2NvcmUvc3RhdGVzL25vdGlmaWNhdGlvbnNfZGlzcGF0Y2hlci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9sb2NhbF9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9ub3RpZmljYXRpb25zX2FwaS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvbm90aWZpY2F0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfbWVzc2FnaW5nL2ZpcmViYXNlX21lc3NhZ2luZy5kYXJ0JyBzaG93IFJlbW90ZU1lc3NhZ2U7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CgphYnN0cmFjdCBjbGFzcyBOb3RpZmljYXRpb25zUmVwb3NpdG9yeSBpbXBsZW1lbnRzIE9uU3RhcnRTZXJ2aWNlIHsKICAvLyB0aGlzIG1ldGhvZCBpcyB1c2VkIHRvIGdldCB0aGUgbm90aWZpY2F0aW9ucyBmcm9tIHRoZSBzZXJ2ZXIKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uPj4gZ2V0KAogICAgU3RyaW5nIHVzZXJJZCwgewogICAgaW50IHBhZ2UgPSAwLAogICAgaW50IHBhZ2VTaXplID0gMjAsCiAgfSk7CgogIC8vIG1hcmsgYSBub3RpZmljYXRpb24gYXMgcmVhZAogIEZ1dHVyZTxOb3RpZmljYXRpb24+IHJlYWQoU3RyaW5nIHVzZXJJZCwgTm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbik7CgogIC8vIGxpc3RlbiB0byB0aGUgdW5yZWFkIG5vdGlmaWNhdGlvbnMgY291bnQKICBTdHJlYW08aW50PiBsaXN0ZW5Ub1VucmVhZE5vdGlmaWNhdGlvbnNDb3VudChTdHJpbmcgdXNlcklkKTsKfQoKZmluYWwgbm90aWZpY2F0aW9uUmVwb3NpdG9yeVByb3ZpZGVyID0gUHJvdmlkZXI8Tm90aWZpY2F0aW9uc1JlcG9zaXRvcnk+KAogIChyZWYpID0+IEFwcE5vdGlmaWNhdGlvbnNSZXBvc2l0b3J5KAogICAgbm90aWZpY2F0aW9uc0FwaTogcmVmLndhdGNoKG5vdGlmaWNhdGlvbnNBcGlQcm92aWRlciksCiAgICBub3RpZmljYXRpb25QdWJsaXNoZXI6IHJlZi53YXRjaChub3RpZmljYXRpb25QdWJsaXNoZXJQcm92aWRlciksCiAgICBsb2NhbE5vdGlmaWVyOiByZWYud2F0Y2gobG9jYWxOb3RpZmllclByb3ZpZGVyKSwKICAgIG5vdGlmaWNhdGlvblNldHRpbmdzOiByZWYud2F0Y2gobm90aWZpY2F0aW9uc1NldHRpbmdzUHJvdmlkZXIpLAogICksCik7CgpjbGFzcyBBcHBOb3RpZmljYXRpb25zUmVwb3NpdG9yeSBpbXBsZW1lbnRzIE5vdGlmaWNhdGlvbnNSZXBvc2l0b3J5IHsKICBmaW5hbCBOb3RpZmljYXRpb25zQXBpIF9ub3RpZmljYXRpb25zQXBpOwogIGZpbmFsIE5vdGlmaWNhdGlvblB1Ymxpc2hlciBfbm90aWZpY2F0aW9uUHVibGlzaGVyOwogIGZpbmFsIExvY2FsTm90aWZpZXIgX2xvY2FsTm90aWZpZXI7CiAgZmluYWwgTm90aWZpY2F0aW9uU2V0dGluZ3MgX25vdGlmaWNhdGlvblNldHRpbmdzOwoKICBBcHBOb3RpZmljYXRpb25zUmVwb3NpdG9yeSh7CiAgICByZXF1aXJlZCBOb3RpZmljYXRpb25zQXBpIG5vdGlmaWNhdGlvbnNBcGksCiAgICByZXF1aXJlZCBOb3RpZmljYXRpb25QdWJsaXNoZXIgbm90aWZpY2F0aW9uUHVibGlzaGVyLAogICAgcmVxdWlyZWQgTG9jYWxOb3RpZmllciBsb2NhbE5vdGlmaWVyLAogICAgcmVxdWlyZWQgTm90aWZpY2F0aW9uU2V0dGluZ3Mgbm90aWZpY2F0aW9uU2V0dGluZ3MsCiAgfSkgIDogX25vdGlmaWNhdGlvbnNBcGkgPSBub3RpZmljYXRpb25zQXBpLAogICAgICAgIF9sb2NhbE5vdGlmaWVyID0gbG9jYWxOb3RpZmllciwKICAgICAgICBfbm90aWZpY2F0aW9uU2V0dGluZ3MgPSBub3RpZmljYXRpb25TZXR0aW5ncywKICAgICAgICBfbm90aWZpY2F0aW9uUHVibGlzaGVyID0gbm90aWZpY2F0aW9uUHVibGlzaGVyOwoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gaW5pdCgpIGFzeW5jIHsKICAgIC8vIHRoaXMgY2FuIGJlIGdyZWF0IHRvIHNhdmUgaWYgdGhlIHVzZXIgaGFzIGdyYW50ZWQgcGVybWlzc2lvbgogICAgLy8gYW5kIHRvIHJlcXVlc3QgcGVybWlzc2lvbiBoaW0gdG8gZ28gdG8gc2V0dGluZ3MgaWYgbm90CiAgICBhd2FpdCBfbm90aWZpY2F0aW9uc0FwaS5yZXF1ZXN0UGVybWlzc2lvbigpOwogICAgX25vdGlmaWNhdGlvbnNBcGkuc2V0Rm9yZWdyb3VuZEhhbmRsZXIoX29uTWVzc2FnZSk7CiAgICAvLyBfbm90aWZpY2F0aW9uc0FwaS5zZXRCYWNrZ3JvdW5kSGFuZGxlcihfb25NZXNzYWdlKTsKICAgIC8vIF9ub3RpZmljYXRpb25zQXBpLnNldE9uT3Blbk5vdGlmaWNhdGlvbkhhbmRsZXIoX29uTWVzc2FnZSk7CiAgICAvLyBfbm90aWZpY2F0aW9uc0FwaS5yZWdpc3RlclRvcGljKCdnZW5lcmFsJyk7CiAgfQoKICBGdXR1cmU8dm9pZD4gX29uTWVzc2FnZShSZW1vdGVNZXNzYWdlIG1lc3NhZ2UpIGFzeW5jIHsKICAgIGlmIChtZXNzYWdlLm5vdGlmaWNhdGlvbiA9PSBudWxsKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGZpbmFsIG5vdGlmaWNhdGlvbiA9IE5vdGlmaWNhdGlvbi5mcm9tKAogICAgICBtZXNzYWdlLm5vdGlmaWNhdGlvbiEudG9NYXAoKSwKICAgICAgbm90aWZpZXJBcGk6IF9sb2NhbE5vdGlmaWVyLAogICAgICBub3RpZmllclNldHRpbmdzOiBfbm90aWZpY2F0aW9uU2V0dGluZ3MsCiAgICApOwogICAgX25vdGlmaWNhdGlvblB1Ymxpc2hlci5wdWJsaXNoKG5vdGlmaWNhdGlvbik7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8UGFnZWFibGU8Tm90aWZpY2F0aW9uPj4gZ2V0KAogICAgU3RyaW5nIHVzZXJJZCwgewogICAgaW50IHBhZ2UgPSAwLAogICAgaW50IHBhZ2VTaXplID0gMjAsCiAgfSkgYXN5bmMgewogICAgZmluYWwgbm90aWZpY2F0aW9uRW50aXRpZXMgPSBhd2FpdCBfbm90aWZpY2F0aW9uc0FwaS5nZXQoCiAgICAgIHVzZXJJZCwKICAgICAgcGFnZSwKICAgICAgcGFnZVNpemUsCiAgICApOwogICAgZmluYWwgbm90aWZpY2F0aW9ucyA9IG5vdGlmaWNhdGlvbkVudGl0aWVzLmRhdGEKICAgICAgICAubWFwKAogICAgICAgICAgKGUpID0+IE5vdGlmaWNhdGlvbi53aXRoRGF0YSgKICAgICAgICAgICAgaWQ6IGUuaWQsCiAgICAgICAgICAgIHRpdGxlOiBlLnRpdGxlLAogICAgICAgICAgICBib2R5OiBlLmJvZHksCiAgICAgICAgICAgIGNyZWF0ZWRBdDogZS5jcmVhdGlvbkRhdGUsCiAgICAgICAgICAgIHJlYWRBdDogZS5yZWFkRGF0ZSwKICAgICAgICAgICAgbm90aWZpZXI6IF9sb2NhbE5vdGlmaWVyLAogICAgICAgICAgICBub3RpZmllclNldHRpbmdzOiBfbm90aWZpY2F0aW9uU2V0dGluZ3MsCiAgICAgICAgICApLAogICAgICAgICkKICAgICAgICAudG9MaXN0KCk7CiAgICByZXR1cm4gUGFnZWFibGU8Tm90aWZpY2F0aW9uPigKICAgICAgZGF0YTogbm90aWZpY2F0aW9ucywKICAgICAgcGFnZTogcGFnZSwKICAgICAgcGFnZVNpemU6IG5vdGlmaWNhdGlvbnMubGVuZ3RoLAogICAgKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTxOb3RpZmljYXRpb24+IHJlYWQoU3RyaW5nIHVzZXJJZCwgTm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbikgYXN5bmMgewogICAgaWYgKG5vdGlmaWNhdGlvbi5pZCA9PSBudWxsKSB7CiAgICAgIHRocm93IEV4Y2VwdGlvbignQSBub3RpZmljYXRpb24gd2l0aG91dCBpZCBjYW5ub3QgYmUgcmVhZCcpOwogICAgfQogICAgYXdhaXQgX25vdGlmaWNhdGlvbnNBcGkucmVhZCh1c2VySWQsIG5vdGlmaWNhdGlvbi5pZCEpOwogICAgcmV0dXJuIG5vdGlmaWNhdGlvbi5jb3B5V2l0aChyZWFkQXQ6IERhdGVUaW1lLm5vdygpKTsKICB9CgogIEBvdmVycmlkZQogIFN0cmVhbTxpbnQ+IGxpc3RlblRvVW5yZWFkTm90aWZpY2F0aW9uc0NvdW50KFN0cmluZyB1c2VySWQpIHsKICAgIHJldHVybiBfbm90aWZpY2F0aW9uc0FwaS51bnJlYWROb3RpZmljYXRpb25zKHVzZXJJZCk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/ui/components/notification_tile.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvbm90aWZpY2F0aW9uLmRhcnQnCiAgICBhcyBhcHA7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy91aS93aWRnZXRzL25vdGlmaWNhdGlvbl90aWxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfYW5pbWF0ZS9mbHV0dGVyX2FuaW1hdGUuZGFydCc7CgpjbGFzcyBOb3RpZmljYXRpb25UaWxlQ29tcG9uZW50IGV4dGVuZHMgU3RhdGVsZXNzV2lkZ2V0IHsKICBmaW5hbCBhcHAuTm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbjsKICBmaW5hbCBpbnQgaW5kZXg7CgogIGNvbnN0IE5vdGlmaWNhdGlvblRpbGVDb21wb25lbnQoewogICAgc3VwZXIua2V5LAogICAgcmVxdWlyZWQgdGhpcy5ub3RpZmljYXRpb24sCiAgICByZXF1aXJlZCB0aGlzLmluZGV4LAogIH0pOwoKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKICAgIHJldHVybiBBbmltYXRlKAogICAgICBlZmZlY3RzOiBjb25zdCBbCiAgICAgICAgRmFkZUVmZmVjdCgKICAgICAgICAgIGR1cmF0aW9uOiBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDIwMCksCiAgICAgICAgKSwKICAgICAgICBTY2FsZUVmZmVjdCgKICAgICAgICAgIGR1cmF0aW9uOiBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDIwMCksCiAgICAgICAgICBiZWdpbjogT2Zmc2V0KDEuMiwgMS4yKSwKICAgICAgICApLAogICAgICAgIE1vdmVFZmZlY3QoCiAgICAgICAgICBkdXJhdGlvbjogRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxNTApLAogICAgICAgICAgYmVnaW46IE9mZnNldCgwLCAtNTApLAogICAgICAgICksCiAgICAgIF0sCiAgICAgIGRlbGF5OiBpbmRleCA8IDYgPyBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDEwMCAqIGluZGV4KSA6IER1cmF0aW9uLnplcm8sCiAgICAgIG9uQ29tcGxldGU6IChjb250cm9sbGVyKSA9PiBjb250cm9sbGVyLnN0b3AoKSwKICAgICAgY2hpbGQ6IE5vdGlmaWNhdGlvblRpbGUuZnJvbSgKICAgICAgICBrZXk6IFZhbHVlS2V5KCJub3RpZmljYXRpb25fJHtub3RpZmljYXRpb24uaWR9IiksCiAgICAgICAgbm90aWZpY2F0aW9uLAogICAgICApLAogICAgKTsKICB9Cn0K","type":"text"},{"path":"lib/modules/notifications/ui/components/notifications_header.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3JpdmVycG9kL2ZsdXR0ZXJfcml2ZXJwb2QuZGFydCc7CgpjbGFzcyBOb3RpZmljYXRpb25zSGVhZGVyIGV4dGVuZHMgQ29uc3VtZXJXaWRnZXQgewogIGZpbmFsIGRvdWJsZT8gcGFkZGluZ0hlaWdodDsKCiAgY29uc3QgTm90aWZpY2F0aW9uc0hlYWRlcih7CiAgICBzdXBlci5rZXksCiAgICB0aGlzLnBhZGRpbmdIZWlnaHQsCiAgfSk7CgogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgV2lkZ2V0UmVmIHJlZikgewogICAgcmV0dXJuIFBhZGRpbmcoCiAgICAgIHBhZGRpbmc6IEVkZ2VJbnNldHMuZnJvbUxUUkIoMjQsIHBhZGRpbmdIZWlnaHQgPz8gMTIsIDI0LCAxNiksCiAgICAgIGNoaWxkOiBSb3coCiAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgIFRleHQoCiAgICAgICAgICAgICJOb3RpZmljYXRpb25zIiwKICAgICAgICAgICAgc3R5bGU6IFRoZW1lLm9mKGNvbnRleHQpLnRleHRUaGVtZS5oZWFkbGluZU1lZGl1bSEuY29weVdpdGgoCiAgICAgICAgICAgICAgICAgIGNvbG9yOiBUaGVtZS5vZihjb250ZXh0KS5jb2xvclNjaGVtZS5vbkJhY2tncm91bmQsCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgKSwKICAgICAgICBdLAogICAgICApLAogICAgKTsKICB9Cn0K","type":"text"},{"path":"lib/modules/notifications/ui/notifications_page.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS93aWRnZXRzL3BhZ2VfYmFja2dyb3VuZC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9ub3RpZmljYXRpb25zX3Byb3ZpZGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvdWkvY29tcG9uZW50cy9ub3RpZmljYXRpb25fdGlsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3VpL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uc19oZWFkZXIuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy91aS93aWRnZXRzL2VtcHR5X25vdGlmaWNhdGlvbnMuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy91aS93aWRnZXRzL25vdGlmaWNhdGlvbl90aWxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvcmVuZGVyaW5nLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlcl9yaXZlcnBvZC9mbHV0dGVyX3JpdmVycG9kLmRhcnQnOwoKY2xhc3MgTm90aWZpY2F0aW9uc1BhZ2UgZXh0ZW5kcyBDb25zdW1lclN0YXRlZnVsV2lkZ2V0IHsKICBAb3ZlcnJpZGUKICBDb25zdW1lclN0YXRlPE5vdGlmaWNhdGlvbnNQYWdlPiBjcmVhdGVTdGF0ZSgpID0+IF9Ob3RpZmljYXRpb25zUGFnZVN0YXRlKCk7Cn0KCmNsYXNzIF9Ob3RpZmljYXRpb25zUGFnZVN0YXRlIGV4dGVuZHMgQ29uc3VtZXJTdGF0ZTxOb3RpZmljYXRpb25zUGFnZT4gewogIGZpbmFsIFNjcm9sbENvbnRyb2xsZXIgX3Njcm9sbENvbnRyb2xsZXIgPSBTY3JvbGxDb250cm9sbGVyKCk7CgogIEBvdmVycmlkZQogIHZvaWQgaW5pdFN0YXRlKCkgewogICAgc3VwZXIuaW5pdFN0YXRlKCk7CiAgICBfc2Nyb2xsQ29udHJvbGxlci5hZGRMaXN0ZW5lcihfb25TY3JvbGxDaGFuZ2UpOwogICAgcmVxdWVzdFJlYWRBbGwoKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgZGlzcG9zZSgpIHsKICAgIF9zY3JvbGxDb250cm9sbGVyLnJlbW92ZUxpc3RlbmVyKF9vblNjcm9sbENoYW5nZSk7CiAgICBzdXBlci5kaXNwb3NlKCk7CiAgfQoKICB2b2lkIF9vblNjcm9sbENoYW5nZSgpIHsKICAgIGZpbmFsIGRpcmVjdGlvbiA9IF9zY3JvbGxDb250cm9sbGVyLnBvc2l0aW9uLnVzZXJTY3JvbGxEaXJlY3Rpb247CiAgICBmaW5hbCBpc1Njcm9sbGluZ0Rvd24gPSBkaXJlY3Rpb24gPT0gU2Nyb2xsRGlyZWN0aW9uLnJldmVyc2U7CiAgICBmaW5hbCBpc1RyaWdnZXJlZCA9IF9zY3JvbGxDb250cm9sbGVyLnBvc2l0aW9uLnBpeGVscyA+PQogICAgICAgIF9zY3JvbGxDb250cm9sbGVyLnBvc2l0aW9uLm1heFNjcm9sbEV4dGVudCAtIDEwMDsKCiAgICBpZiAoaXNTY3JvbGxpbmdEb3duICYmIGlzVHJpZ2dlcmVkKSB7CiAgICAgIHJlZi5yZWFkKG5vdGlmaWNhdGlvbnNQYWdlU3RhdGVQcm92aWRlci5ub3RpZmllcikuZmV0Y2hOZXh0UGFnZSgpOwogICAgfQogIH0KCiAgdm9pZCByZXF1ZXN0UmVhZEFsbCgpIHsKICAgIEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKHNlY29uZHM6IDMpLCAoKSB7CiAgICAgIGlmICghcmVmLmNvbnRleHQubW91bnRlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICByZWYucmVhZChub3RpZmljYXRpb25zUGFnZVN0YXRlUHJvdmlkZXIubm90aWZpZXIpLnJlYWRBbGwoKTsKICAgIH0pOwogIH0KCiAgQG92ZXJyaWRlCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7CiAgICBmaW5hbCBub3RpZmljYXRpb25zU3RhdGUgPSByZWYud2F0Y2gobm90aWZpY2F0aW9uc1BhZ2VTdGF0ZVByb3ZpZGVyKTsKICAgIHJldHVybiBCYWNrZ3JvdW5kKAogICAgICBjaGlsZDogU2FmZUFyZWEoCiAgICAgICAgY2hpbGQ6IFJlZnJlc2hJbmRpY2F0b3IuYWRhcHRpdmUoCiAgICAgICAgICBkaXNwbGFjZW1lbnQ6IDEwMCwKICAgICAgICAgIG9uUmVmcmVzaDogKCkgYXN5bmMgewogICAgICAgICAgICByZWYucmVhZChub3RpZmljYXRpb25zUGFnZVN0YXRlUHJvdmlkZXIubm90aWZpZXIpLnJlZnJlc2goKTsKICAgICAgICAgICAgcmVxdWVzdFJlYWRBbGwoKTsKICAgICAgICAgIH0sCiAgICAgICAgICBjaGlsZDogQ3VzdG9tU2Nyb2xsVmlldygKICAgICAgICAgICAgY29udHJvbGxlcjogX3Njcm9sbENvbnRyb2xsZXIsCiAgICAgICAgICAgIHNsaXZlcnM6IFsKICAgICAgICAgICAgICBjb25zdCBTbGl2ZXJBcHBCYXIoCiAgICAgICAgICAgICAgICBhdXRvbWF0aWNhbGx5SW1wbHlMZWFkaW5nOiBmYWxzZSwKICAgICAgICAgICAgICAgIHRvb2xiYXJIZWlnaHQ6IDgwLAogICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBDb2xvcnMudHJhbnNwYXJlbnQsCiAgICAgICAgICAgICAgICBmbGV4aWJsZVNwYWNlOiBGbGV4aWJsZVNwYWNlQmFyKAogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBOb3RpZmljYXRpb25zSGVhZGVyKAogICAgICAgICAgICAgICAgICAgIHBhZGRpbmdIZWlnaHQ6IDMyLAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAvLyBjb2xsYXBzZU1vZGU6IENvbGxhcHNlTW9kZS5wYXJhbGxheCwgPC0gdGhpcyBpcyB0aGUgZGVmYXVsdAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIFNsaXZlclBhZGRpbmcoCiAgICAgICAgICAgICAgICBwYWRkaW5nOiBjb25zdCBFZGdlSW5zZXRzLnN5bW1ldHJpYyhob3Jpem9udGFsOiAxNi4wKSwKICAgICAgICAgICAgICAgIHNsaXZlcjogbm90aWZpY2F0aW9uc1N0YXRlLndoZW4oCiAgICAgICAgICAgICAgICAgIGxvYWRpbmc6ICgpID0+IFNsaXZlckxpc3QoCiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdGU6IFNsaXZlckNoaWxkQnVpbGRlckRlbGVnYXRlKAogICAgICAgICAgICAgICAgICAgICAgKGNvbnRleHQsIGluZGV4KSA9PiBjb25zdCBOb3RpZmljYXRpb25Ta2VsZXRvblRpbGUoKSwKICAgICAgICAgICAgICAgICAgICAgIGNoaWxkQ291bnQ6IDUsCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgZGF0YTogKG5vdGlmaWNhdGlvbikgPT4gbm90aWZpY2F0aW9uLmRhdGEuaXNOb3RFbXB0eQogICAgICAgICAgICAgICAgICAgICAgPyBTbGl2ZXJMaXN0KAogICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGVnYXRlOiBTbGl2ZXJDaGlsZEJ1aWxkZXJEZWxlZ2F0ZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjb250ZXh0LCBpbmRleCkgPT4gTm90aWZpY2F0aW9uVGlsZUNvbXBvbmVudCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uOiBub3RpZmljYXRpb24uZGF0YVtpbmRleF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiBpbmRleCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZENvdW50OiBub3RpZmljYXRpb24uZGF0YS5sZW5ndGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgOiBTbGl2ZXJUb0JveEFkYXB0ZXIoCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IEVtcHR5Tm90aWZpY2F0aW9ucygpLAogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBlcnJvcjogKGVyciwgc3RhY2t0cmFjZSkgPT4gU2xpdmVyVG9Cb3hBZGFwdGVyKAogICAgICAgICAgICAgICAgICAgIGNoaWxkOiBDZW50ZXIoCiAgICAgICAgICAgICAgICAgICAgICBjaGlsZDogVGV4dCgKICAgICAgICAgICAgICAgICAgICAgICAgJ0Vycm9yIGZldGNoaW5nIG5vdGlmaWNhdGlvbnMnLAogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogVGhlbWUub2YoY29udGV4dCkudGV4dFRoZW1lLmJvZHlNZWRpdW0hLmNvcHlXaXRoKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogVGhlbWUub2YoY29udGV4dCkuY29sb3JTY2hlbWUuZXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgKSwKICAgICAgICApLAogICAgICApLAogICAgKTsKICB9Cn0K","type":"text"},{"path":"lib/modules/notifications/ui/widgets/empty_notifications.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CgpjbGFzcyBFbXB0eU5vdGlmaWNhdGlvbnMgZXh0ZW5kcyBTdGF0ZWxlc3NXaWRnZXQgewogIEBvdmVycmlkZQogIFdpZGdldCBidWlsZChCdWlsZENvbnRleHQgY29udGV4dCkgewogICAgcmV0dXJuIENvbHVtbigKICAgICAgbWFpbkF4aXNBbGlnbm1lbnQ6IE1haW5BeGlzQWxpZ25tZW50LmNlbnRlciwKICAgICAgY2hpbGRyZW46IFsKICAgICAgICBjb25zdCBTaXplZEJveChoZWlnaHQ6IDcyKSwKICAgICAgICBTaXplZEJveCgKICAgICAgICAgIHdpZHRoOiAyNTAsCiAgICAgICAgICBoZWlnaHQ6IDI1MCwKICAgICAgICAgIGNoaWxkOiBJbWFnZS5hc3NldCgnYXNzZXRzL2ltYWdlcy9lbXB0eV9ub3RpZmljYXRpb25zLmpwZycpLAogICAgICAgICksCiAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiAxNiksCiAgICAgICAgVGV4dCgKICAgICAgICAgICdObyBub3RpZmljYXRpb25zIHlldCcsCiAgICAgICAgICBzdHlsZTogVGV4dFN0eWxlKAogICAgICAgICAgICBmb250U2l6ZTogMTgsCiAgICAgICAgICAgIGZvbnRXZWlnaHQ6IEZvbnRXZWlnaHQuYm9sZCwKICAgICAgICAgICAgY29sb3I6IENvbG9ycy5ncmV5WzQwMF0sCiAgICAgICAgICApLAogICAgICAgICksCiAgICAgICAgY29uc3QgU2l6ZWRCb3goaGVpZ2h0OiA4KSwKICAgICAgICBUZXh0KAogICAgICAgICAgJ1N0YXkgdHVuZWQgZm9yIHVwZGF0ZXMnLAogICAgICAgICAgc3R5bGU6IFRleHRTdHlsZSgKICAgICAgICAgICAgZm9udFNpemU6IDE2LAogICAgICAgICAgICBjb2xvcjogQ29sb3JzLmdyZXlbNDAwXSwKICAgICAgICAgICksCiAgICAgICAgKSwKICAgICAgXSwKICAgICk7CiAgfQp9Cg==","type":"text"},{"path":"lib/modules/notifications/ui/widgets/notification_tile.dart","data":"","type":"text"},{"path":"test/modules/notifications/data/device_api_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9kZXZpY2VfYXBpLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvYXBpL2VudGl0aWVzL2RldmljZV9lbnRpdHkuZGFydCc7CgpjbGFzcyBGYWtlRGV2aWNlQXBpIGltcGxlbWVudHMgRGV2aWNlQXBpIHsKICBPblRva2VuUmVmcmVzaD8gcmVmcmVzaFRva2VuQ2FsbGJhY2s7CgogIEBvdmVycmlkZQogIEZ1dHVyZTxEZXZpY2VFbnRpdHk+IHJlZ2lzdGVyKFN0cmluZyB1c2VySWQsIERldmljZUVudGl0eSBkZXZpY2UpIGFzeW5jIHsKICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTAwKSk7CiAgICByZXR1cm4gRnV0dXJlLnZhbHVlKGRldmljZS5jb3B5V2l0aChpZDogJ2Zha2VfaWQnKSk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gdW5yZWdpc3RlcihTdHJpbmcgdXNlcklkLCBTdHJpbmcgZGV2aWNlSWQpIGFzeW5jIHsKICAgIGF3YWl0IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKG1pbGxpc2Vjb25kczogMTAwKSk7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiBnZXQoKSB7CiAgICByZXR1cm4gRnV0dXJlLnZhbHVlKAogICAgICBEZXZpY2VFbnRpdHkoCiAgICAgICAgaW5zdGFsbGF0aW9uSWQ6ICdmYWtlX2luc3RhbGxhdGlvbl9pZCcsCiAgICAgICAgdG9rZW46ICdmYWtlX3Rva2VuJywKICAgICAgICBvcGVyYXRpbmdTeXN0ZW06IE9wZXJhdGluZ1N5c3RlbS5hbmRyb2lkLAogICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUubm93KCksCiAgICAgICAgbGFzdFVwZGF0ZURhdGU6IERhdGVUaW1lLm5vdygpLAogICAgICApLAogICAgKTsKICB9CgogIEBvdmVycmlkZQogIHZvaWQgb25Ub2tlblJlZnJlc2goT25Ub2tlblJlZnJlc2ggb25Ub2tlblJlZnJlc2gpIHsKICAgIHJlZnJlc2hUb2tlbkNhbGxiYWNrID0gb25Ub2tlblJlZnJlc2g7CiAgfQoKICBAb3ZlcnJpZGUKICBGdXR1cmU8RGV2aWNlRW50aXR5PiB1cGRhdGUoRGV2aWNlRW50aXR5IGRldmljZSkgewogICAgcmV0dXJuIEZ1dHVyZS52YWx1ZShkZXZpY2UuY29weVdpdGgobGFzdFVwZGF0ZURhdGU6IERhdGVUaW1lLm5vdygpKSk7CiAgfQoKICBAb3ZlcnJpZGUKICB2b2lkIHJlbW92ZU9uVG9rZW5SZWZyZXNoTGlzdGVuZXIoKSB7CiAgICByZWZyZXNoVG9rZW5DYWxsYmFjayA9IG51bGw7CiAgfQp9Cg==","type":"text"},{"path":"test/modules/notifications/data/local_notifier_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9sb2NhbF9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvbm90aWZpY2F0aW9uLmRhcnQnOwoKY2xhc3MgRmFrZUxvY2FsTm90aWZpZXJBcGkgaW1wbGVtZW50cyBMb2NhbE5vdGlmaWVyIHsKICBAb3ZlcnJpZGUKICBGdXR1cmU8dm9pZD4gc2hvdyhOb3RpZmljYXRpb25TZXR0aW5ncyBzZXR0aW5ncywgTm90aWZpY2F0aW9uIG1lc3NhZ2UpIHsKICAgIHJldHVybiBGdXR1cmUudmFsdWUoKTsKICB9Cn0K","type":"text"},{"path":"test/modules/notifications/data/notifications_api_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL21vZGVscy9wYWdlYWJsZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9lbnRpdGllcy9ub3RpZmljYXRpb25zX2VudGl0eS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9ub3RpZmljYXRpb25zX2FwaS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZpcmViYXNlX21lc3NhZ2luZy9maXJlYmFzZV9tZXNzYWdpbmcuZGFydCc7CgpjbGFzcyBGYWtlTm90aWZpY2F0aW9uc0FwaSBpbXBsZW1lbnRzIE5vdGlmaWNhdGlvbnNBcGkgewogIE9uUmVtb3RlTWVzc2FnZT8gX2JhY2tncm91bmRIYW5kbGVyOwogIE9uUmVtb3RlTWVzc2FnZT8gX2ZvcmVncm91bmRIYW5kbGVyOwogIE9uUmVtb3RlTWVzc2FnZT8gX29uT3Blbk5vdGlmaWNhdGlvbkhhbmRsZXI7CiAgZmluYWwgTGlzdDxTdHJpbmc+IF90b3BpY3MgPSBbXTsKCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHJlcXVlc3RQZXJtaXNzaW9uKCkgPT4gRnV0dXJlLnZhbHVlKCk7CgogIEBvdmVycmlkZQogIHZvaWQgc2V0QmFja2dyb3VuZEhhbmRsZXIoT25SZW1vdGVNZXNzYWdlIGhhbmRsZXIpIHsKICAgIF9iYWNrZ3JvdW5kSGFuZGxlciA9IGhhbmRsZXI7CiAgfQoKICBAb3ZlcnJpZGUKICB2b2lkIHNldEZvcmVncm91bmRIYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBfZm9yZWdyb3VuZEhhbmRsZXIgPSBoYW5kbGVyOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCBzZXRPbk9wZW5Ob3RpZmljYXRpb25IYW5kbGVyKE9uUmVtb3RlTWVzc2FnZSBoYW5kbGVyKSB7CiAgICBfb25PcGVuTm90aWZpY2F0aW9uSGFuZGxlciA9IGhhbmRsZXI7CiAgfQoKICB2b2lkIHNlbmRCYWNrZ3JvdW5kTWVzc2FnZShSZW1vdGVNZXNzYWdlIG1lc3NhZ2UpIHsKICAgIF9iYWNrZ3JvdW5kSGFuZGxlcj8uY2FsbChtZXNzYWdlKTsKICB9CgogIHZvaWQgc2VuZEZvcmVncm91bmRNZXNzYWdlKFJlbW90ZU1lc3NhZ2UgbWVzc2FnZSkgewogICAgX2ZvcmVncm91bmRIYW5kbGVyPy5jYWxsKG1lc3NhZ2UpOwogIH0KCiAgdm9pZCBzZW5kT25PcGVuTm90aWZpY2F0aW9uTWVzc2FnZShSZW1vdGVNZXNzYWdlIG1lc3NhZ2UpIHsKICAgIF9vbk9wZW5Ob3RpZmljYXRpb25IYW5kbGVyPy5jYWxsKG1lc3NhZ2UpOwogIH0KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPFBhZ2VhYmxlPE5vdGlmaWNhdGlvbkVudGl0eT4+IGdldCgKICAgIFN0cmluZyB1c2VySWQsCiAgICBpbnQgcGFnZSwKICAgIGludCBwYWdlU2l6ZSwKICApIHsKICAgIHJldHVybiBGdXR1cmUudmFsdWUoCiAgICAgIFBhZ2VhYmxlKAogICAgICAgIGRhdGE6IExpc3QuZ2VuZXJhdGUoCiAgICAgICAgICAyMCwKICAgICAgICAgIChpbmRleCkgPT4gTm90aWZpY2F0aW9uRW50aXR5KAogICAgICAgICAgICBpZDogJyR7cGFnZX1fJGluZGV4JywKICAgICAgICAgICAgdGl0bGU6ICd0aXRsZSAkaW5kZXgnLAogICAgICAgICAgICBib2R5OiAnYm9keSAkaW5kZXgnLAogICAgICAgICAgICBjcmVhdGlvbkRhdGU6IERhdGVUaW1lLm5vdygpLAogICAgICAgICAgICByZWFkRGF0ZTogaW5kZXggPiAyID8gRGF0ZVRpbWUubm93KCkgOiBudWxsLAogICAgICAgICAgKSwKICAgICAgICApLAogICAgICAgIHBhZ2U6IHBhZ2UsCiAgICAgICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgICApLAogICAgKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiByZWFkKFN0cmluZyB1c2VySWQsIFN0cmluZyBub3RpZmljYXRpb25JZCkgewogICAgcmV0dXJuIEZ1dHVyZS52YWx1ZSgpOwogIH0KCiAgQG92ZXJyaWRlCiAgU3RyZWFtPGludD4gdW5yZWFkTm90aWZpY2F0aW9ucyhTdHJpbmcgdXNlcklkKSB7CiAgICByZXR1cm4gU3RyZWFtLnZhbHVlKDEpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCByZWdpc3RlclRvcGljKFN0cmluZyB0b3BpYykgewogICAgX3RvcGljcy5hZGQodG9waWMpOwogIH0KCiAgQG92ZXJyaWRlCiAgdm9pZCB1bnJlZ2lzdGVyVG9waWMoU3RyaW5nIHRvcGljKSB7CiAgICBfdG9waWNzLnJlbW92ZSh0b3BpYyk7CiAgfQp9Cg==","type":"text"},{"path":"test/modules/notifications/data/notifications_settings_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9sb2NhbF9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfbG9jYWxfbm90aWZpY2F0aW9ucy9mbHV0dGVyX2xvY2FsX25vdGlmaWNhdGlvbnMuZGFydCc7CgpjbGFzcyBOb3RpZmljYXRpb25zU2V0dGluZ3NGYWtlIGltcGxlbWVudHMgTm90aWZpY2F0aW9uU2V0dGluZ3MgewogIEBvdmVycmlkZQogIEFuZHJvaWROb3RpZmljYXRpb25DaGFubmVsIGdldCBhbmRyb2lkQ2hhbm5lbCA9PgogICAgICBjb25zdCBBbmRyb2lkTm90aWZpY2F0aW9uQ2hhbm5lbCgKICAgICAgICAvLyBjaGFubmVsIGlkIC0geW91IGNhbiB1c2UgZGlmZmVyZW50IGNoYW5uZWxzIGZvciBkaWZmZXJlbnQgcHVycG9zZXMgKE5ld3MsIE1lc3NhZ2VzLCBldGMpCiAgICAgICAgJ1lvdXJBcHAnLAogICAgICAgIC8vIGFwcCBpZAogICAgICAgICdZb3VyQXBwJywKICAgICAgICAvLyB0aGlzIGlzIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgY2hhbm5lbCB0aGF0IHdpbGwgYmUgc2hvd24gaW4gdGhlIEFuZHJvaWQgbm90aWZpY2F0aW9uIHNldHRpbmdzCiAgICAgICAgZGVzY3JpcHRpb246ICdnZW5lcmFsIFlvdXJBcHAgY2hhbm5lbCcsCiAgICAgICAgaW1wb3J0YW5jZTogSW1wb3J0YW5jZS5tYXgsCiAgICAgICk7CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiBpbml0KCkgYXN5bmMge30KCiAgQG92ZXJyaWRlCiAgRnV0dXJlPHZvaWQ+IHJlZGlyZWN0VG9QYXlsb2FkKE5vdGlmaWNhdGlvblJlc3BvbnNlIG5vdGlmaWNhdGlvblJlc3BvbnNlKSB7CiAgICB0aHJvdyBVbmltcGxlbWVudGVkRXJyb3IoKTsKICB9Cn0K","type":"text"},{"path":"test/modules/notifications/providers/device_repository_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3JlcG9zaXRvcmllcy9kZXZpY2VfcmVwb3NpdG9yeS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfdGVzdC9mbHV0dGVyX3Rlc3QuZGFydCc7CmltcG9ydCAncGFja2FnZTpzaGFyZWRfcHJlZmVyZW5jZXMvc2hhcmVkX3ByZWZlcmVuY2VzLmRhcnQnOwoKaW1wb3J0ICcuLi9kYXRhL2RldmljZV9hcGlfZmFrZS5kYXJ0JzsKCnZvaWQgbWFpbigpIHsKICBmaW5hbCBmYWtlRGV2aWNlQXBpID0gRmFrZURldmljZUFwaSgpOwoKICBGdXR1cmU8RGV2aWNlUmVwb3NpdG9yeT4gaW5pdCgpIGFzeW5jIHsKICAgIFNoYXJlZFByZWZlcmVuY2VzLnNldE1vY2tJbml0aWFsVmFsdWVzKHt9KTsKICAgIGZpbmFsIHNoYXJlZFByZWZzID0gYXdhaXQgU2hhcmVkUHJlZmVyZW5jZXMuZ2V0SW5zdGFuY2UoKTsKICAgIHJldHVybiBEZXZpY2VSZXBvc2l0b3J5KAogICAgICBkZXZpY2VBcGk6IGZha2VEZXZpY2VBcGksCiAgICAgIHByZWZzOiBzaGFyZWRQcmVmcywKICAgICk7CiAgfQoKICB0ZXN0KAogICAgJ3JlZ2lzdGVyIGRldmljZSBzaG91bGQgcmVnaXN0ZXIgYSBuZXcgZGV2aWNlIHdpdGggYW4gaWQnLAogICAgKCkgYXN5bmMgewogICAgICBmaW5hbCBkZXZpY2VSZXBvc2l0b3J5ID0gYXdhaXQgaW5pdCgpOwogICAgICBhd2FpdCBkZXZpY2VSZXBvc2l0b3J5LnJlZ2lzdGVyKCdmYWtlX3VzZXJfaWQnKTsKICAgICAgZmluYWwgZGV2aWNlID0gYXdhaXQgZGV2aWNlUmVwb3NpdG9yeS5nZXQoKTsKICAgICAgZXhwZWN0KGRldmljZSwgaXNOb3ROdWxsKTsKICAgICAgZXhwZWN0KGRldmljZSEuaWQsIGlzTm90TnVsbCk7CiAgICB9LAogICk7CgogIHRlc3QoCiAgICAncmVnaXN0ZXIgZGV2aWNlLCB0aGVuIHVucmVnaXN0ZXIgc2hvdWxkIHJlbW92ZSB0aGUgZGV2aWNlJywKICAgICgpIGFzeW5jIHsKICAgICAgZmluYWwgZGV2aWNlUmVwb3NpdG9yeSA9IGF3YWl0IGluaXQoKTsKICAgICAgYXdhaXQgZGV2aWNlUmVwb3NpdG9yeS5yZWdpc3RlcignZmFrZV91c2VyX2lkJyk7CiAgICAgIGF3YWl0IGRldmljZVJlcG9zaXRvcnkudW5yZWdpc3RlcignZmFrZV91c2VyX2lkJyk7CiAgICAgIGZpbmFsIGRldmljZSA9IGF3YWl0IGRldmljZVJlcG9zaXRvcnkuZ2V0KCk7CiAgICAgIGV4cGVjdChkZXZpY2UsIGlzTnVsbCk7CiAgICB9LAogICk7CgogIHRlc3QoCiAgICAnb24gdG9rZW4gcmVmcmVzaCwgc2hvdWxkIHVwZGF0ZSB0aGUgZGV2aWNlJywKICAgICgpIGFzeW5jIHsKICAgICAgZmluYWwgZGV2aWNlUmVwb3NpdG9yeSA9IGF3YWl0IGluaXQoKTsKICAgICAgYXdhaXQgZGV2aWNlUmVwb3NpdG9yeS5yZWdpc3RlcignZmFrZV91c2VyX2lkJyk7CiAgICAgIGRldmljZVJlcG9zaXRvcnkub25Ub2tlblVwZGF0ZSgKICAgICAgICAoZGV2aWNlKSA9PiBkZXZpY2VSZXBvc2l0b3J5LnVwZGF0ZVRva2VuKGRldmljZS50b2tlbiksCiAgICAgICk7CiAgICAgIGV4cGVjdChmYWtlRGV2aWNlQXBpLnJlZnJlc2hUb2tlbkNhbGxiYWNrLCBpc05vdE51bGwpOwogICAgICBmYWtlRGV2aWNlQXBpLnJlZnJlc2hUb2tlbkNhbGxiYWNrISgidXBkYXRlZF90b2tlbiIpOwogICAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihtaWxsaXNlY29uZHM6IDEwMCkpOwogICAgICBmaW5hbCB1cGRhdGVkRGV2aWNlID0gYXdhaXQgZGV2aWNlUmVwb3NpdG9yeS5nZXQoKTsKICAgICAgZXhwZWN0KHVwZGF0ZWREZXZpY2UhLnRva2VuLCAndXBkYXRlZF90b2tlbicpOwogICAgfSwKICApOwoKICB0ZXN0KAogICAgJ3Nob3VsZCB1cGRhdGUgdG9rZW4gY29ycmVjdGx5JywKICAgICgpIGFzeW5jIHsKICAgICAgZmluYWwgZGV2aWNlUmVwb3NpdG9yeSA9IGF3YWl0IGluaXQoKTsKICAgICAgYXdhaXQgZGV2aWNlUmVwb3NpdG9yeS5yZWdpc3RlcignZmFrZV91c2VyX2lkJyk7CiAgICAgIGF3YWl0IGRldmljZVJlcG9zaXRvcnkudXBkYXRlVG9rZW4oJ3VwZGF0ZWRfdG9rZW4nKTsKICAgICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxMDApKTsKICAgICAgZmluYWwgdXBkYXRlZERldmljZSA9IGF3YWl0IGRldmljZVJlcG9zaXRvcnkuZ2V0KCk7CiAgICAgIGV4cGVjdCh1cGRhdGVkRGV2aWNlIS50b2tlbiwgJ3VwZGF0ZWRfdG9rZW4nKTsKICAgIH0sCiAgKTsKfQo=","type":"text"},{"path":"test/modules/notifications/providers/notifications_repository_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9zdGF0ZXMvbm90aWZpY2F0aW9uc19kaXNwYXRjaGVyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL25vdGlmaWNhdGlvbnMvcHJvdmlkZXJzL21vZGVscy9ub3RpZmljYXRpb24uZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy9yZXBvc2l0b3JpZXMvbm90aWZpY2F0aW9uc19yZXBvc2l0b3J5LmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6ZmlyZWJhc2VfbWVzc2FnaW5nL2ZpcmViYXNlX21lc3NhZ2luZy5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfdGVzdC9mbHV0dGVyX3Rlc3QuZGFydCc7CgppbXBvcnQgJy4uL2RhdGEvbG9jYWxfbm90aWZpZXJfZmFrZS5kYXJ0JzsKaW1wb3J0ICcuLi9kYXRhL25vdGlmaWNhdGlvbnNfYXBpX2Zha2UuZGFydCc7CmltcG9ydCAnLi4vZGF0YS9ub3RpZmljYXRpb25zX3NldHRpbmdzX2Zha2UuZGFydCc7Cgp2b2lkIG1haW4oKSB7CiAgZmluYWwgZGlzcGF0Y2hlciA9IE5vdGlmaWNhdGlvbkRpc3BhdGNoZXIoKTsKICBmaW5hbCBmYWtlTm90aWZpY2F0aW9uc0FwaSA9IEZha2VOb3RpZmljYXRpb25zQXBpKCk7CiAgZmluYWwgZmFrZUxvY2FsTm90aWZpY2F0aW9uc0FwaSA9IEZha2VMb2NhbE5vdGlmaWVyQXBpKCk7CiAgZmluYWwgZmFrZU5vdGlmaWNhdGlvbnNTZXR0aW5ncyA9IE5vdGlmaWNhdGlvbnNTZXR0aW5nc0Zha2UoKTsKCiAgZmluYWwgcmVwb3NpdG9yeSA9IEFwcE5vdGlmaWNhdGlvbnNSZXBvc2l0b3J5KAogICAgbm90aWZpY2F0aW9uc0FwaTogZmFrZU5vdGlmaWNhdGlvbnNBcGksCiAgICBub3RpZmljYXRpb25QdWJsaXNoZXI6IGRpc3BhdGNoZXIsCiAgICBsb2NhbE5vdGlmaWVyOiBmYWtlTG9jYWxOb3RpZmljYXRpb25zQXBpLAogICAgbm90aWZpY2F0aW9uU2V0dGluZ3M6IGZha2VOb3RpZmljYXRpb25zU2V0dGluZ3MsCiAgKTsKCiAgdGVzdCgnb24gcmVjZWl2ZSBtZXNzYWdlLCBzaG91bGQgZGlzcGF0Y2ggYXMgYSBub3RpZmljYXRpb24nLCAoKSBhc3luYyB7CiAgICBhd2FpdCByZXBvc2l0b3J5LmluaXQoKTsKCiAgICBOb3RpZmljYXRpb24/IHJlY2VpdmVkTm90aWZpY2F0aW9uOwogICAgZGlzcGF0Y2hlci5zdWJzY3JpYmUoKG5vdGlmaWNhdGlvbikgPT4gcmVjZWl2ZWROb3RpZmljYXRpb24gPSBub3RpZmljYXRpb24pOwogICAgZmFrZU5vdGlmaWNhdGlvbnNBcGkuc2VuZEZvcmVncm91bmRNZXNzYWdlKAogICAgICBjb25zdCBSZW1vdGVNZXNzYWdlKAogICAgICAgIG5vdGlmaWNhdGlvbjogUmVtb3RlTm90aWZpY2F0aW9uKAogICAgICAgICAgdGl0bGU6ICd0aXRsZScsCiAgICAgICAgICBib2R5OiAnZXhhbXBsZSBib2R5JywKICAgICAgICApLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgICd0eXBlJzogJ215IHR5cGUnLAogICAgICAgIH0sCiAgICAgICksCiAgICApOwogICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24obWlsbGlzZWNvbmRzOiAxMDApKTsKICAgIGV4cGVjdChyZWNlaXZlZE5vdGlmaWNhdGlvbiwgaXNOb3ROdWxsKTsKICAgIGV4cGVjdChyZWNlaXZlZE5vdGlmaWNhdGlvbiEudGl0bGUsICd0aXRsZScpOwogICAgZXhwZWN0KHJlY2VpdmVkTm90aWZpY2F0aW9uIS5ib2R5LCAnZXhhbXBsZSBib2R5Jyk7CiAgfSk7CgogIHRlc3QoJ2ZldGNoIG5vdGlmaWNhdGlvbnMsIHNob3VsZCByZXR1cm4gMjAgbm90aWZpY2F0aW9ucycsICgpIGFzeW5jIHsKICAgIGZpbmFsIG5vdGlmaWNhdGlvbnMgPSBhd2FpdCByZXBvc2l0b3J5LmdldCgndXNlcklkJyk7CiAgICBleHBlY3Qobm90aWZpY2F0aW9ucy5kYXRhLmxlbmd0aCwgMjApOwogICAgZmluYWwgZmlyc3ROb3RpZiA9IG5vdGlmaWNhdGlvbnMuZGF0YS5maXJzdDsKICAgIGV4cGVjdChmaXJzdE5vdGlmLmlkLCBpc05vdE51bGwpOwogICAgZXhwZWN0KGZpcnN0Tm90aWYudGl0bGUsIGlzTm90TnVsbCk7CiAgICBleHBlY3QoZmlyc3ROb3RpZi5ib2R5LCBpc05vdE51bGwpOwogICAgZXhwZWN0KGZpcnN0Tm90aWYuY3JlYXRlZEF0LCBpc05vdE51bGwpOwogIH0pOwoKICB0ZXN0KCdyZWFkIG5vdGlmaWNhdGlvbicsICgpIGFzeW5jIHsKICAgIGZpbmFsIG5vdGlmaWNhdGlvbnMgPSBhd2FpdCByZXBvc2l0b3J5LmdldCgndXNlcklkJyk7CiAgICBmaW5hbCByZWFkTm90aWZpY2F0aW9uID0gYXdhaXQgcmVwb3NpdG9yeS5yZWFkKAogICAgICAndXNlcklkJywKICAgICAgbm90aWZpY2F0aW9ucy5kYXRhLmZpcnN0LAogICAgKTsKICAgIGV4cGVjdChyZWFkTm90aWZpY2F0aW9uLCBpc05vdE51bGwpOwogICAgZXhwZWN0KHJlYWROb3RpZmljYXRpb24uc2VlbiwgaXNUcnVlKTsKICB9KTsKCiAgdGVzdCgnbGlzdGVuIHRvIHVzZXIgbm90aWZpY2F0aW9ucyBjb3VudCcsICgpIGFzeW5jIHsKICAgIGZpbmFsIGNvdW50JCA9IHJlcG9zaXRvcnkubGlzdGVuVG9VbnJlYWROb3RpZmljYXRpb25zQ291bnQoJ3VzZXJJZCcpOwogICAgZmluYWwgY291bnQgPSBhd2FpdCBjb3VudCQuZmlyc3Q7CiAgICBleHBlY3QoY291bnQsIDEpOwogIH0pOwp9Cg==","type":"text"},{"path":"test/modules/notifications/services/local_notifier_fake.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL2FwaS9sb2NhbF9ub3RpZmllci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3Byb3ZpZGVycy9tb2RlbHMvbm90aWZpY2F0aW9uLmRhcnQnOwovLyBpZ25vcmU6IGRlcGVuZF9vbl9yZWZlcmVuY2VkX3BhY2thZ2VzCgpjbGFzcyBGYWtlTG9jYWxOb3RpZmllciBpbXBsZW1lbnRzIExvY2FsTm90aWZpZXIgewogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiBzaG93KE5vdGlmaWNhdGlvblNldHRpbmdzIHNldHRpbmdzLCBOb3RpZmljYXRpb24gbWVzc2FnZSkgYXN5bmMgewogICAgcmV0dXJuOwogIH0KfQo=","type":"text"},{"path":"test/modules/notifications/ui/notifications_page_test.dart","data":"aW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvY29yZS9kYXRhL21vZGVscy91c2VyLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9jb3JlL3N0YXRlcy9tb2RlbHMvdXNlcl9zdGF0ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmFwcGFyZW5jZV9raXQvbW9kdWxlcy9ub3RpZmljYXRpb25zL3VpL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uX3RpbGUuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy91aS9ub3RpZmljYXRpb25zX3BhZ2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphcHBhcmVuY2Vfa2l0L21vZHVsZXMvbm90aWZpY2F0aW9ucy91aS93aWRnZXRzL25vdGlmaWNhdGlvbl90aWxlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6YXBwYXJlbmNlX2tpdC9tb2R1bGVzL3N1YnNjcmlwdGlvbi9kb21haW4vc3Vic2NyaXB0aW9uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXJfdGVzdC9mbHV0dGVyX3Rlc3QuZGFydCc7CgppbXBvcnQgJy4uLy4uLy4uL3Rlc3RfdXRpbHMuZGFydCc7Cgp2b2lkIG1haW4oKSB7CiAgZ3JvdXAoJ1VzZXIgaXMgY29ubmVjdGVkJywgKCkgewogICAgdGVzdFdpZGdldHMoCiAgICAgICdMb2FkIG5vdGlmaWNhdGlvbnMgPT4gc2hvdWxkIHNob3cgMjAgbm90aWZpY2F0aW9ucycsCiAgICAgICh0ZXN0ZXIpIGFzeW5jIHsKICAgICAgICBhd2FpdCB0ZXN0ZXIucHVtcFBhZ2UoCiAgICAgICAgICB1c2VyU3RhdGU6IFVzZXJTdGF0ZSgKICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiBjb25zdCBTdWJzY3JpcHRpb24uYWN0aXZlKCksCiAgICAgICAgICAgIHVzZXI6IFVzZXIuYXV0aGVudGljYXRlZCgKICAgICAgICAgICAgICBpZDogJzEnLAogICAgICAgICAgICAgIGVtYWlsOiAndXNlckBlbWFpbC5jb20nLAogICAgICAgICAgICAgIG5hbWU6ICd1c2VyIG5hbWUnLAogICAgICAgICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZVRpbWUubm93KCkuc3VidHJhY3QoY29uc3QgRHVyYXRpb24oZGF5czogNCkpLAogICAgICAgICAgICApLAogICAgICAgICAgKSwKICAgICAgICAgIGhvbWU6IE5vdGlmaWNhdGlvbnNQYWdlKCksCiAgICAgICAgKTsKICAgICAgICBhd2FpdCB0ZXN0ZXIucHVtcChjb25zdCBEdXJhdGlvbihzZWNvbmRzOiAzKSk7CiAgICAgICAgYXdhaXQgdGVzdGVyLnB1bXBBbmRTZXR0bGUoKTsKICAgICAgICBleHBlY3QoZmluZC5ieVR5cGUoTm90aWZpY2F0aW9uc1BhZ2UpLCBmaW5kc09uZVdpZGdldCk7CiAgICAgICAgZXhwZWN0KGZpbmQudGV4dCgiTm90aWZpY2F0aW9ucyIpLCBmaW5kc09uZVdpZGdldCk7CiAgICAgICAgZXhwZWN0KGZpbmQuYnlUeXBlKE5vdGlmaWNhdGlvblRpbGUpLCBmaW5kc0F0TGVhc3ROV2lkZ2V0cygzKSk7CiAgICAgIH0sCiAgICApOwoKICAgIHRlc3RXaWRnZXRzKAogICAgICAnTG9hZCBub3RpZmljYXRpb25zLCB3YWl0IDMgc2Vjb25kcyA9PiBhbGwgbm90aWZpY2F0aW9ucyBhcmUgbm93IHJlYWQnLAogICAgICAodGVzdGVyKSBhc3luYyB7CiAgICAgICAgYXdhaXQgdGVzdGVyLnB1bXBQYWdlKAogICAgICAgICAgdXNlclN0YXRlOiBVc2VyU3RhdGUoCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbjogY29uc3QgU3Vic2NyaXB0aW9uLmFjdGl2ZSgpLAogICAgICAgICAgICB1c2VyOiBVc2VyLmF1dGhlbnRpY2F0ZWQoCiAgICAgICAgICAgICAgaWQ6ICcxJywKICAgICAgICAgICAgICBlbWFpbDogJ3VzZXJAZW1haWwuY29tJywKICAgICAgICAgICAgICBuYW1lOiAndXNlciBuYW1lJywKICAgICAgICAgICAgICBjcmVhdGlvbkRhdGU6IERhdGVUaW1lLm5vdygpLnN1YnRyYWN0KGNvbnN0IER1cmF0aW9uKGRheXM6IDQpKSwKICAgICAgICAgICAgKSwKICAgICAgICAgICksCiAgICAgICAgICBob21lOiBOb3RpZmljYXRpb25zUGFnZSgpLAogICAgICAgICk7CiAgICAgICAgdmFyIGZpcnN0Tm90aWZpY2F0aW9uID0gdGVzdGVyLmZpcnN0V2lkZ2V0PE5vdGlmaWNhdGlvblRpbGVDb21wb25lbnQ+KAogICAgICAgICAgZmluZC5ieVR5cGUoTm90aWZpY2F0aW9uVGlsZUNvbXBvbmVudCksCiAgICAgICAgKTsKICAgICAgICBleHBlY3QoZmlyc3ROb3RpZmljYXRpb24ubm90aWZpY2F0aW9uLnJlYWRBdCwgaXNOdWxsKTsKCiAgICAgICAgYXdhaXQgdGVzdGVyLnB1bXAoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMykpOwogICAgICAgIGF3YWl0IHRlc3Rlci5wdW1wQW5kU2V0dGxlKCk7CiAgICAgICAgZmlyc3ROb3RpZmljYXRpb24gPSB0ZXN0ZXIuZmlyc3RXaWRnZXQ8Tm90aWZpY2F0aW9uVGlsZUNvbXBvbmVudD4oCiAgICAgICAgICBmaW5kLmJ5VHlwZShOb3RpZmljYXRpb25UaWxlQ29tcG9uZW50KSwKICAgICAgICApOwoKICAgICAgICBleHBlY3QoCiAgICAgICAgICBmaXJzdE5vdGlmaWNhdGlvbi5ub3RpZmljYXRpb24ucmVhZEF0LAogICAgICAgICAgaXNOb3ROdWxsLAogICAgICAgICAgcmVhc29uOiAiQWxsIG5vdGlmaWNhdGlvbnMgc2hvdWxkIGJlIHJlYWQgYWZ0ZXIgMyBzZWNvbmRzIiwKICAgICAgICApOwogICAgICB9LAogICAgKTsKCiAgICB0ZXN0V2lkZ2V0cygKICAgICAgJ0xvYWQgbm90aWZpY2F0aW9ucywgc2Nyb2xsIGRvd24gPT4gYSBzZWNvbmQgcGFnZSBvZiBub3RpZmljYXRpb25zIHNob3VsZCBiZSBsb2FkZWQnLAogICAgICAodGVzdGVyKSBhc3luYyB7CiAgICAgICAgYXdhaXQgdGVzdGVyLnB1bXBQYWdlKAogICAgICAgICAgdXNlclN0YXRlOiBVc2VyU3RhdGUoCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbjogY29uc3QgU3Vic2NyaXB0aW9uLmFjdGl2ZSgpLAogICAgICAgICAgICB1c2VyOiBVc2VyLmF1dGhlbnRpY2F0ZWQoCiAgICAgICAgICAgICAgaWQ6ICcxJywKICAgICAgICAgICAgICBlbWFpbDogJ3VzZXJAZW1haWwuY29tJywKICAgICAgICAgICAgICBuYW1lOiAndXNlciBuYW1lJywKICAgICAgICAgICAgICBjcmVhdGlvbkRhdGU6IERhdGVUaW1lLm5vdygpLnN1YnRyYWN0KGNvbnN0IER1cmF0aW9uKGRheXM6IDQpKSwKICAgICAgICAgICAgKSwKICAgICAgICAgICksCiAgICAgICAgICBob21lOiBOb3RpZmljYXRpb25zUGFnZSgpLAogICAgICAgICk7CiAgICAgICAgYXdhaXQgdGVzdGVyLmZsaW5nKAogICAgICAgICAgZmluZC5ieVR5cGUoQ3VzdG9tU2Nyb2xsVmlldyksCiAgICAgICAgICBjb25zdCBPZmZzZXQoMCwgLTIwMDApLAogICAgICAgICAgMTAwMCwKICAgICAgICApOwogICAgICAgIGF3YWl0IHRlc3Rlci5mbGluZygKICAgICAgICAgIGZpbmQuYnlUeXBlKEN1c3RvbVNjcm9sbFZpZXcpLAogICAgICAgICAgY29uc3QgT2Zmc2V0KDAsIC0yMDAwKSwKICAgICAgICAgIDEwMDAsCiAgICAgICAgKTsKICAgICAgICBhd2FpdCB0ZXN0ZXIucHVtcChjb25zdCBEdXJhdGlvbihzZWNvbmRzOiAzKSk7CiAgICAgICAgYXdhaXQgdGVzdGVyLnB1bXBBbmRTZXR0bGUoKTsKICAgICAgICBmaW5hbCBub3RpZmljYXRpb25zID0gdGVzdGVyLndpZGdldExpc3Q8Tm90aWZpY2F0aW9uVGlsZUNvbXBvbmVudD4oCiAgICAgICAgICBmaW5kLmJ5VHlwZShOb3RpZmljYXRpb25UaWxlQ29tcG9uZW50KSwKICAgICAgICApOwogICAgICAgIC8vIHJlZmFjdG9yIHRoaXMKICAgICAgICBmaW5hbCBwYWdlID0gbm90aWZpY2F0aW9ucy5sYXN0Lm5vdGlmaWNhdGlvbi5pZCEuc3BsaXQoIl8iKS5maXJzdDsKICAgICAgICBleHBlY3QocGFnZSwgIjEiKTsKICAgICAgfSwKICAgICk7CiAgfSk7Cn0K","type":"text"}],"hooks":[],"name":"module_notifications","description":"A new brick created with the Mason CLI.","version":"0.1.0+1","environment":{"mason":">=0.1.0-dev.51 <0.1.0"},"readme":{"path":"README.md","data":"IyBtb2R1bGVfbm90aWZpY2F0aW9ucwoKWyFbUG93ZXJlZCBieSBNYXNvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9lbmRwb2ludD91cmw9aHR0cHMlM0ElMkYlMkZ0aW55dXJsLmNvbSUyRm1hc29uLWJhZGdlKV0oaHR0cHM6Ly9naXRodWIuY29tL2ZlbGFuZ2VsL21hc29uKQoKQSBuZXcgYnJpY2sgY3JlYXRlZCB3aXRoIHRoZSBNYXNvbiBDTEkuCgpfR2VuZXJhdGVkIGJ5IFttYXNvbl1bMV0g8J+nsV8KCiMjIEdldHRpbmcgU3RhcnRlZCDwn5qACgpUaGlzIGlzIGEgc3RhcnRpbmcgcG9pbnQgZm9yIGEgbmV3IGJyaWNrLgpBIGZldyByZXNvdXJjZXMgdG8gZ2V0IHlvdSBzdGFydGVkIGlmIHRoaXMgaXMgeW91ciBmaXJzdCBicmljayB0ZW1wbGF0ZToKCi0gW09mZmljaWFsIE1hc29uIERvY3VtZW50YXRpb25dWzJdCi0gW0NvZGUgZ2VuZXJhdGlvbiB3aXRoIE1hc29uIEJsb2ddWzNdCi0gW1ZlcnkgR29vZCBMaXZlc3RyZWFtOiBGZWxpeCBBbmdlbG92IERlbW9zIE1hc29uXVs0XQotIFtGbHV0dGVyIFBhY2thZ2Ugb2YgdGhlIFdlZWs6IE1hc29uXVs1XQotIFtPYnNlcnZhYmxlIEZsdXR0ZXI6IEJ1aWxkaW5nIGEgTWFzb24gYnJpY2tdWzZdCi0gW01lZXQgTWFzb246IEZsdXR0ZXIgVmlraW5ncyAyMDIyXVs3XQoKWzFdOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24KWzJdOiBodHRwczovL2RvY3MuYnJpY2todWIuZGV2ClszXTogaHR0cHM6Ly92ZXJ5Z29vZC52ZW50dXJlcy9ibG9nL2NvZGUtZ2VuZXJhdGlvbi13aXRoLW1hc29uCls0XTogaHR0cHM6Ly95b3V0dS5iZS9HNFBUakE2dHBUVQpbNV06IGh0dHBzOi8veW91dHUuYmUvcWpBMEpGaVBNblEKWzZdOiBodHRwczovL3lvdXR1LmJlL284QjFFZmNVaXN3Cls3XTogaHR0cHM6Ly95b3V0dS5iZS9MWGhnaUY1SGlRZwo=","type":"text"},"changelog":{"path":"CHANGELOG.md","data":"IyAwLjEuMCsxCgotIFRPRE86IERlc2NyaWJlIGluaXRpYWwgcmVsZWFzZS4K","type":"text"},"license":{"path":"LICENSE","data":"VE9ETzogQWRkIHlvdXIgbGljZW5zZSBoZXJlLgo=","type":"text"},"vars":{"webCompat":{"type":"boolean","description":"add web notifications compatibility","default":false,"prompt":"Add web notifications compatibility?"},"firebase":{"type":"boolean","description":"generate bricks for firebase","default":false},"supabase":{"type":"boolean","description":"generate bricks for supabase","default":false},"http_client":{"type":"boolean","description":"generate bricks for http client","default":false}}});